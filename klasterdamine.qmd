# Klasterdamine {#sec-klasterdamine}

Klasterdamise käigus jaotatakse objektid rühmadesse selliselt, et ühes rühmas olevad objektid on rohkem sarnased üksteisega kui teistes rühmades olevate objektidega. Nendeks objektideks on enamasti vaatlused, aga klasterdada saab ka tunnuseid. Tunnuste klasterdamisel võivad olla aluseks vaatlused, seosekaardi  puhul aga nt tunuste korrelatsioonid teiste tunnustega (@sec-korrelatsioon). Vaatluste sarnasust hinnatakse selle järgi, kui palju erinevad nende vaatluste mingite tunnuste väärtused. 

Klastritesse jaotamine põhineb tavaliselt mitme tunnuse väärtustel, aga vaatlusi saab klasterdada ka ühe tunnuse alusel. Klastrite aluseks olevad tunnused peavad olema mõõdetud arvskaalal. Ka nimitunnuste alusel saab vaatlusi klasterdada, aga nende põhjal sarnasuse hindamiseks tuleb need esmalt arvskaalale teisendada. 

::: {.callout-important}
**Klasterdamine** (*clustering*) on objektide klastritesse määramine nende objektide sarnasuse alusel. Enamasti on nendeks objektideks vaatlused ja sellisel juhul on tekkivates klastrites üksteisega valitud tunnuste väärtuste alusel sarnased vaatlused nii, et sarnasus klastrite sees on suurem kui klastrite vahel.
:::

Sarnaselt klassifitseerimisega on ka klasterdamise tulemuseks vaatluste jagunemine rühmadesse. Siiski on tegemist põhimõtteliselt erinevate ülesannetega. Klasterdamise puhul ei ole tegelikud rühmad teada ja me ei saa seega hinnata ka selle tegevuse täpsust. Kui klassid esindavad enamasti tähenduslikke kogumeid, siis klasterdamise korral peame tekkinud klastritele ise tähenduse omistama.

Klasterdamine ei ole üks konkreetne protseduur, vaid pigem ülesanne, mille lahendamiseks on palju erinevaid viise. Kuivõrd klasterdamise tulemus sõltub valitud protseduurist ja selle rakendamise parameetritest, siis on iga klasterdamise teel saadud objektide jaotamine rühmadesse vaid üks paljudest võimalikest. Nii ei paku klasteranalüüs erinevalt paljudest teistest andmeanalüüsi tegevustest unikaalset lahendust, mistõttu klasterdamise tulemust ei käsitleta sageli teaduslikuna. Klasterdamist saab kasutada aga nt andmete paremaks mõistmiseks enne edasist analüüsi (*exploratory data analysis*), vaatluste olemuse määratlemiseks (*profiling*) või erindite tuvastamiseks (*anomaly detection*).

Klasteranalüüsi saab kasutada muuhulgas alljärgnevatele küsimustele vastamiseks.

- Millistesse tüüpidesse jagunevad kliendid?
- Mis tooted või teenused on sarnased?
- Millised tehingud on tavapäratud?

Viisid klasterdamiseks erinevad põhimõtte pooles selle järgi, mille alusel määratakse objektide sarnasus: 

- kaugus
	- objektide või 
	- objektide ja klastrikeskmiste vahel, 
- väärtuste jaotus, 
- objektide tihedus,  
- närvivõrgud.

Kõige laialdasemalt kasutatakse klasterdamiseks ilmselt 

- objektide kaugustel põhinevat hierarhilist klasterdamist (@sec-hierarhiline) ning 
- objektide ja klastrikeskmiset kaugusel põhinevat K-keskmiste klasterdamist (@sec-kkeskmised).

## Klastrite tõlgendamine

Kuna klasterdamine lähtub ainult arvskaalal olevate tunnuste väärtusest, siis ei ole igal klastril konkreetset nimetust nii nagu klassifitseerimise korral. Klastritele sisulise tähenduse andmiseks peame klastreid võrdlema mingite tunnuste väärtuste alusel.

Uurime järgnevalt võimalusi klastrite sisuliseks tõlgendamiseks maailma riikide klasterdamise näitel. Enne klasterdamist peaksime eemaldama puuduvate väärtustega riigid ja standardiseerima tunnuste väärtused. Arvutuste lihtsustamiseks võime sisestada arvtunnused eraldi andmetabelisse.

```{r}
library('magrittr')
riigid <- read.csv('andmed/countries.csv')
rownames(riigid) <- riigid$country
riigid %<>% na.omit
# Eralda arvtunnused
arvtunnused <- riigid[, sapply(riigid, is.numeric)]
arvtunnused %<>% scale
# Määra klastrid
set.seed(0)
kkesk <- kmeans(arvtunnused, centers = 5, nstart = 50)
klastrid <- kkesk$cluster
```

Kõige lihtsam on klastreid arvtunnuste alusel kujutada paariviisilistel hajuvusjoonistel.

```{r}
pairs(arvtunnused, cex = .5, col = klastrid)
```

Klasterdamise tulemuse esitamiseks võimalikult paljude arvtunnuste lõikes korraga saame kujutada vaatlusi ka kahe peakomponendi alusel hajuvusjoonisel. Klastreid saab kujutada esitades vaatlused klastrile vastava värvi või kujundiga.

```{r}
#| message: false
library('factoextra')
fviz_pca_biplot(prcomp(arvtunnused), habillage = klastrid)
```

Samuti saab koondada kõik vaatlusted klastri alusel ja võrrelda klastrite keskmisi tunnuste lõikes. Keskmise asemel võime kasutada ka mõnda muud mõõdikut. Klastrite kaupa saame andmetabeli kokku võtta, kasutades funktsiooni `aggregate()`. 

```{r}
aggregate(arvtunnused, list(klaster = klastrid), mean)
```

Mõnevõrra ilmekamalt saame klastrite keskmisi võrrelda seosekaardil.

```{r}
aggregate(arvtunnused, list(klaster = klastrid), mean)[-1] %>% t %>% heatmap
```

Klastreid aitab kirjeldada ka otsusepuu (@sec-otsusepuu), milles klaster on väljundtunnus ja klastreid kirjeldavad tunnused on sisendtunnusteks. Otsusesõlmede tingimused on sisukamad, kui valime sisendtunnusteks väärtused standardiseerimata kujul.

```{r}
library('rpart')
library('rpart.plot')
otsusepuu <- rpart(as.character(klastrid) ~ ., riigid[, -1])
rpart.plot(otsusepuu)
```

Kui meie andmetes on vaatlustel mingi klass, siis saame uurida ka seda, kas ja kui hästi langeb see kokku leitud klastritega.

```{r}
table(klastrid, riigid$region)
```

Vajadusel võime anda igale klastrile ka numbri asemel nimetuse lähtudes eelnevast klastrite võrdlustest. Selle nimetuse saab määrata andmetabelisse igale vaatlusele edasiseks analüüsiks.

```{r}
nimed <- c('Arenguriigid', 'Arenevad riigid', 'Põllumajandusmaad', 'Arenenud riigid', 'Suured riigid')
riigid$klaster <- nimed[klastrid]
str(riigid)
```