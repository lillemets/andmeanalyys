[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Oijee! Andmeteadus",
    "section": "",
    "text": "Sellel lehel on esitatud õpik, mida võib käsitleda sissejuhatusena kaasaegsesse kvantitatiivsesse andmeanalüüsi. Nii ei ole siin esitatud kuigi palju traditsioonilist statistikat ega muude kui arvandmete analüüsimist. Andmeteadusele kohaselt on enamuse käsitletavate meetodite eesmärk prognoosimine, mitte selgitamine. Rõhuasetus on meetodite praktilisel rakendamisel, mitte nende teoreetilise tausta selgitamisel.\nÕpik on abivahend kursuse Sissejuhatus andmeteadusesse ja -analüüsi jaoks Eesti Maaülikoolis.\nLogol on kujutatud andmeanalüüs DALL-E masinõppe mudeli nägemuses."
  },
  {
    "objectID": "andmeteadus.html",
    "href": "andmeteadus.html",
    "title": "1  Andmed ja andmeteadus",
    "section": "",
    "text": "Andmed on teave mingi nähtuse kohta enamasti lihtsustatud kujul. Andmed on tegelikkuse lihtsustus (abstraktsioon), mille aluseks on andmete koguja poolt tehtud otsused ja valikud. Seetõttu ei ole andmed kunagi objektiivsed, vaid alati kallutatud ja erapoolikud (Kelleher & Tierney, 2018). See erapoolikus sõltub sellest, mille alusel ja kuidas mingit nähtust on mõõdetud (operatsionaliseeritud). Andmete kallutatust saab esitada täpsuse ja usaldusväärsuse alusel.\nTäpsus (validity) kirjeldab andmete õigsust või kehtivust. Täpselt mõõdetud andmed näitavad täpselt seda, mida soovime, ega ole kallutatud1. Nii sõltub andmete täpsus eelkõige sellest, mis üldist nähtust mõõdetakse.1 Nt korruptsiooni mõõdetakse selle alusel, mil määral inimesed seda tajuvad. See ei ole täpne, sest ei näita tegelikku korruptsiooni.\nUsaldusväärsus (reliability) kirjeldab andmete hajuvust. Usaldusväärselt mõõdetud andmed annavad igal kordusmõõtmisel sama tulemuse. Kui füüsikaliste mõõtmiste korral sõltub usaldusväärsus ka mõõtmisvahendist, siis sotsiaalteadustes on see seotud eelkõige mõõdetavate nähtuste ja mõõtmise ajaga2. Usaldusväärsus oleneb mõõtmise viisist ja sellest, keda või mida konkreetselt mõõdetakse.2 Nt mõõtes suhtumist toidu ohutusse, siis ei saa me teha usaldusväärseid üldistusi, kui uurime uudistega rohkem kursis olevaid isikuid ja küsitleme ajal, kui meedias kajastatakse palju mõnda toidumürgituse juhtumit.\n\n\n\n\n\n\nPea meeles!\n\n\n\nAndmete täpsust ja usaldusväärsust on oluline silmas pidada andmeanalüüsi tulemuste tõlgendamisel.\n\n\nMingi konkreetse andmekogumi iseloomustamiseks on kaks peamist viisi. Andmeteaduses eristatakse andmeid enamasti praktilises mõttes andmete vormi alusel. Nii võib andmik olla kas\n\nkorrastatud (structured) korrektselt vormistatud andmetabel,\nkorrastamata (unstructured) piltide, dokumentide, videote vms kujul või\npoolkorrastatud (semistructured), kui andmeväljad ei ole esitatud tabelina, aga neid saab üksteisega seostada.\n\nSelleks et andmeid analüüsida on enamasti siiski vajalik need korrastatud andmetabeliks vormistada.\nTeoreetilisemas mõttes eristatakse andmike nende päritolu alusel:\n\nprimaarandmed on kogutud konkreetse analüüsi jaoks,\nsekundaarandmed aga mingil muul eesmärgil.\n\nKui andmed on kogutud konkreetse analüüsi jaoks, siis on need suurema tõenäosusega täpsed ja usaldusväärsed.\nAndmetega seotud toimingud saab kokku võtta nelja A abil (Saltz & Stanton, 2017):\n\narhitektuur (architecture),\nammutamine (acquisition),\nanalüüs (analysis),\narhiveerimine (archiving)."
  },
  {
    "objectID": "andmeteadus.html#andmeteadus-ei-ole-teadus",
    "href": "andmeteadus.html#andmeteadus-ei-ole-teadus",
    "title": "1  Andmed ja andmeteadus",
    "section": "1.2 Andmeteadus ei ole teadus",
    "text": "1.2 Andmeteadus ei ole teadus\nMõistet “andmeteadus” hakati kasutama 1990. aastatel (Kelleher & Tierney, 2018). Väga suurte korrastamata andmike ilmumine ja arvutitehnika areng tähendas, et andmete analüüsimiseks arvutitel tuli kuidagi tuua sisse statistilistele meetoditele omane rangus. Suurte andmike uurimisel arvutitel ei piisanud enam ainult programmeerimise oskusest, vaid vaja oli ka teadmisi andmete ja statistika kohta.\nSeega võibki andmeteaduseks pidada statistiliste ja arvutitel põhinevate tehnikate rakendamist selleks, et saada parem arusaam mingist konkreetsest andmikust. Sealjuures ei pruugi need andmikud olla tavapärased andmetabelid, vaid on sageli korrastamata andmed. Kuna igasuguses vormis andmeid on võimalik teisendada numbriteks, saavad andmeteadustes kasutatavad protseduurid hakkama ka mahukate korrastamata andmikega 3. Otsitav arusaam nende andmete kohta võib seisneda nt mustrite, klastrite või erindite tuvastamises. Kuna andmeteaduses ühendatakse matemaatilised tehnikad ja klassikalised statistilised meetodid nende rakendamisega arvutitel, siis võib andmeteadustes kasutatavaid protseduure nimetada algoritmideks.3 Korrastamata suurandmed on nt veebilehtede külastatavus, sotsiaalmeedia postitused, erinevate sensorite poolt kogutud teave.\nNeed algoritmid käsitlevad osa andmetest sisenditena ja teist osa väljunditena. Nende kahe vaheliste seoste alusel tuvastavad algoritmid (varjatud) mustreid, mida sageli klassikaliste statistiliste meetoditega ei ole võimalik leida. Praktilistes andmeteaduse rakendustes on nende algoritmide lõppeesmärk siiski prognoosida sisendite alusel kõige sobivam väljund selliste andmeväljade kohta, mille puhul see väljund teada ei ole 4.4 Algoritmide abil saame prognoosida nt laenusaajate tõenäosuse laen tagasi maksta (väljund) teades nende sotsiaal-majanduslikke näitajaid (sisendid).\n\n\n\n\n\n\nMõiste\n\n\n\nAndmeteadus on statistiliste ja arvutitel põhinevate tehnikate rakendamine andmikest mustrite tuvastamiseks ja nende alusel prognooside tegemiseks.\n\n\nEnamus katseid andmeteadust mõtestada teevad seda mitme nähtuse kaudu (Kelleher & Tierney, 2018; Pinheiro et al., 2021; Spiegelhalter, 2019; Taddy, 2019): klassikaline statistika, algoritmid, suurandmed, masinõpe, andmekaeve, andmehaldus ja andmebaasid, erialateadmised, andmete kasutamise eetika. Väga laias mõttes võibki andmeteaduseks pidada kõike, mis on mingilgi viisil andmetega seotud. Nii on kirjeldatud andmeteadust ka tegevuste kaudu, hõlmates andmekogumist, andmete haldamist ja korrastamist, analüüsimist ja tõlgendamist (Çetinkaya-Rundel & Ellison, 2021; Kelleher & Tierney, 2018). Selline väga lai lähenemine võib olla ka põhjuseks, miks arvatakse, et andmeteadus on ületähtsustatud (Taddy, 2019): mõistet on kasutatud viitamaks ka tegevustele, mis tegelikult ei hõlma andmeteadust. On tavapärane, et ennast andmeteadlaseks nimetavatel inimestel puudub vastav hariduslik ettevalmistus ja teadustöö kogemus.\nNii võib väita, et suur osa sellest, mida nimetatatakse andmeteaduseks on pigem andmeanalüüs ja sellega tegelevad inimesed mitte teadlased, vaid analüütikud. Ka mõiste “andmeteadus” kasutusele võtmisel ei olnud rõhuasetus teadustööl5. Seega kui peame teaduseks uue teadmise loomist tavapärase teadustöö mõistes, siis ei ole andmeteaduse rakendamine iseenesest teadus ega teaduslik, vaid pigem praktiline andmeanalüüs arvutitel.5 Mõiste esimesi kasutusi põhjendati nii: “Data Science is likely the remaining good name reserved for us” (Wu, 1997)."
  },
  {
    "objectID": "andmeteadus.html#andmeteadus-või-statistika",
    "href": "andmeteadus.html#andmeteadus-või-statistika",
    "title": "1  Andmed ja andmeteadus",
    "section": "1.3 Andmeteadus või statistika?",
    "text": "1.3 Andmeteadus või statistika?\nAndmete analüüsimisel võivad olla väga erinevad eesmärgid, sageli isegi mitu korraga. Selleks võib olla mõne nähtuse kirjeldamine, üldistamine, prognoosimine või juhtimine (description, inference, prediction, prescription). Traditsiooniliselt on klassikalise statistika arenguloos olnud peamine tähelepanu sellel, kuidas kõige täpsemini teha mingi valimi alusel üldistusi kogumi kohta. Arengud andmeteaduses ja eelkõige masinõppes on olnud samas aga suunatud sellele, kuidas kõige täpsemini mingit tulemust prognoosida, jättes kõrvale üldistamise ja kõik muud kaalutlused.\nNii on andmeteaduses sageli rakendava masinõppe korral mudel enamasti nö must kast, mille alusel ei ole võimalik tuvastada, kuidas mingi konkreetse prognoosini jõuti. Enamuse statistika meetodite puhul on selle mudeli tõlgendamine aga just peamine eesmärk. Seega, kui andmeteadustes on rõhuasetus suurima võimaliku prognoosi täpsuse saavutamisel, siis statistikas on oluline koostada täpne ja püsiv mudel, mis rahuldaks kõik teoreetilised eeldused ja pakuks seeläbi kõige mõistlikuma selgituse tunnuste vahelistele seostele. Nii põhineb suur enamus teadustööst statistika meetoditel, samas kui praktilisemates rakendustes (nt tehnoloogias ja ärinduses) vajatakse pigem andmeteaduse poolt pakutavaid prognoose.\n\n\n\n\n\n\nMõiste\n\n\n\nStatistilisi meetodeid kasutatakse enamasti tunnuste vaheliste seoste selgitamiseks ja selle käigus ka valimi alusel kogumi kohta üldistuste tegemiseks. Andmeteadustes rakendatava masinõppe eesmärk on aga eelkõige võimalikult täpsete prognooside tegemine.\n\n\nKui statistilisi meetodeid kasutades on enamasti oluline teha valimi alusel järeldusi kogumi kohta, siis andmeteadustes ei pöörata kogumile tähelepanu ja sageli eeldatakse vaikimisi, et olemas olev valim on kogumi suhtes esinduslik. Seetõttu keskendub statistika andmete kirjeldamisele teoreetilistele jaotuste kaudu, samas kui andmeteadustes kasutatakse üldistuste tegemiseks taasvalikut (resampling). See on siiski pigem üldistus ja tegelikkuses kasutatakse mõlemas lähenemises parameetrilisi ja mitteparameetrilisi meetodeid.\nKuna aga statistikas oletatakse, et andmed järgivad mingisugust teoreetilist jaotust, siis igasuguste punkthinnangute leidmise käigus arvutatakse ka selle oodatav hajuvus, vähemalt üldistamise korral. Kuigi andmeteadustes kasutatava masinõppe rakendamisel on prognoosi täpsus oluline, siis selle prognoosi hajuvus nt usaldusvahemike kontekstis enamasti mitte6. Erinevale lähenemisele ebakindlusele tulemuse suhtes viitab ka see, kuidas arvutuste tulemust nimetatakse: statistikas räägitakse võimalikest hinnangutest (estimate), andmeteadustes aga lihtsalt mõõtmise tulemusest (metric). Ehk statistikas keskendutakse palju tulemuse ebakindluse hindamisele, samas kui andmeteadustes ainult tulemusele endale.6 Nt kogumisse kuuluvate ettevõtete keskmise käibe hindamisel valimi alusel on statistikas oluline esitada, millisesse vahemikku see jääb, samas kui masinõppes oleks oluline ainult keskmine ise\nPraktilisemas mõttes rakendatakse nende kahe lähenemise puhul ka erinevaid meetodeid erinevatel andmetel. Isegi suur osa kaasajal kasutatavast statistikast kujunes ajal, kui andmikud olid väikesed ja arvutusi tehti enamasti käsitsi paberil. Seega statistilised arvutused pidid olema käsitsi lahendamiseks piisavalt lihtsad, mistõttu vastavad meetodid põhinesid suurel määral matemaatikateoorial ja paljudel eeldustel andmete jaotuse kohta. Andmeteadus seevastu on arenenud aga koos suurandmete leviku ja arvutite võimsuse kasvuga. Nii hõlmavad paljud andmeteaduste rakendused suurandmeid (sh reaalajas tekkivaid andmeid), mis vajavad suurt arvutusvõimsust ja vähem teoreetilisi eeldusi. Kui lihtsustada, siis võib öelda, et statistika põhineb matemaatikal, andmeteadus aga arvutamisel.\n\nLihtsustatud statistika ja andmeteaduse (masinõppe) võrdlus. Tegelikkuses esineb kahes veerus palju kattuvusi.\n\n\n\n\n\n\n\n\nStatistika\nAndmeteadus (masinõpe)\n\n\n\n\nEesmärk\nÜldistamine\nPrognoosimine\n\n\nEbakindluse hindamine\nTeoreetilised jaotused\nTaasvalik\n\n\nEbakindlus\nHinnangu osa\nEbaoluline\n\n\nAndmed\nKorrastatud väikese või keskmise suurusega\nKorrastamata suurandmed\n\n\nMeetodid\nMatemaatikal põhinevad ja traditsioonilised\nArvutamisel põhinevad ja hiljutised\n\n\n\n\n\n\n\n\nÇetinkaya-Rundel, M., & Ellison, V. (2021). A Fresh Look at Introductory Data Science. Journal of Statistics and Data Science Education, 29(sup1), S16–S26. https://doi.org/10.1080/10691898.2020.1804497\n\n\nKelleher, J. D., & Tierney, B. (2018). Data science. The MIT Press.\n\n\nPinheiro, C., Patetta, M., & Safari, an O. M. C. (2021). Introduction to Statistical and Machine Learning Methods for Data Science. SAS Institute Inc.\n\n\nSaltz, J. S., & Stanton, J. M. (2017). An introduction to data science. SAGE Publications, Inc.\n\n\nSpiegelhalter, D. J. (2019). The art of statistics: learning from data. Pelican Books.\n\n\nTaddy, M. (2019). Business data science: combining machine learning and economics to optimize, automate, and accelerate business decisions (First edition). McGraw-Hill Education.\n\n\nWu, J. (1997). Statistics = data science? http://www2. isye. gatech. edu/~ jeffwu/presentations/datascience.pdf"
  },
  {
    "objectID": "mlaibd.html",
    "href": "mlaibd.html",
    "title": "2  Masinõpe ja suurandmed",
    "section": "",
    "text": "Andmeteaduse levikuga on kaasas käinud veel mitmed sellega lähedalt seotud mõisted, sh masinõpe, tehisintellekt ja suurandmed."
  },
  {
    "objectID": "mlaibd.html#masinõpe-ei-ole-veel-päris-tehisintellekt",
    "href": "mlaibd.html#masinõpe-ei-ole-veel-päris-tehisintellekt",
    "title": "2  Masinõpe ja suurandmed",
    "section": "2.1 Masinõpe ei ole veel päris tehisintellekt",
    "text": "2.1 Masinõpe ei ole veel päris tehisintellekt\nMasinõpe on andmeteadustes kasutatav üldine tehnika, mida rakendatakse konkreetsetel algoritmidel või mudelitel selleks, et saavutada nende võimalikult suur täpsus prognoosimisel. Selleks üritatakse masinõppe käigus leida sobivaimad parameetrid. Nii põhineb masinõpe algoritmi või mudeli arendamisel: masinõppe käigus võetakse aluseks olemasolevad sisendite ja väljundite paarid, et arendada algoritmide võimekust leida sobiv väljund sellistele juhtudele, kus teada on ainult sisendi väärtus1. Mudelite ja algoritmide arendamisel võrreldakse nende erinevaid võimalikke parameetreid erinevate andmike kontekstis, seega seisneb masinõppe tööpõhimõte erinevate parameetrite ja andmete kombinatsioonide võrdlemises.1 Nt kui mudeli sisendiks on pildid võimalike vähkkasvajatega ja väljundiks vähkkasvaja tegelik tuvastamine, siis masinõppe käigus saab arendada mudeli, mis määrab pildi järgi võimalikult täpselt vähkkasvaja olemasolu ka juhul, kui see veel teada ei ole\n\n\n\n\n\n\nMõiste\n\n\n\nMasinõpe põhineb mudeli või algoritmi rakendamisel erinevate parameetritega ja andmiku erinevatel osadel selleks, et leida selline mudel või algoritm, mis võimalikult täpselt prognoosiks.\n\n\nSageli arvatakse, et masinõpe on üks tehisintellekti (artificial intelligence) rakendusi, sest see on võimeline lahendama ülesandeid ilma inimese sekkumiseta (Pinheiro et al., 2021). Selline arusaam on mõneti mõistetav, kui mõtestame tehisintellekti nii, et see hõlmab arvutusi selliste ülesannete lahendamiseks, millega tavapäraselt saavad hakkama ainult inimesed (Spiegelhalter, 2019). Õppimine masinõppes viitab justkui selle oskusele leida andmetest iseseisvalt mustreid ja nende alusel otsuseid (prognoose) teha. Samas on masinõpe piiratud mustrite leidmisega ainult olemasolevatest andmetest ega suuda arvesse võtta väljaspool neid olevaid tegureid ega “mängureegleid” (Taddy, 2019). Selleks on vajalik abstraktne teoreetiline mõtlemine ja arusaam sellest, kuidas maailm üldiselt toimib. Nii ei ole tehisintellekt otsuste tegemisel võimeline arvesse võtma ka eetikat ega ühiskondlikke norme. Ehk masinõppe abil saab lahendada ainult üksikuid väga konkreetseid ülesandeid, aga see ei asenda veel inimesi."
  },
  {
    "objectID": "mlaibd.html#andmeteadus-võimaldab-rakendada-suurandmeid",
    "href": "mlaibd.html#andmeteadus-võimaldab-rakendada-suurandmeid",
    "title": "2  Masinõpe ja suurandmed",
    "section": "2.2 Andmeteadus võimaldab rakendada suurandmeid",
    "text": "2.2 Andmeteadus võimaldab rakendada suurandmeid\nSuurandmed on sellised andmed, mis on suured. Tegelikult on suurandmetel veel palju eripärasid, mis tulenevalt eelkõige nende automatiseeritud loomisest. Tavapäraselt selgitatakse suurandmete olemust nn kolme V alusel:\n\nandmete suur maht (volume),\nandmete loomise suur kiirus (velocity) ja\nandmete suur mitmekesisus (variety).\n\n\n\n\n\n\n\nMõiste\n\n\n\nSuurandmeid iseloomustab nende suur maht, loomise kiirus ja mitmekesisus.\n\n\nLisaks nendele kolmele on kirjanduses suurandmetele veel mitmeid omadusi omistatud (Kitchin & McArdle, 2016):\n\nkõikehõlmavus ja esinduslikkus,\npeenekoelisus ja eripärasus,\nühendatavus teiste andmikega,\nvõimalus kiiresti andmevälju lisada,\nkorrastamatus ja müra,\nsuur (rahaline) väärtus,\nmitmetähenduslikkus.\n\nSiiski on leitud, et isegi kolme V-d esindavad omadused ei iseloomusta sugugi kõiki suurandmeid ja üldiselt saab suurandmeid kirjeldada pigem erinevate kombinatsioonide kaudu eelpool nimetatud omadustest (Kitchin & McArdle, 2016). Need omadused võimaldavad aga eristada suurandmeid nö tavapärastest korrastatud tabelitena esitatud andmetest.\nKlassikalised statistilised meetodid ei ole enamasti sobilikud suurandmete analüüsimiseks. Kuna suur osa statistikast seisneb valimi alusel üldistuste tegemises, siis vastavad meetodid ei ole lihtsalt asjakohased, kui andmed esindavad tervet kogumit ja eesmärk on prognoosimine. Sealjuures ilmnevad ka tehnilised puudujäägid. Statistikas laialt levinud statistiline hüpoteeside testimine on tundlik suurte valimite suhtes ja viitab sellistel juhtudel alati statistiliselt olulisele erinevusele. Samuti hõlmavad paljud meetodid vabadusastmete arvu, mida ei saa kasutada, kui tunnuseid on rohkem kui vaatlusi. Andmeteaduses levinud meetoditel selliseid piiranguid enamasti ei ole.\nSuurandmed ilmusid seoses teabe digitaliseerimisega, mis võimaldas andmeid lihtsamini koguda ja odavamalt hoiustada, ning suurandmete analüüsimise võimaluste tekkimisega, mille aluseks oli arvutite riistvaralise võimekuse ja vastavate tarkvaraliste võimaluste areng. Need arengud võimaldasid samal ajal ka andmeteaduste kui eriala ilmumist, mida toetas lisaks ka ühisosa leidmine teadustöös arvutiteaduse, statistika ning sotsiaalteaduste vahel (Taddy, 2019). Ühest küljest tekitas suurandmete olemasolu vajaduse andmeteaduse meetodite järgi, teisalt pakkusid suurandmed võimaluse rakendada meetodeid, mis klassikalise statistika alla ei kuulunud.\n\n\n\n\n\nKitchin, R., & McArdle, G. (2016). What makes Big Data, Big Data? Exploring the ontological characteristics of 26 datasets. Big Data & Society, 3(1), 205395171663113. https://doi.org/10.1177/2053951716631130\n\n\nPinheiro, C., Patetta, M., & Safari, an O. M. C. (2021). Introduction to Statistical and Machine Learning Methods for Data Science. SAS Institute Inc.\n\n\nSpiegelhalter, D. J. (2019). The art of statistics: learning from data. Pelican Books.\n\n\nTaddy, M. (2019). Business data science: combining machine learning and economics to optimize, automate, and accelerate business decisions (First edition). McGraw-Hill Education."
  },
  {
    "objectID": "analüüs.html",
    "href": "analüüs.html",
    "title": "3  Andmete analüüs",
    "section": "",
    "text": "Andmeanalüüsi teel soovitud teadmiseni jõudmiseks on vajalik sooritada teatud tegevused teatud järjekorras. Kuigi erinevate autorite poolt esitatud andmeanalüüsi sammud mõnevõrra erinevad (Peng & Matsui, 2016; Pinheiro et al., 2021; Spiegelhalter, 2019), siis saab need kokku võtta järgnevalt:\n\npüstita uurimisküsimus,\nkavanda selle küsimuse lahendamine,\nkogu vajalikud andmed,\nloo arusaam andmetes sisalduvast,\ntee arvutused vastavalt uurimisküsimusele,\ntõlgenda arvutuste tulemusi,\nesita tulemused teksti ja/või joonistena.\n\nÄrinduse valdkonnas kasutatakse mõnikord standardiseeritud CRISP-DM lähenemist, mis määrab tegevused ettevõtte siseste andmete praktiliseks rakendamiseks. Võrreldes eelnevalt kirjeldatud sammudega hõlmab nimetatud lähenemine ka andmete kättesaadavuse hindamist ja pöörab enam tähelepanu mudeli rakendamisele."
  },
  {
    "objectID": "analüüs.html#andmeanalüüsi-põhimõtted",
    "href": "analüüs.html#andmeanalüüsi-põhimõtted",
    "title": "3  Andmete analüüs",
    "section": "3.2 Andmeanalüüsi põhimõtted",
    "text": "3.2 Andmeanalüüsi põhimõtted\nKogemus näitab, et teatud vead kipuvad andmetega tegelemisel korduma ja nii saab esitada teatud põhimõtted, mida selle käigus silmas pidada Alljärgnevate soovituse hulgas on muuhulgas eeskuju võetud Spiegelhalter (2019) poolt esitatud põhimõtetest.\n\nPea iga tegevuse puhul alati meeles, mis on analüüsi lõppeesmärk. Vastasel juhul on oht jääda pusima mingi tegevuse juures, mis tegelikult ei olegi eriti vajalik.\nAndmeanalüüsis ei saa kõike ette näha, aga siiski tuleb kasuks kõik tegevused ette kavandada. Nt juba andmete kogumistel peaks olema selge, millise meetodi abil neid hiljem uuritakse.\nAndmete analüüsimine ei kulge enamasti sirgjooneliselt algusest lõpuni, vaid enamasti on vaja tegevusi korrata või eelmise tegevuse juurde tagasi minna. Nt kui kogutud andmed ei võimalda vajaliku meetodi rakendamist, siis võib olla vajalik andmeid täiendada.\nVeendu, et andmed on täpsed ja usaldusväärsed või kui ei ole, siis peab see olema arvesse võetav. Sobimatute andmete analüüsimine on maha visatud aeg ja vaev.\nKasuta ainult meetodeid, millest aru saad. Tarkvara kuvab peaaegu alati arvutuse tulemuse, isegi siis kui see on täiesti seosetu.\nEelista alati lihtsust keerukatele arvutustele. Kuigi mõne keerulise meetodi rakendamine võib tunduda peen ja usutav, siis on lihtsate meetodite rakendamisest sageli palju rohkem kasu, sest tulemused on läbipaistvamad ja arusaadavamad.\nÜldistuste tegemisel esita alati punkthinnangute usaldusvahemikud või kasuta üldse ainult vahemikhinnanguid. Kahe rühma mingi tunnuse punkthinnangud võivad olla erinevad, aga kui vastavad vahemikhinnangud kattuvad, siis me ei saa seda erinevust üldistada1.\nNähtuste üldistamisel otsi tasakaalu nihke ja hajuvuse vähendamise vahel. Statistiline mudel peaks olema piisavalt täpne olemasoleva valimi suhtes, aga ka piisavalt ebatäpne, et see kirjeldaks täpselt ka mõnda muud valimit.\nVõimalusel võrdle enda analüüsi tulemusi mingite varasemate tulemustega ja uuri, kas ka teistsugused meetodid annavad sama tulemuse ehk valideeri tulemusi.\nTeosta andmete analüüs nii, et see oleks korratav. Korratavuse võimaldamiseks tuleb analüüs vormistada nii, et kõik tegevused andmetega oleksid tuvastatavad käsulehelt (script).\nOtsi andmetest mustreid. Selleks uuri seoseid erinevate tunnuste vahel, mitte ära keskendu üksikutele tunnustele.\n\n1 Nt kui mingis valimis olevate ettevõtete käive keskmiselt kasvas, aga selle keskmise kasvu usaldusvahemik kattis ka 0, siis on tõenäoline, et üldiselt selliste ettevõtete käive ei muutunudkiEraldi võib välja tuua mõned soovitused, mida pidada meeles andmetest mustrite leidmisel.\n\nUuri, mil viisil muutuvad ühe tunnuse väärtused teise tunnuse väärtuste muutudes.\nAgregeerimise ja summeerimise käigus läheb alati vähemalt osa andmetes olevast infost kaduma.\nAndmete jaotus on enamasti kaldu kas suurte või harvem väikeste väärtuste suhtes ja seega on kallutatud ka mõõdikud, mis on tundlikud erindite suhtes2.\nMustreid on enamasti lihtsam tuvastada joonistelt kui arvutuste tulemustest.\nMõned mustrid ilmnevad ainult juhul, kui uurida tunnuseid teisendatud kujul (transformed). Teisendusi on oluline meeles pidada tulemuste tõlgendamisel.\n\n\n\n\n\n2 Nt töötasu jaotus ühiskonnas on kaldu suuremate töötasude poole, mitõttu ka töötasude aritmeetiline keskmine on kaldu suurema väärtuse suunas.\n\nPeng, R., & Matsui, E. (2016). The Art of Data Science. Leanpub.\n\n\nPinheiro, C., Patetta, M., & Safari, an O. M. C. (2021). Introduction to Statistical and Machine Learning Methods for Data Science. SAS Institute Inc.\n\n\nSpiegelhalter, D. J. (2019). The art of statistics: learning from data. Pelican Books."
  },
  {
    "objectID": "tarkvara.html",
    "href": "tarkvara.html",
    "title": "4  Tarkvara andmetöötluseks",
    "section": "",
    "text": "Andmetega tegelemiseks kasutatav tarkvara oleneb paljuski valdkonnast. Kui lihtsateks teheteks korrastatud andmetel piisab ka nn kontoritarkvarast, siis andmeteadustes kasutatakse tunduvalt võimekamaid rakendusi. Kuigi enamus arvutikasutajatest on ilmselt tuttav tabelarvutusega (nt Excel), siis on andmete töötlemiseks olemas ka suurel hulgal teisi graafilise kasutajaliidesega rakendusi, aga ka käsureal töötavaid programmeerimiskeeli. Üldiselt võibki need rakendused jagada kolmeks:"
  },
  {
    "objectID": "tarkvara.html#tabelarvutus",
    "href": "tarkvara.html#tabelarvutus",
    "title": "4  Tarkvara andmetöötluseks",
    "section": "4.1 Tabelarvutus",
    "text": "4.1 Tabelarvutus\nTabelarvutuse rakendused võimaldavad andmete töötlemist ainult kahemõõtmelise tabelina või selliste tabelite kogumikuna. Selliseid tabeleid on mugav hallata ainult siis, kui need on eriti veergude arvu mõttes väiksed. Kuigi paljudel tabelarvutuse rakendustel on olemas ka funktsioonid ja lisad mitmete statistiliste protseduuride teostamiseks, siis on tabelarvutus mugav pigem matemaatiliste tehete rakendamiseks otse lahtritel. Seetõttu on nende rakenduste kasutamine väga lihtsasti õpitav, aga neil puuduvad võimalused paljudeks tegevusteks, mis on vajalikud andmete põhjalikumal analüüsimisel. Siiski on tabelarvutuse rakendused kasulikud andmete sisestamiseks ja lihtsate kokkuvõtete tegemiseks."
  },
  {
    "objectID": "tarkvara.html#statistikarakendused",
    "href": "tarkvara.html#statistikarakendused",
    "title": "4  Tarkvara andmetöötluseks",
    "section": "4.2 Statistikarakendused",
    "text": "4.2 Statistikarakendused\nSarnaselt tabelarvutusele on vähemalt enamusel statistikarakendustel olemas andmetabeli vaade, aga suurem osa andmetöötlusest tehakse tervete ridade või veergude kaupa, mitte iga lahtrit üksikult muutes. Selleks eeldavad statistkarakendused nn korrastatud andmetabelit, milles read esindavad vaatlusi ja veerud tunnuseid. See loogika lihtsustab märkimisväärselt statistiliste protseduuride kasutamist. Erinevalt tabelarvutuse rakendustest kuvatakse arvutuste tulemused mitte otse andmetabelis vaid eraldi vaates. Kuigi statistikarakendused sisaldavad protseduure enamuse klassikalise statistika meetodite rakendamiseks, siis paljudel juhtudel ei võimalda need keerukamaid arvutusi ega korrastamata andmete kasutamist."
  },
  {
    "objectID": "tarkvara.html#programmeerimiskeeled",
    "href": "tarkvara.html#programmeerimiskeeled",
    "title": "4  Tarkvara andmetöötluseks",
    "section": "4.3 Programmeerimiskeeled",
    "text": "4.3 Programmeerimiskeeled\nProgrammeerimiskeelte kasutamine on põhimõtteliselt väga lihtne: objektidel (andmed) rakendatakse funktsioone (tehted). Kogu keerukus seisneb objektide ja funktsioonide tundmises ning nende omavahelises kombineerimises.\nKõige selgemalt eristab programmeerimiskeeli teistest rakendustest graafilise kasutajaliidese puudumine. Seega ei toimu andmete töötlemine mitte menüüdest valikute tegemise teel, vaid kõik tegevused toimuvad käsitsi sisse trükitavate käskude alusel, mida saab sisestada otse käsurealt või käsulehelt. Andmeid saab hoiustada väga mitmesugusel kujul alates üksiktutest väärtustest ja lõpetades mitmemõõtmeliste tabelitega.\nSamuti ei ole käsurea vahendusel andmetega tegeledes andmed pidevalt nähtaval ja seega peab kasutaja väga täpselt meeles pidama, millisel kujul andmed parajasti hoiustatud on. Nt tabelina vormistatud andmete puhul on oluline teada, mida esindavad read ja mida veerud, mis on veergude nimetused ja mis tüüpi tunnusena on andmed veergudes."
  },
  {
    "objectID": "tarkvara.html#r-keel",
    "href": "tarkvara.html#r-keel",
    "title": "4  Tarkvara andmetöötluseks",
    "section": "4.4 R keel",
    "text": "4.4 R keel\nVäga üksikud programmeerimiskeeled on loodud ainult andmete töötlemiseks. Nendest kõige laialdasemalt kasutatav on R keel. Seda võib laiemas mõtes pidada arvutuskeskkonnaks, mis on ette nähtud andmete töötlemiseks, arvutuste tegemiseks ja jooniste kuvamiseks1.1 Põhjalikum R keele kirjeldus on esitatud selle ametlikul leheküljel.\nR keele kasutamiseks tuleb arvutisse laadida ja paigaldada vastav rakendus. Keele kasutamiseks on soovitatav paigaldada arvutisse ka rakendus RStudio Desktop."
  },
  {
    "objectID": "kasutus.html",
    "href": "kasutus.html",
    "title": "5  Põhikasutus",
    "section": "",
    "text": "Käesolevas peatükis tutvume lühidalt R keele kasutamisega."
  },
  {
    "objectID": "kasutus.html#käsurida",
    "href": "kasutus.html#käsurida",
    "title": "5  Põhikasutus",
    "section": "5.1 Käsurida",
    "text": "5.1 Käsurida\nKäsureal (command line) esitatud käsu alusel teeb R rakendus vastavalt R keele loogikale arvutused ja esitab vastuse. Nii saab käsurida kasutada ka lihtsalt kalkulaatorina ja sealjuures saab korraga teha ka mitu tehet.\n\n13 + 8 # Liitmine\n\n[1] 21\n\n8 - 5 # Lahutamine \n\n[1] 3\n\n21 / 3 # Jagamine \n\n[1] 7\n\n5 * 3 # Korrutamine \n\n[1] 15\n\n2^3 # Astendamine \n\n[1] 8\n\n9^(1/2) # Ruutjuur\n\n[1] 3\n\n13 + (8 - 5) * 9^(1/2)\n\n[1] 22\n\n\nR keele võimekus avaldub aga siis, kui kasutame käske salvestamaks väärtused objektidesse ja rakendamaks neil erinevaid funktsioone.\nMõnikord väljastab R käsu sisestamisel veateate. Teatega “Error” kaasneb käsu täitmata jätmine, samas kui teade “Warning” tähendab, et käsk küll täideti, aga teatud tingimustel."
  },
  {
    "objectID": "kasutus.html#objektid-ja-funktsioonid",
    "href": "kasutus.html#objektid-ja-funktsioonid",
    "title": "5  Põhikasutus",
    "section": "5.2 Objektid ja funktsioonid",
    "text": "5.2 Objektid ja funktsioonid\n\nTo understand computations in R, two slogans are helpful:\nEverything that exists is an object.\nEverything that happens is a function call.\n- John Chambers\n\nAndmete töötlemiseks on vaja need kuidagi salvestada. Väärtusi saab R keeles salvestada objektidena. Sealjuures väärtused, mis ei ole arvud, tuleb ümbritseda jutumärkidega.\n\n# Objekti võib salvestada arve...\nkama <- 2\nkama\n\n[1] 2\n\n# ...aga ka sõnu või lauseid.\npesa <- 'muna'\npesa\n\n[1] \"muna\"\n\n# Trükitav nö nool ei tohi sisaldada tühikuid, \n# sest vastasel juhul käsitletakse käsku võrdlusena.\nkama < - 2\n\n[1] FALSE\n\n\nObjekte võib nimetada kuidas iganes1, aga nimetused peavad algama tähega ega tohi sisaldada teatud kirjavahemärke ega tühikuid.1 Objektidele nime valimine võtab sageli rohkem aega kui peaks: “There are only two hard things in Computer Science: cache invalidation and naming things.”\nVäärtuste klasse on R keeles väga palju, aga olulisimaks võib pidada nendest kolme:\n\nüksik väärtus on element,\n\nmitu väärtust on vektor,\ntabelina vormistatud väärtused on andmetabel (data frame).\n\nVäärtuse klass sõltub sellest, mis kujul me andmed sisestame.\n\n# Element\nkaks <- 3\nkaks\n\n[1] 3\n\n# Vektor\nnimed <- c('Alar', 'Kaja', 'Jüri')\nnimed\n\n[1] \"Alar\" \"Kaja\" \"Jüri\"\n\n# Andmetabel\nõpilased <- data.frame(nimi = nimed, \n                       hinne = c(5,4,2))\nõpilased\n\n  nimi hinne\n1 Alar     5\n2 Kaja     4\n3 Jüri     2\n\n\nNagu näha, siis rohkem kui ühe elemendi esitamiseks peame kasutama vastavat funktsiooni.\nSamuti ilmneb, et funktsiooni nimetuse järele sulgudesse tuleb sisestada funktsiooni argumendid. Esimene argument on enamasti objekt ja järgnevad argumendid täpsustused.\n\nFibonacci <- c(1,NA,2,3,NA)\n# Kuna vektor sisaldab teadmata väärtusi, \n# siis ei väljasta funktsioon vektori summat.\nsum(Fibonacci)\n\n[1] NA\n\n# Saame täpsustada, et soovime summa arvutada ilma puuduvate väärtusteta.\nsum(Fibonacci, na.rm = TRUE)\n\n[1] 6\n\n\nIga funktsiooni kõikide argumentide teada saamiseks saab kuvada vastava funktsiooni abilehe. Selleks tuleb sisestada käsk, milles funktsiooni nimetusele eelneb küsimärk.\n\n?sum\n\n\n\n\n\n\n\nMärkus\n\n\n\nR keele kasutamine on põhimõtteliselt väga lihtne: see on lihtsalt funktsioonide rakendamine objektidel. Kogu keerukus seisneb objektide ja funktsioonide tundmises ning nende omavahel kombineerimises."
  },
  {
    "objectID": "kasutus.html#laiendused",
    "href": "kasutus.html#laiendused",
    "title": "5  Põhikasutus",
    "section": "5.3 Laiendused",
    "text": "5.3 Laiendused\nR keele paigaldamisel tuleb kaasa palju funktsioone, mis võimaldavad rakendada põhilisi andmetöötluse ja statistilise analüüsi protseduure. Võimaluste lisamiseks on aga paljud R keele kasutajad kirjutanud ise funktsioone ja koondanud need laiendustesse või pakkidesse (packages), mis on saadaval ka teistele kasutajatele2. Selleks, et neid laiendusi kasutada tuleb need esmalt arvutisse paigaldada ja seejärel töölauale laadida.2 Ametlikult tunnustatud R keele laiendused on CRAN hoidlas.\n\n# Laadime laienduse alla ja paigaldame arvutisse.\ninstall.packages('tidyverse')\n# Laienduse kasutamiseks tuleb see esmalt R töölauale laadida.\nlibrary('tidyverse')\n\nEelnevate käskudega paigaldatud ja laaditud laiendus tidyverse sisaldab tegelikult palju teisi laiendusi, mille funktsioonid lihtsustavad käskude kirjutamist R keeles. Edaspidi kasutame paljusid antud laienduses sisalduvaid funktsioone."
  },
  {
    "objectID": "kasutus.html#sisestamine",
    "href": "kasutus.html#sisestamine",
    "title": "5  Põhikasutus",
    "section": "5.4 Sisestamine",
    "text": "5.4 Sisestamine\nMõistagi ei pea andmed R töölauale sisestama üksikute väärtuste kaupa nii nagu eelnevas näites. Lisatavates lainedustes olevate funktsioonide abil on R võimeline lugema andmeid peaaegu misiganes vormingus. Siiski on soovitatav kasutada R keelega kaasas olevaid funktsioone, mis tunnevad eelkõige lihttekstina salvestatud andmeid. Üheks selliseks andmevorminguks on CSV (comma separated value), mis on lihtsalt teksti sisaldav fail, milles väärtused on eraldatud komadega.\nCSV vormingus andmete R töölauale laadimiseks saab kasutada funktsiooni read.csv(), mille argumendiks on andmefaili koht failisüsteemis. Kui andmete esimene rida sisaldab veergude nimetusi, siis tuleb seda argumendiga täpsustada argumendiga header = TRUE.\n\n# Loeme objekti \"thi\" töölaua kaustas olevast failist \"thi.csv\"\n# Need on tarbijahinnaindeksi (THI) andmed Statistikaameti tabeli IA02 alusel\nthi <- read.csv('C:/Users/kasutajanimi/Desktop/thi.csv', header = TRUE)\n\n\n\n\n\n\n\nVaata ette!\n\n\n\nKui salvestada tabel CSV vormingus Microsoft Exceli abil, siis on väärtuse eraldajateks hoopis semikoolonid. Sellisel juhul loeb funktsioon read.csv() andmeid valesti. Lahenduseks on kasutada funktsiooni read.csv2() , mis arvestab väärtuste eraldajatena semikoolonit ja komakohtade eraldajatena komasid.\nCSV aluseks on USA standard, milles arvude komakohad eraldatakse punktiga. Kuna Euroopas eraldatakse arvudes komakohad komaga, siis ei saa komasid kasutada väärtuse eraldamiseks ja Excel eraldab väärtused hoopis semikoolonitega.\n\n\nFaililaiendiga .xlsx nö tabelarvutuse vihikutes ei pruugi andmed olla vormistatud korrektse andmetabelina ja võivad sisaldada tabelist väljaspool olevaid väärtusi. Nt tühjade ridade või veergudega tabelid ilmuvad statistikarakendustesse või R töölauale laadides sageli vigaselt. Selliste vigade kõrvaldamine on enamasti keerulisem võrreldes CSV vormingu kasutamisega. Sellepärast on ka soovitatav kasutada CSV vormingut. Kui on siiski vajadus laadida töölauale .xlsx vormingus olevad andmed, siis selleks saab kasutada funktsiooni read_excel().\n\nthi <- read_excel('C:/Users/kasutajanimi/Desktop/thi.xlsx')\n\n\n\n\n\n\n\nSoovitus\n\n\n\nKui andmed on mingi muu faililaiendiga (nt .xlsx), siis on soovitatav need esmalt CSVna salvestada ja alles seejärel R töölauale laadida.\n\n\nKui soovime kõik loetavad ja salvestatavad failid koondada ühte kausta, siis võime määrata selle vaikimisi kaustaks. Sel juhul ei pea me faili täielikku asukohta sisestama, vaid piisab faili nimest ja -laiendist.\n\nsetwd('C:/Users/kasutajanimi/Desktop/')\nthi <- read.csv('thi.csv')\n\n\n\n\n\n\n\nPea meeles!\n\n\n\nR keel tunnistab failide asukoha kirjes kaustade eraldajatena paremale kaldu olevaid kaldkriipse (/). See vastab MacOS ja Linuxi failisüsteemile. Microsoft Windows kasutab aga vasakule kaldu olevaid kaldkriipse (\\). Seega tuleb Windowsi süsteemis faili asukoha kopeerimisel R keelde kaldkriipsud vastavalt ära muuta."
  },
  {
    "objectID": "kasutus.html#ülevaade-objektist",
    "href": "kasutus.html#ülevaade-objektist",
    "title": "5  Põhikasutus",
    "section": "5.5 Ülevaade objektist",
    "text": "5.5 Ülevaade objektist\nAndmete sisestamisel on hea mõte veenduda, et andmed laaditi töölauale õigesti. Selleks saame kasutada funktsiooni head(), mis kuvab esimesed viis rida.\n\nhead(thi)\n\n  Aasta Kaubagrupp      Kuu Tarbijahinnaindeks\n1  1998      Kokku  Jaanuar             105.58\n2  1998      Kokku Veebruar             106.59\n3  1998      Kokku    Märts             107.43\n4  1998      Kokku   Aprill             107.90\n5  1998      Kokku      Mai             108.28\n6  1998      Kokku    Juuni             108.48\n\n\nKõikidest andmetabeli tunnustest saame ülevaate funktsiooni str() abil. Samuti kuvab funktsioon vaatluste ja tunnuste arvu.\n\nstr(thi)\n\n'data.frame':   3848 obs. of  4 variables:\n $ Aasta             : int  1998 1998 1998 1998 1998 1998 1998 1998 1998 1998 ...\n $ Kaubagrupp        : chr  \"Kokku\" \"Kokku\" \"Kokku\" \"Kokku\" ...\n $ Kuu               : chr  \"Jaanuar\" \"Veebruar\" \"Märts\" \"Aprill\" ...\n $ Tarbijahinnaindeks: num  106 107 107 108 108 ..."
  },
  {
    "objectID": "kasutus.html#valimine",
    "href": "kasutus.html#valimine",
    "title": "5  Põhikasutus",
    "section": "5.6 Valimine",
    "text": "5.6 Valimine\nTabelarvutuses saab vajalike lahtrite valimiseks kasutada kursorit, aga käsureal ei saa valikud vormistada muul viisil kui käsuna. Selleks kõige lihtsam viis on sisestada soovitud väärtuste asukoht objekti järel nurksulgudesse.\n\n# Vektori kolmas väärtus\nFibonacci\n\n[1]  1 NA  2  3 NA\n\nFibonacci[3]\n\n[1] 2\n\n# Andmetabel esimese rea ja neljanda veeru väärtus\nthi[1, 4]\n\n[1] 105.58\n\n# Andmetabeli veeru Tarbijahinnaindeks esimene rida\nthi$Tarbijahinnaindeks[1]\n\n[1] 105.58\n\n# Andmetabel esimese rea ja kõikide veergude väärtused\nthi[1, ]\n\n  Aasta Kaubagrupp     Kuu Tarbijahinnaindeks\n1  1998      Kokku Jaanuar             105.58\n\n\nEnamasti ei soovi me aga vajalikke väärtusi valida mitte nende asukoha alusel, vaid mingi teise tunnuse väärtuse alusel. Sellisel juhul saame esitada valiku tõeväärtusena.\n\n# Kolmas ja neljas väärtus asukoha alusel\nFibonacci[c(3,4)]\n\n[1] 2 3\n\n# Kolmas ja neljas väärtus tõeväärtusena\nFibonacci[c(FALSE,FALSE,TRUE,TRUE,FALSE)]\n\n[1] 2 3\n\n\nTõeväärtused võivad sisaldada ka mitut tingimust.\n\n# Read, mille korral THI oli vähem kui 100 ja kaubagrupp ei olnud side\nthi[thi$Tarbijahinnaindeks < 100 & thi$Kaubagrupp != 'Side', ]\n\n    Aasta                      Kaubagrupp       Kuu Tarbijahinnaindeks\n176  1999 Toit ja mittealkohoolsed joogid    August              99.40\n177  1999 Toit ja mittealkohoolsed joogid September              99.12\n178  1999 Toit ja mittealkohoolsed joogid  Oktoober              99.89\n\n# Aasta ja THI väärtused jaanuarikuus kõikide kaupade arvestuses\nthi[thi$Kuu == 'Jaanuar' & thi$Kaubagrupp == 'Kokku', \n    c('Aasta', 'Tarbijahinnaindeks')]\n\n     Aasta Tarbijahinnaindeks\n1     1998             105.58\n157   1999             110.44\n313   2000             114.01\n469   2001             120.63\n625   2002             125.70\n781   2003             128.94\n937   2004             129.55\n1093  2005             135.03\n1249  2006             141.31\n1405  2007             148.54\n1561  2008             164.88\n1717  2009             171.58\n1873  2010             170.39\n2029  2011             179.34\n2185  2012             187.38\n2341  2013             193.84\n2497  2014             195.95\n2653  2015             193.40\n2809  2016             192.31\n2965  2017             197.58\n3121  2018             204.44\n3277  2019             209.98\n3433  2020             213.40\n3589  2021             213.88\n3745  2022             238.13\n\n\n\n\n\n\n\n\nMärkus\n\n\n\nTõeväärtuse abil saame objektist valida väärtused mingi teise objekti väärtuse alusel. Selle teise objekti väärtused tuleb määrata võrdlusoperaatori abil. Mitme võrdluse korral peame võrdlused eraldama loogikaoperaatoritega.\n\n\nVõrdlusoperaatorite (relational operators) abil saame tekitada tõeväärtuse, mille alusel saame valida soovitud väärtuse mingi muu objekti väärtuse järgi. Võrdlusoperaatoreid on kuus:\n\nvõrdub == (kaks võrdusmärki),\nei võrdu !=,\nsuurem kui >,\nväiksem kui <,\nsuurem või võrdne kui >=,\nväiksem või võrdne kui <=.\n\nLoogikaoperaatorite (logical operators) abil saame ühendada mitu võrdlust. Lihtsamaid loogikaoperaatoreid on kolm (!, &, |) ja neid saab kasutada võrdluste liitmisel tõeväärtuste moodustamiseks nt järgnevalt:\n\nmitte x (!x)\nx ja y (x & y),\nx või y (x | y),\nx ja mitte y (x & !y).\n\n\n5.6.1 Valimine andmetabelist\nEelneva kirjelduse alusel võib väärtuste valimine tunduda keeruline ja tülikas. Seda saab teatud mõttes lihtsustada, kui kasutame varem paigaldatud laienduses sisalduvaid funktsioone. Ridade valimiseks on funktsioon filter() ja veergude valimiseks select().\n\n# THI aastal 2020\nfilter(thi, Aasta == 2020 & Kaubagrupp == 'Kokku')\n\n   Aasta Kaubagrupp       Kuu Tarbijahinnaindeks\n1   2020      Kokku   Jaanuar             213.40\n2   2020      Kokku  Veebruar             214.45\n3   2020      Kokku     Märts             212.94\n4   2020      Kokku    Aprill             212.09\n5   2020      Kokku       Mai             210.67\n6   2020      Kokku     Juuni             212.57\n7   2020      Kokku     Juuli             212.57\n8   2020      Kokku    August             213.94\n9   2020      Kokku September             213.32\n10  2020      Kokku  Oktoober             212.24\n11  2020      Kokku  November             212.49\n12  2020      Kokku Detsember             212.50\n\n# THI veerg andmetabeli esimesel viiel real\nselect(head(thi), Tarbijahinnaindeks)\n\n  Tarbijahinnaindeks\n1             105.58\n2             106.59\n3             107.43\n4             107.90\n5             108.28\n6             108.48\n\n\nTehtud valiku salvestamiseks tuleb saadud tulemus lihtsalt sisestusoperaatori abil objekti salvestada.\n\n# Jätame alles vaid read alates aastast 2020\nthi <- filter(thi, Aasta >= 2020)"
  },
  {
    "objectID": "kasutus.html#kokkuvõtted",
    "href": "kasutus.html#kokkuvõtted",
    "title": "5  Põhikasutus",
    "section": "5.7 Kokkuvõtted",
    "text": "5.7 Kokkuvõtted\nVäärtuste kokku võtvaks kirjeldamiseks on väga palju viise ja neile vastavaid funktsioone, aga alustuseks vaatame liitmist, keskmist ja äärmuslikke väärtusi.\n\nFibonacci <- c(0,1,1,2,3,5,8,13,21,34,55,89)\nsum(Fibonacci) # Summa\n\n[1] 232\n\nmean(Fibonacci) # Aritmeetiline keskmine\n\n[1] 19.33333\n\nmedian(Fibonacci) # Mediaan\n\n[1] 6.5\n\nmin(Fibonacci) # Väikseim väärtus\n\n[1] 0\n\nmax(Fibonacci) # Suurim väärtus\n\n[1] 89"
  },
  {
    "objectID": "kasutus.html#torutamine",
    "href": "kasutus.html#torutamine",
    "title": "5  Põhikasutus",
    "section": "5.8 Torutamine",
    "text": "5.8 Torutamine\nKoodi kirjutamise ja eriti hiljem lugemise lihtsustamiseks saab kasutada paljudes programmeerimiskeeltes kasutusel olevat toru (pipe). Torude abil saame ühe funktsiooni tulemuse suunata järgmisesse funktsiooni, mis muudab koodi selgemaks. Kokku on kolm viisi, kuidas funktsioone omavahel ühendada.\n\n# Oletame, et soovime uurida eluaseme THI muutust 2022. aastal\n## Iga iga funktsiooni tulemuse saab järjest objekti salvestada\neluase <- filter(thi, Kaubagrupp == 'Eluase')\neluase <- filter(eluase, Aasta == 2022)\nselect(eluase, Kuu, Tarbijahinnaindeks)\n\n       Kuu Tarbijahinnaindeks\n1  Jaanuar             452.08\n2 Veebruar             439.13\n3    Märts             456.10\n4   Aprill             538.55\n5      Mai             557.34\n6    Juuni             587.38\n7    Juuli             623.25\n8   August             683.04\n\n## Nö pesastamist kasutades tõstame funktsiooni tulemuse järgmise funktsiooni sisse\nselect(filter(filter(thi, Kaubagrupp == 'Eluase'), Aasta == 2022), Kuu, Tarbijahinnaindeks)\n\n       Kuu Tarbijahinnaindeks\n1  Jaanuar             452.08\n2 Veebruar             439.13\n3    Märts             456.10\n4   Aprill             538.55\n5      Mai             557.34\n6    Juuni             587.38\n7    Juuli             623.25\n8   August             683.04\n\n## Torutamise käigus saadame funktsiooni tulemuse järgmisesse funktsiooni\nthi %>% \n  filter(Kaubagrupp == 'Eluase') %>% \n  filter(Aasta == 2022) %>% \n  select(Kuu, Tarbijahinnaindeks)\n\n       Kuu Tarbijahinnaindeks\n1  Jaanuar             452.08\n2 Veebruar             439.13\n3    Märts             456.10\n4   Aprill             538.55\n5      Mai             557.34\n6    Juuni             587.38\n7    Juuli             623.25\n8   August             683.04\n\n\nNagu näha, siis arvestab torule järgnev funktsioon kõige esimese argumendina eelneva funktsiooni tulemust.\nÜhendades nüüd oskused andmetabelist andmeid valida ja kokku võtta saame juba hakata vastama mitmesugustele küsimustele.\n\n# Millal ja mis kaubagrupis oli THI pärast 2020. aastat kõige kõrgem?\nfilter(thi, Aasta >= 2021) %>% \n  filter(Tarbijahinnaindeks == max(Tarbijahinnaindeks))\n\n  Aasta Kaubagrupp    Kuu Tarbijahinnaindeks\n1  2022     Eluase August             683.04\n\n# Mis juhtudel on THI suurenenud 1997. aastaga võrreldes vähemalt 4 korda?\nthi %>% filter(Tarbijahinnaindeks > 400) \n\n   Aasta                       Kaubagrupp       Kuu Tarbijahinnaindeks\n1   2021                           Eluase September             400.24\n2   2021                           Eluase  November             405.27\n3   2021                           Eluase Detsember             484.44\n4   2022                           Eluase   Jaanuar             452.08\n5   2022                           Eluase  Veebruar             439.13\n6   2022                           Eluase     Märts             456.10\n7   2022                           Eluase    Aprill             538.55\n8   2022                           Eluase       Mai             557.34\n9   2022                           Eluase     Juuni             587.38\n10  2022                           Eluase     Juuli             623.25\n11  2022                           Eluase    August             683.04\n12  2022 Söömine väljaspool kodu, majutus     Juuli             426.74\n13  2022 Söömine väljaspool kodu, majutus    August             416.38"
  },
  {
    "objectID": "kasutus.html#salvestamine",
    "href": "kasutus.html#salvestamine",
    "title": "5  Põhikasutus",
    "section": "5.9 Salvestamine",
    "text": "5.9 Salvestamine\nNii nagu andmete R keskkonda lugemise korral on ka nende salvestamiseks soovitatav kasutada CSV vormingut. Selleks on funktsioon write.csv(), aga kui soovime hiljem selle faili avada Excelis, siis tuleb kasutada funktsiooni write.csv2().\n\nwrite.csv(thi, 'andmed/thi.csv')"
  },
  {
    "objectID": "kasutus.html#korratav-analüüs",
    "href": "kasutus.html#korratav-analüüs",
    "title": "5  Põhikasutus",
    "section": "5.10 Korratav analüüs",
    "text": "5.10 Korratav analüüs\nKuna R keele kasutamisel teeme kõik tehted käskude alusel, siis saame kõik käsud salvestada käsulehele (script). Käsulehe kasutamine annab palju võimalusi:\n\nkui soovime sisestatud käsu tühistada, siis saame jooksutada uuesti eelnevad käsud;\nkui avastame hiljem, et tegime vea või soovime midagi tehtud analüüsis muuta, siis piisab käsulehel muudatuse tegemisest ja käsulehe uuesti jooksutamisest;\nsaame hiljem üle vaadata, kuidas täpselt andmetöötluses mingi tulemuseni jõudsime;\nteised saavad veenduda meie tulemuste õigsuses, rakendades meie koosatud käsulehte mingitel andmetel.\n\n\n\n\n\n\n\nMärkus\n\n\n\nR keelt kasutades ei ole võimalik käske tühistada või tagasi võtta (undo). Kõik muudatused andmetes on lõplikud. Eelneva analüüsi sammu juurde tagasi minemiseks peame andmed uuesti R töölauale sisestama.\n\n\nKäsulehel on andmetöötluse tegevused enamasti teatud järjekorras:\n\ntöökausta määramine,\nlaienduste laadimine,\nandmete sisestamine,\nandmetöötlus,\ntulemuse salvestamine andmefailide, tabelite, jooniste või muul kujul."
  },
  {
    "objectID": "kasutus.html#aruanded-r-keeles",
    "href": "kasutus.html#aruanded-r-keeles",
    "title": "5  Põhikasutus",
    "section": "5.11 Aruanded R keeles",
    "text": "5.11 Aruanded R keeles\nLisaks käsulehele saab analüüsi vormistada ka terve aruandena. Rakenduses RStudio saab selleks kõik käsud ja sinna juurde kuuluvad selgitused vormistada lihttekstina vastavalt Quarto eeskirjadele. Vastavaid .qmd faililaiendiga lihtteksti faile saab salvestada paljudes erinevates vormingutes, sh PDFi, HTMLi ja Microsoft Wordi dokumentidena. Teksti vormistamiseks tuleb sealjuures kasutada Markdown märgistuskeelt."
  },
  {
    "objectID": "korrastus.html",
    "href": "korrastus.html",
    "title": "6  Korrastus",
    "section": "",
    "text": "Andmete edasiseks analüüsimiseks ette valmistamine kipub olema kogu andmeanalüüsi kõige aeganõudvam osa. Andmeanalüütikud ise on hinnanud, et kogu andmeanalüüsi käigus veedavad nad umbes 80% ajast andmeid korrastades (Kelleher & Tierney, 2018; Wickham, 2014). Sekundaarandmed ei ole peaaegu kunagi täpselt selliselt vormistatnud nagu meie poolt valitud protseduur seda eeldab, mistõttu ilma oskuseta andmeid korrastada ei ole nendega enamasti suurt midagi teha.\nAlljärgnevalt uurime keskmist brutopalka ja palgalõhet Eestis ning nendega seotud näitajaid."
  },
  {
    "objectID": "korrastus.html#veeru-nimetused",
    "href": "korrastus.html#veeru-nimetused",
    "title": "6  Korrastus",
    "section": "6.1 Veeru nimetused",
    "text": "6.1 Veeru nimetused\nKui oleme andmed töölauale laadinud, siis esmalt on mõistlik saada nendest ülevaade. Selleks kasutame juba tuttavaid funktsioone objekti esimeste ridade (head()) ja ülesehituse (str()) kuvamiseks.\n\nhead(palk)\n\n                       Näitaja               Tegevusala   Vaatlusperiood\n1 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad   2002 I kvartal\n2 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad  2002 II kvartal\n3 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad 2002 III kvartal\n4 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad  2002 IV kvartal\n5 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad   2003 I kvartal\n6 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad  2003 II kvartal\n  PA001..KESKMINE.BRUTOPALK..TÖÖJÕUKULU..TÖÖTATUD.TUNNID.JA.TÖÖTAJATE.ARV\n1                                                                     366\n2                                                                     406\n3                                                                     374\n4                                                                     416\n5                                                                     405\n6                                                                     442\n\nstr(palk)\n\n'data.frame':   7680 obs. of  4 variables:\n $ Näitaja                                                                : chr  \"Keskmine brutokuupalk, eurot\" \"Keskmine brutokuupalk, eurot\" \"Keskmine brutokuupalk, eurot\" \"Keskmine brutokuupalk, eurot\" ...\n $ Tegevusala                                                             : chr  \"Kokku – kõik tegevusalad\" \"Kokku – kõik tegevusalad\" \"Kokku – kõik tegevusalad\" \"Kokku – kõik tegevusalad\" ...\n $ Vaatlusperiood                                                         : chr  \"2002 I kvartal\" \"2002 II kvartal\" \"2002 III kvartal\" \"2002 IV kvartal\" ...\n $ PA001..KESKMINE.BRUTOPALK..TÖÖJÕUKULU..TÖÖTATUD.TUNNID.JA.TÖÖTAJATE.ARV: num  366 406 374 416 405 442 411 455 431 474 ...\n\n\nNäeme, et neljandal veerul on pikk ja lohisev nimetus. Andmetabel veeru nimetusi saame kuvada funktsiooniga names() ja selle funktsiooni nimetust kasutades saame ka neljandale veerule uue nime anda.\n\nnames(palk)\n\n[1] \"Näitaja\"                                                                \n[2] \"Tegevusala\"                                                             \n[3] \"Vaatlusperiood\"                                                         \n[4] \"PA001..KESKMINE.BRUTOPALK..TÖÖJÕUKULU..TÖÖTATUD.TUNNID.JA.TÖÖTAJATE.ARV\"\n\nnames(palk)[4] <- 'väärtus'\nnames(palk)\n\n[1] \"Näitaja\"        \"Tegevusala\"     \"Vaatlusperiood\" \"väärtus\""
  },
  {
    "objectID": "korrastus.html#tunnuse-tüüp",
    "href": "korrastus.html#tunnuse-tüüp",
    "title": "6  Korrastus",
    "section": "6.2 Tunnuse tüüp",
    "text": "6.2 Tunnuse tüüp\nAndmetabeli ülesehituse küsimisel kuvatakse ka iga tunnuse tüüp, millest sagedasemad on arvtunnus (num) ja nimitunnus (chr). Täpsemalt loe mõõtmise tasemete ja tunnuse tüüpide kohta peatükist 8.\n\nstr(palk)\n\n'data.frame':   7680 obs. of  4 variables:\n $ Näitaja       : chr  \"Keskmine brutokuupalk, eurot\" \"Keskmine brutokuupalk, eurot\" \"Keskmine brutokuupalk, eurot\" \"Keskmine brutokuupalk, eurot\" ...\n $ Tegevusala    : chr  \"Kokku – kõik tegevusalad\" \"Kokku – kõik tegevusalad\" \"Kokku – kõik tegevusalad\" \"Kokku – kõik tegevusalad\" ...\n $ Vaatlusperiood: chr  \"2002 I kvartal\" \"2002 II kvartal\" \"2002 III kvartal\" \"2002 IV kvartal\" ...\n $ väärtus       : num  366 406 374 416 405 442 411 455 431 474 ...\n\n\n\n\n\n\n\n\nPea meeles!\n\n\n\nTunnuse tüüp peab olema objektis määratud vastavalt tunnuse mõõtmise tasemele. Arvud peavad olema objektides salvestatud arvtunnusena ning sõnad ja laused nimitunnusena. Vastupidisel juhul käsitlevad funktsioonid tunnuseid valesti ega võimalda rakendada vajalikke tehteid.\n\n\nTunnuse tüüp on oluline selleks et funktsioonid oskaksid neid õigesti kasutada. Nt kui arve sisaldav veerg on laaditud mingil põhjusel1 objekti nimitunnusena, siis ei ole võimalik sellise tunnusega matemaatilisi tehteid teha. Kui aga andmetabelis on mingi vaatluse kood (nt isikukood), mille R keel tuvastab arvtunnusena, siis on mõistlik salvestada see nimitunnusena, et mitte selle alusel kogemata arvutusi teha. Tunnuste tüübi teisendamiseks saab kasutada funktsioone as.character() ja as.numeric().1 Kui arve sisaldavasse veergu on sattunud mõni sõna, täht, kirjavahemärk vms, siis R loeb selles veerus olevad väärtused enamasti nimitunnusteks.\n\n# Kui arvud on salvestatud nimitunnusena, siis ei saa arvutata keskmist.\npalk$väärtus <- as.character(palk$väärtus)\nhead(palk$väärtus) %>% mean\n\nWarning in mean.default(.): argument is not numeric or logical: returning NA\n\n\n[1] NA\n\n# Kui arvtunnus on õigesti sisestatud, siis saab selle alusel ka arvutada.\npalk$väärtus <- as.numeric(palk$väärtus)\nhead(palk$väärtus) %>% mean\n\n[1] 401.5"
  },
  {
    "objectID": "korrastus.html#kordumatud-väärtused",
    "href": "korrastus.html#kordumatud-väärtused",
    "title": "6  Korrastus",
    "section": "6.3 Kordumatud väärtused",
    "text": "6.3 Kordumatud väärtused\nEelnevalt kuvatud andmetabeli puhul huvitab meid ilmselt, mis võimalikud väärtused on veergudes “Näitaja”, “Tegevusala” ja “Vaatlusperiood”. Kuna tabelis on 7680 rida, siis ei ole otstarbekas kuvada kõiki väärtusi, vaid ainult neid, mis ei kordu. Selleks on käsklus unique().\n\nunique(palk$Näitaja)\n\n[1] \"Keskmine brutokuupalk, eurot\"                          \n[2] \"Keskmine kuutööjõukulu töötaja kohta, eurot\"           \n[3] \"Osalise tööajaga töötajate töötatud tundide osakaal, %\"\n[4] \"Keskmine töötajate arv, taandatud täistööajale\"        \n\nunique(palk$Tegevusala)\n\n [1] \"Kokku – kõik tegevusalad\"                                          \n [2] \"Põllumajandus, metsamajandus ja kalapüük\"                          \n [3] \"Mäetööstus\"                                                        \n [4] \"Töötlev tööstus\"                                                   \n [5] \"Elektrienergia, gaasi, auru ja konditsioneeritud õhuga varustamine\"\n [6] \"Veevarustus; kanalisatsioon; jäätme- ja saastekäitlus\"             \n [7] \"Ehitus\"                                                            \n [8] \"Hulgi- ja jaekaubandus; mootorsõidukite ja mootorrataste remont\"   \n [9] \"Veondus ja laondus\"                                                \n[10] \"Majutus ja toitlustus\"                                             \n[11] \"Info ja side\"                                                      \n[12] \"Finants- ja kindlustustegevus\"                                     \n[13] \"Kinnisvaraalane tegevus\"                                           \n[14] \"Kutse-, teadus- ja tehnikaalane tegevus\"                           \n[15] \"Haldus- ja abitegevused\"                                           \n[16] \"Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus\"      \n[17] \"Haridus\"                                                           \n[18] \"Tervishoid ja sotsiaalhoolekanne\"                                  \n[19] \"Kunst, meelelahutus ja vaba aeg\"                                   \n[20] \"Muud teenindavad tegevused\"                                        \n\nunique(palk$Vaatlusperiood)\n\n [1] \"2002 I kvartal\"   \"2002 II kvartal\"  \"2002 III kvartal\" \"2002 IV kvartal\" \n [5] \"2003 I kvartal\"   \"2003 II kvartal\"  \"2003 III kvartal\" \"2003 IV kvartal\" \n [9] \"2004 I kvartal\"   \"2004 II kvartal\"  \"2004 III kvartal\" \"2004 IV kvartal\" \n[13] \"2005 I kvartal\"   \"2005 II kvartal\"  \"2005 III kvartal\" \"2005 IV kvartal\" \n[17] \"2006 I kvartal\"   \"2006 II kvartal\"  \"2006 III kvartal\" \"2006 IV kvartal\" \n[21] \"2007 I kvartal\"   \"2007 II kvartal\"  \"2007 III kvartal\" \"2007 IV kvartal\" \n[25] \"2008\"             \"2008 I kvartal\"   \"2008 II kvartal\"  \"2008 III kvartal\"\n[29] \"2008 IV kvartal\"  \"2009\"             \"2009 I kvartal\"   \"2009 II kvartal\" \n[33] \"2009 III kvartal\" \"2009 IV kvartal\"  \"2010\"             \"2010 I kvartal\"  \n[37] \"2010 II kvartal\"  \"2010 III kvartal\" \"2010 IV kvartal\"  \"2011\"            \n[41] \"2011 I kvartal\"   \"2011 II kvartal\"  \"2011 III kvartal\" \"2011 IV kvartal\" \n[45] \"2012\"             \"2012 I kvartal\"   \"2012 II kvartal\"  \"2012 III kvartal\"\n[49] \"2012 IV kvartal\"  \"2013\"             \"2013 I kvartal\"   \"2013 II kvartal\" \n[53] \"2013 III kvartal\" \"2013 IV kvartal\"  \"2014\"             \"2014 I kvartal\"  \n[57] \"2014 II kvartal\"  \"2014 III kvartal\" \"2014 IV kvartal\"  \"2015\"            \n[61] \"2015 I kvartal\"   \"2015 II kvartal\"  \"2015 III kvartal\" \"2015 IV kvartal\" \n[65] \"2016\"             \"2016 I kvartal\"   \"2016 II kvartal\"  \"2016 III kvartal\"\n[69] \"2016 IV kvartal\"  \"2017\"             \"2017 I kvartal\"   \"2017 II kvartal\" \n[73] \"2017 III kvartal\" \"2017 IV kvartal\"  \"2018\"             \"2018 I kvartal\"  \n[77] \"2018 II kvartal\"  \"2018 III kvartal\" \"2018 IV kvartal\"  \"2019\"            \n[81] \"2019 I kvartal\"   \"2019 II kvartal\"  \"2019 III kvartal\" \"2019 IV kvartal\" \n[85] \"2020\"             \"2020 I kvartal\"   \"2020 II kvartal\"  \"2020 III kvartal\"\n[89] \"2020 IV kvartal\"  \"2021\"             \"2021 I kvartal\"   \"2021 II kvartal\" \n[93] \"2021 III kvartal\" \"2021 IV kvartal\"  \"2022 I kvartal\"   \"2022 II kvartal\" \n\n\nNäeme, et vaatlusperioodi veerus on läbisegi aastad ja kvartalid. Kui teisendame vastava tunnuse arvtunnuseks, siis tähti sisaldavad väärtused muutuvad puuduvateks väärtusteks.\n\npalk$Vaatlusperiood <- as.numeric(palk$Vaatlusperiood)\n\nWarning: NAs introduced by coercion\n\nunique(palk$Vaatlusperiood)\n\n [1]   NA 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021"
  },
  {
    "objectID": "korrastus.html#puuduvad-väärtused",
    "href": "korrastus.html#puuduvad-väärtused",
    "title": "6  Korrastus",
    "section": "6.4 Puuduvad väärtused",
    "text": "6.4 Puuduvad väärtused\nKui andmetes esineb puuduvaid väärtusi, siis on kolm peamist viisi, kuidas nendega tekkivaid probleeme lahendada.\n\nEnamasti eemaldatakse andmetabelist vaatlused (read), milles esinevad puuduvad väärtused.\nKui on teada, et puuduvad väärtused esinevad juhuslikult, siis on lihtne viis on asendada need veeru keskmise väärtusega.\nÕigem on tuletada puuduvad väärtused aga teiste veergude väärtuste alusel. Tõeste väärtuse prognoosimiseks on palju erievaid võimalusi, sh masinõpe.\nKui puuduvaid väärtusi soovitakse analüüsi kaasata või eraldi uurida, siis saab need eraldi väärtusega määratleda. Puuduvate nimitunnuse väärtustele võib anda mingi nimetuse, arvtunnuse korral võib puuduvad väärtused määratleda eraldi veerus loogilise muutujana.\n\nVaatlusperioodi teisendamise tulemusel on nüüd vastavas veerus puuduvad väärtused nendel juhtudel, kus lisaks aastaarvule oli kirjas ka kvartal. Seega saame tabelisse alles jätta vaid aastaid esindavad väärtused kui eemaldame need read, kus vaatlusperiood puudub. Puuduvate väärtuse määratlemiseks saame kasutada funktsiooni is.na() ja olemasolevate väärtuse valimiseks peame seega lisaman funktsiooni ette loogikaoperaatori !.\n\n# Algne ridade arv\nnrow(palk)\n\n[1] 7680\n\n# Sõelume välja väärtused, kus vaatlusperiood ei ole puudu.\npalk <- filter(palk, !is.na(Vaatlusperiood))\n# Ridade arv pärast puuduvate väärtustega ridade eemaldamist\nnrow(palk)\n\n[1] 1120\n\n\nTeine võimalus on kasutada funktsiooni complete.cases(), mis väljastab andmetabelis puuduvate väärtusteta read määrava tõeväärtuse, võttes puuduvate väärtuse määramisel arvesse kõiki veerge.\n\n# Valime read, kus on ainult täielikud vaatlused\npalk <- palk[complete.cases(palk), ]\n# Eemaldame puuduvate väärtustega read\npalk <- na.omit(palk)"
  },
  {
    "objectID": "korrastus.html#väärtuste-asendamine",
    "href": "korrastus.html#väärtuste-asendamine",
    "title": "6  Korrastus",
    "section": "6.5 Väärtuste asendamine",
    "text": "6.5 Väärtuste asendamine\nMõnikord esineb andmetes väärtusi, mis ei ole teoreetiliselt võimalikud. Sellisel juhul on kolm viisi, kuidas sobimatud väärtused kõrvaldada.\n\nArvtunnuse korral saab ebasobiva väärtuse asendada vastavalt vähima või suurima teoreetiliselt võimaliku väärtusega.\nVõimalusel saab eemaldada kogu ebasobivaid väärtuseid sisaldava tunnuse.\nEbasobivaid väärtusi saab kohelda nii nagu puuduvaid väärtuseid.\n\nKui oletame, et meie andmetabelis oleval ajavahemikul oli alampalk kõige vähem 278 eurot kuus, siis ei tohiks olla väärtuseid, kus keskmine brutokuupalk on sellest madalam.\n\n# Tekitame uue andmetabeli ainult kõikide tegevusalade keskmise kuupalgaga\nbruto <- filter(palk, \n                Näitaja == 'Keskmine brutokuupalk, eurot' &\n                  Tegevusala == 'Kokku – kõik tegevusalad')\n# Määrame väärtuseks 278 juhtudel, kus väärtus on vähem kui 278\nbruto$väärtus[bruto$väärtus < 278] <- 278"
  },
  {
    "objectID": "korrastus.html#väärtuste-teisendamine",
    "href": "korrastus.html#väärtuste-teisendamine",
    "title": "6  Korrastus",
    "section": "6.6 Väärtuste teisendamine",
    "text": "6.6 Väärtuste teisendamine\nVäärtuste teisendamise käigus antakse tunnusele uued väärtused lähtudes algsetest väärtustest. Selleks on mitu põhjust ja viisi.\n\nKui tunnusel on palju äärmuslikul suuri või väikseid väärtusi, siis selline tunnus ei sobi paljude parameetriliste meetodite rakendamiseks. Sellisel juhul saab kasutada erinevaid matemaatilisi teisendusi, mis muudab väärtuste jaotuse sümmeetrilisemaks2.\nTeatud meetodid eeldavad, et andmed on mõõdetud samal skaalal ehk omavad sarnaseid väärtusi. Sellisel juhul saame väärtused standardiseerida.\nKui tunnusel on rohkem kordumatuid väärtusi kui soovime, siis saame väärtused intervallida.\n\n2 Kui tunnusel on palju äärmuslikult suuri jaotusi, siis naturaallogaritm väärtustest annab tulemuseks sümmeetrilise jaotuse.Kui soovime keskmise brutokuupalga esitada 500 euro laiuste intervallidena, siis saame intervallimiseks kasutada funktsiooni cut().\n\nbruto$intervallid <- cut(bruto$väärtus, \n                         breaks = c(500,1000,1500,Inf), \n                         labels = c(\">500...1000\",\">1000...1500\",\">1500\"))\nbruto %>% select(Vaatlusperiood, väärtus, intervallid)\n\n   Vaatlusperiood väärtus  intervallid\n1            2008     825  >500...1000\n2            2009     784  >500...1000\n3            2010     792  >500...1000\n4            2011     839  >500...1000\n5            2012     887  >500...1000\n6            2013     949  >500...1000\n7            2014    1005 >1000...1500\n8            2015    1065 >1000...1500\n9            2016    1146 >1000...1500\n10           2017    1221 >1000...1500\n11           2018    1310 >1000...1500\n12           2019    1407 >1000...1500\n13           2020    1448 >1000...1500\n14           2021    1548        >1500\n\n\nAndmetabelisse saab lisada tunnuseid või neid muuta muuhulgas ka funktsiooni mutate() abil.\n\n# Mis aastatel oli keskmine brutotöötasu üle keskmise?\nbruto <- mutate(bruto, ülekeskmise = väärtus > mean(väärtus))\nhead(bruto)\n\n                       Näitaja               Tegevusala Vaatlusperiood väärtus\n1 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2008     825\n2 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2009     784\n3 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2010     792\n4 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2011     839\n5 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2012     887\n6 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2013     949\n  intervallid ülekeskmise\n1 >500...1000       FALSE\n2 >500...1000       FALSE\n3 >500...1000       FALSE\n4 >500...1000       FALSE\n5 >500...1000       FALSE\n6 >500...1000       FALSE"
  },
  {
    "objectID": "korrastus.html#korrasandmed",
    "href": "korrastus.html#korrasandmed",
    "title": "6  Korrastus",
    "section": "6.7 Korrasandmed",
    "text": "6.7 Korrasandmed\nKorrasandmed (tidy data (Wickham, 2014)) on andmetabeli vormistamise viis, mille korral\n\niga tunnus on eraldi veerus,\niga vaatlus on eraldi real,\niga vaatluste aluseks olev üksus on omaette tabelis3.\n\n\n3 Nt tellimuste tabelis ei peaks olema kõiki tellija tunnuseid, vaid tellimused ja tellijad tuleks hoida eraldi tabeltes ning ainult vajaduse korral need tellija koodi alusel kokku viia.\n6.7.1 Andmetabeli laiendamine\nMeie andmed brutotöötasu kohta vastavad tingimusele, et iga vaatlus (mõõtmine) on eraldi real. Kui lähtume aga sellest, et iga näitaja on omaette tunnus, siis peaks iga näitaja väärtused olema eraldi veerus, et meie andmed korrasandmete tingimusele vastaksid.\n\nhead(palk)\n\n                       Näitaja               Tegevusala Vaatlusperiood väärtus\n1 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2008     825\n2 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2009     784\n3 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2010     792\n4 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2011     839\n5 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2012     887\n6 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2013     949\n\n\nSellist andmetabelit, milles iga rida sisaldab ainult ühte väärtust, võiks nimetada täielikult kitsaks. Selline kitsas andmetabel ei pruugi olla kõige sobivam viis selles olevate andmete analüüsimiseks. Nt on praegu keeruline võrrelda kahe näitaja väärtusi, sest need väärtused on kõik ühes veerus. Kui soovime tõsta iga näitaja eraldi veergu ehk antud juhul andmetabelit laiendada, siis saame selleks kasutada funktsiooni pivot_wider().\n\npalk <- pivot_wider(palk, names_from = 'Näitaja', values_from = 'väärtus')\nhead(palk)\n\n# A tibble: 6 × 6\n  Tegevusala               Vaatlusperiood Keskmine bru…¹ Keskm…² Osali…³ Keskm…⁴\n  <chr>                             <dbl>          <dbl>   <dbl>   <dbl>   <dbl>\n1 Kokku – kõik tegevusalad           2008            825    1113     6.4  543432\n2 Kokku – kõik tegevusalad           2009            784    1067     8.2  488166\n3 Kokku – kõik tegevusalad           2010            792    1074     8.1  458523\n4 Kokku – kõik tegevusalad           2011            839    1137     7.3  469123\n5 Kokku – kõik tegevusalad           2012            887    1203     7.2  489054\n6 Kokku – kõik tegevusalad           2013            949    1284     7    487591\n# … with abbreviated variable names ¹​`Keskmine brutokuupalk, eurot`,\n#   ²​`Keskmine kuutööjõukulu töötaja kohta, eurot`,\n#   ³​`Osalise tööajaga töötajate töötatud tundide osakaal, %`,\n#   ⁴​`Keskmine töötajate arv, taandatud täistööajale`\n\n# Kuna veeru nimed sisaldavad nüüd tühikuid, siis nimetame need ümber.\nnames(palk) <- c('tegevusala', 'aasta', \n                 'kesk.palk', 'kesk.kulu', 'osatööaeg', 'töötajad')\nhead(palk)\n\n# A tibble: 6 × 6\n  tegevusala               aasta kesk.palk kesk.kulu osatööaeg töötajad\n  <chr>                    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>\n1 Kokku – kõik tegevusalad  2008       825      1113       6.4   543432\n2 Kokku – kõik tegevusalad  2009       784      1067       8.2   488166\n3 Kokku – kõik tegevusalad  2010       792      1074       8.1   458523\n4 Kokku – kõik tegevusalad  2011       839      1137       7.3   469123\n5 Kokku – kõik tegevusalad  2012       887      1203       7.2   489054\n6 Kokku – kõik tegevusalad  2013       949      1284       7     487591\n\n\nSellisel kujul tabeliga on meil võimalik erinevatel küsimustele vastamiseks arvutusi teha.\n\n# Mitu eurot kulus keskmiselt tööjõumaksudeks?\npalk$kesk.maksud <- palk$kesk.kulu - palk$kesk.palk\nhead(palk)\n\n# A tibble: 6 × 7\n  tegevusala               aasta kesk.palk kesk.kulu osatööaeg töötajad kesk.m…¹\n  <chr>                    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>    <dbl>\n1 Kokku – kõik tegevusalad  2008       825      1113       6.4   543432      288\n2 Kokku – kõik tegevusalad  2009       784      1067       8.2   488166      283\n3 Kokku – kõik tegevusalad  2010       792      1074       8.1   458523      282\n4 Kokku – kõik tegevusalad  2011       839      1137       7.3   469123      298\n5 Kokku – kõik tegevusalad  2012       887      1203       7.2   489054      316\n6 Kokku – kõik tegevusalad  2013       949      1284       7     487591      335\n# … with abbreviated variable name ¹​kesk.maksud\n\n\n\n\n\n\n\n\nPea meeles!\n\n\n\nEnamus funktsioone eeldavad, et funktsiooni argumentidena esitab kasutaja tunnuse väärtusi sisaldava veeru. Seetõttu tuleks andmetabel vormistada selliselt, et iga tunnuse väärtused on eraldi veerus.\n\n\n\n\n6.7.2 Andmetabeli kitsendamine\nSageli on meil aga vastupidine olukord, kus ühe tunnuse väärtused on jagatud mitmesse veergu. See oli kunagi sagedane nt Statistikaameti tabelite korral, milles vaikimisi esitati iga aasta väärtused eraldi veerus. Sellisel kujul andmed sobivad küll aegridade joonistamiseks tabelarvutuse rakendustes, aga mitte R keele funktsioonide kasutamiseks.\nAll on esitatud Statistikaameti tabel PA5335 palgalõhe kohta, milles iga aasta väärtused on eraldi veerus.\n\nhead(lõhe)\n\n# A tibble: 6 × 13\n  Tegev…¹ Näitaja `2011` `2012` `2013` `2014` `2015` `2016` `2017` `2018` `2019`\n  <chr>   <chr>    <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n1 Tegevu… Meestö…    5.7    5.7    6.1    6.4    7      7.6    7.9    7.9    8.6\n2 Tegevu… Naistö…    4.4    4.3    4.6    4.9    5.4    6      6.3    6.5    7.1\n3 Tegevu… Palgal…   22.9   24.6   24.8   23.5   22.2   20.9   20.9   18     17.1\n4 Põllum… Meestö…    4.2    4.2    4.9    5.2    6.3    6.8    6.7    6.5    6.8\n5 Põllum… Naistö…    3.6    3.9    4.3    4.5    5      5.5    5.8    5.3    5.7\n6 Põllum… Palgal…   14.7    7     12.7   14.5   20.1   19.2   13.2   18.5   15.8\n# … with 2 more variables: `2020` <dbl>, `2021` <dbl>, and abbreviated variable\n#   name ¹​Tegevusala..EMTAK.2008.\n# ℹ Use `colnames()` to see all variable names\n\n\nKoondamaks kõikide aastate väärtused ühte veergu, tuleks seda andmetabelit kitsendada ehk pikendada. Seda saab teha nt funktsiooniga pivot_longer().\n\n# Viime kõik aastad ühte veergu\nlõhe <- pivot_longer(lõhe, cols = as.character(2011:2021), \n                     names_to = 'aasta', values_to = 'väärtus')\nhead(lõhe)\n\n# A tibble: 6 × 4\n  Tegevusala..EMTAK.2008. Näitaja                                  aasta väärtus\n  <chr>                   <chr>                                    <chr>   <dbl>\n1 Tegevusalad kokku       Meestöötajate keskmine brutotunnipalk, … 2011      5.7\n2 Tegevusalad kokku       Meestöötajate keskmine brutotunnipalk, … 2012      5.7\n3 Tegevusalad kokku       Meestöötajate keskmine brutotunnipalk, … 2013      6.1\n4 Tegevusalad kokku       Meestöötajate keskmine brutotunnipalk, … 2014      6.4\n5 Tegevusalad kokku       Meestöötajate keskmine brutotunnipalk, … 2015      7  \n6 Tegevusalad kokku       Meestöötajate keskmine brutotunnipalk, … 2016      7.6\n\n# Viime iga näitaja eraldi veergu\nlõhe <- pivot_wider(lõhe, names_from = 'Näitaja', values_from = 'väärtus')\nhead(lõhe)\n\n# A tibble: 6 × 5\n  Tegevusala..EMTAK.2008. aasta Meestöötajate keskmine brutotu…¹ Naist…² Palga…³\n  <chr>                   <chr>                            <dbl>   <dbl>   <dbl>\n1 Tegevusalad kokku       2011                               5.7     4.4    22.9\n2 Tegevusalad kokku       2012                               5.7     4.3    24.6\n3 Tegevusalad kokku       2013                               6.1     4.6    24.8\n4 Tegevusalad kokku       2014                               6.4     4.9    23.5\n5 Tegevusalad kokku       2015                               7       5.4    22.2\n6 Tegevusalad kokku       2016                               7.6     6      20.9\n# … with abbreviated variable names\n#   ¹​`Meestöötajate keskmine brutotunnipalk, eurot`,\n#   ²​`Naistöötajate keskmine brutotunnipalk, eurot`, ³​`Palgalõhe, %`\n\n# Parendame veergude nimetusi\nnames(lõhe) <- c('tegevusala', 'aasta', 'mehed.palk', 'naised.palk', 'lõhe.osa')\nhead(lõhe)\n\n# A tibble: 6 × 5\n  tegevusala        aasta mehed.palk naised.palk lõhe.osa\n  <chr>             <chr>      <dbl>       <dbl>    <dbl>\n1 Tegevusalad kokku 2011         5.7         4.4     22.9\n2 Tegevusalad kokku 2012         5.7         4.3     24.6\n3 Tegevusalad kokku 2013         6.1         4.6     24.8\n4 Tegevusalad kokku 2014         6.4         4.9     23.5\n5 Tegevusalad kokku 2015         7           5.4     22.2\n6 Tegevusalad kokku 2016         7.6         6       20.9\n\n\n\n\n\n\n\n\nPea meeles!\n\n\n\nKorduvate mõõtmiste korral tuleks mõõtmise aeg kajastada eraldi veerus ja mitte jaotada sama tunnuse mõõtmisi erinevate veergude vahel."
  },
  {
    "objectID": "korrastus.html#agregeerimine",
    "href": "korrastus.html#agregeerimine",
    "title": "6  Korrastus",
    "section": "6.8 Agregeerimine",
    "text": "6.8 Agregeerimine\nSageli on vaja andmetabelis olevad väärtused edasiseks analüüsiks kuidagi koondada. Väärtuste kokku võtmine mingite rühmade kaupa ja mingi tehte alusel on agregeerimine. Nii on agregeerimisel vaja määrata\n\nväärtusi sisaldav kokku võetav tunnus,\nväärtusi rühmitav tunnus,\nkokkuvõtte aluseks olev tehe (funktsioon).\n\nAndmetabeli agregeerimiseks on R keeles funktsioon aggregate(), mille argumentideks tuleb sisestada need kolm tegurit.\n\nhead(palk)\n\n# A tibble: 6 × 7\n  tegevusala               aasta kesk.palk kesk.kulu osatööaeg töötajad kesk.m…¹\n  <chr>                    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>    <dbl>\n1 Kokku – kõik tegevusalad  2008       825      1113       6.4   543432      288\n2 Kokku – kõik tegevusalad  2009       784      1067       8.2   488166      283\n3 Kokku – kõik tegevusalad  2010       792      1074       8.1   458523      282\n4 Kokku – kõik tegevusalad  2011       839      1137       7.3   469123      298\n5 Kokku – kõik tegevusalad  2012       887      1203       7.2   489054      316\n6 Kokku – kõik tegevusalad  2013       949      1284       7     487591      335\n# … with abbreviated variable name ¹​kesk.maksud\n\n# Mis oli igal tegevusalal perioodi keskmise brutotöötasu keskmine?\naggregate(kesk.palk ~ tegevusala, palk, mean)\n\n                                                           tegevusala kesk.palk\n1        Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus 1332.3571\n2                                                              Ehitus 1076.3571\n3  Elektrienergia, gaasi, auru ja konditsioneeritud õhuga varustamine 1535.0714\n4                                       Finants- ja kindlustustegevus 1822.4286\n5                                             Haldus- ja abitegevused  959.2143\n6                                                             Haridus  974.4286\n7     Hulgi- ja jaekaubandus; mootorsõidukite ja mootorrataste remont  988.1429\n8                                                        Info ja side 1820.7143\n9                                             Kinnisvaraalane tegevus  826.7857\n10                                           Kokku – kõik tegevusalad 1087.5714\n11                                    Kunst, meelelahutus ja vaba aeg  864.0000\n12                            Kutse-, teadus- ja tehnikaalane tegevus 1286.5714\n13                                                         Mäetööstus 1330.0000\n14                                              Majutus ja toitlustus  688.2857\n15                                         Muud teenindavad tegevused  710.8571\n16                           Põllumajandus, metsamajandus ja kalapüük  932.2857\n17                                   Tervishoid ja sotsiaalhoolekanne 1132.3571\n18                                                    Töötlev tööstus 1035.2143\n19              Veevarustus; kanalisatsioon; jäätme- ja saastekäitlus 1092.7857\n20                                                 Veondus ja laondus 1065.8571\n\n\nTeine võimalus agregeerimiseks on kasutada pakis tidyverse sisalduvaid funktsioone group_by() esmalt rühmitamiseks ja summarise() seejärel kokku võtmiseks.\n\nhead(lõhe)\n\n# A tibble: 6 × 5\n  tegevusala        aasta mehed.palk naised.palk lõhe.osa\n  <chr>             <chr>      <dbl>       <dbl>    <dbl>\n1 Tegevusalad kokku 2011         5.7         4.4     22.9\n2 Tegevusalad kokku 2012         5.7         4.3     24.6\n3 Tegevusalad kokku 2013         6.1         4.6     24.8\n4 Tegevusalad kokku 2014         6.4         4.9     23.5\n5 Tegevusalad kokku 2015         7           5.4     22.2\n6 Tegevusalad kokku 2016         7.6         6       20.9\n\n# Mis oli igal tegevusalal kõige suurem palgalõhe?\nlõhe %>% \n  group_by(tegevusala) %>% # Rühmitame andmetabeli tegevusala alusel\n  summarise(max(lõhe.osa)) # Leiame suurima palgalõhe\n\n# A tibble: 20 × 2\n   tegevusala                                                         max(lõhe…¹\n   <chr>                                                                   <dbl>\n 1 Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus             12.1\n 2 Ehitus                                                                   22  \n 3 Elektrienergia, gaasi, auru ja konditsioneeritud õhuga varustamine       18.4\n 4 Finants- ja kindlustustegevus                                            43.3\n 5 Haldus- ja abitegevused                                                  20.4\n 6 Haridus                                                                  26.4\n 7 Hulgi- ja jaekaubandus; mootorsõidukite ja mootorrataste remont          33.8\n 8 Info ja side                                                             30.1\n 9 Kinnisvaraalane tegevus                                                  27.3\n10 Kunst, meelelahutus ja vaba aeg                                          28.1\n11 Kutse-, teadus- ja tehnikaalane tegevus                                  24.7\n12 Mäetööstus                                                               36.4\n13 Majutus ja toitlustus                                                    20.9\n14 Muud teenindavad tegevused                                               27.4\n15 Põllumajandus, metsamajandus ja kalapüük                                 20.1\n16 Tegevusalad kokku                                                        24.8\n17 Tervishoid ja sotsiaalhoolekanne                                         29.7\n18 Töötlev tööstus                                                          31.5\n19 Veevarustus; kanalisatsioon, jäätme- ja saastekäitlus                    13.6\n20 Veondus ja laondus                                                       10.3\n# … with abbreviated variable name ¹​`max(lõhe.osa)`\n\n\nVäga sageli on kasu ka funktsioonist table(), mille abil saab väärtuseid loendada.\n\nhead(lõhe)\n\n# A tibble: 6 × 5\n  tegevusala        aasta mehed.palk naised.palk lõhe.osa\n  <chr>             <chr>      <dbl>       <dbl>    <dbl>\n1 Tegevusalad kokku 2011         5.7         4.4     22.9\n2 Tegevusalad kokku 2012         5.7         4.3     24.6\n3 Tegevusalad kokku 2013         6.1         4.6     24.8\n4 Tegevusalad kokku 2014         6.4         4.9     23.5\n5 Tegevusalad kokku 2015         7           5.4     22.2\n6 Tegevusalad kokku 2016         7.6         6       20.9\n\n# Mitu korda iga tegevusala tabelis esineb?\ntable(lõhe$tegevusala)\n\n\n      Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus \n                                                                11 \n                                                            Ehitus \n                                                                11 \nElektrienergia, gaasi, auru ja konditsioneeritud õhuga varustamine \n                                                                11 \n                                     Finants- ja kindlustustegevus \n                                                                11 \n                                           Haldus- ja abitegevused \n                                                                11 \n                                                           Haridus \n                                                                11 \n   Hulgi- ja jaekaubandus; mootorsõidukite ja mootorrataste remont \n                                                                11 \n                                                      Info ja side \n                                                                11 \n                                           Kinnisvaraalane tegevus \n                                                                11 \n                                   Kunst, meelelahutus ja vaba aeg \n                                                                11 \n                           Kutse-, teadus- ja tehnikaalane tegevus \n                                                                11 \n                                                        Mäetööstus \n                                                                11 \n                                             Majutus ja toitlustus \n                                                                11 \n                                        Muud teenindavad tegevused \n                                                                11 \n                          Põllumajandus, metsamajandus ja kalapüük \n                                                                11 \n                                                 Tegevusalad kokku \n                                                                11 \n                                  Tervishoid ja sotsiaalhoolekanne \n                                                                11 \n                                                   Töötlev tööstus \n                                                                11 \n             Veevarustus; kanalisatsioon, jäätme- ja saastekäitlus \n                                                                11 \n                                                Veondus ja laondus \n                                                                11 \n\n# Mitmel aastal oli igal tegevusalal palgalõhe rohkem kui 10%?\ntable(lõhe$tegevusala, lõhe$lõhe.osa > 10)\n\n                                                                    \n                                                                     FALSE TRUE\n  Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus           8    3\n  Ehitus                                                                 1   10\n  Elektrienergia, gaasi, auru ja konditsioneeritud õhuga varustamine     1   10\n  Finants- ja kindlustustegevus                                          0   11\n  Haldus- ja abitegevused                                                2    9\n  Haridus                                                                0   11\n  Hulgi- ja jaekaubandus; mootorsõidukite ja mootorrataste remont        0   11\n  Info ja side                                                           0   11\n  Kinnisvaraalane tegevus                                                0   11\n  Kunst, meelelahutus ja vaba aeg                                        1   10\n  Kutse-, teadus- ja tehnikaalane tegevus                                2    9\n  Mäetööstus                                                             0   11\n  Majutus ja toitlustus                                                  1   10\n  Muud teenindavad tegevused                                             2    9\n  Põllumajandus, metsamajandus ja kalapüük                               3    8\n  Tegevusalad kokku                                                      0   11\n  Tervishoid ja sotsiaalhoolekanne                                       0   11\n  Töötlev tööstus                                                        0   11\n  Veevarustus; kanalisatsioon, jäätme- ja saastekäitlus                  8    3\n  Veondus ja laondus                                                    10    1\n\n\nÜleval olevast tabelist näeme muuhulgas, et\n\nveonduses ja laonduses oli palgalõhe ainult ühel aastal üle 10%, samas kui\nhariduses oli kõikidel aastatel palgalõhe üle 10%."
  },
  {
    "objectID": "korrastus.html#tabelite-ühendamine",
    "href": "korrastus.html#tabelite-ühendamine",
    "title": "6  Korrastus",
    "section": "6.9 Tabelite ühendamine",
    "text": "6.9 Tabelite ühendamine\nMõnikord on sama vaatluse andmed erinevates tabelites. Sellisel juhul saame kaks tabelit omavahel ühendada ühe või mitme tunnuse väärtuste alusel.\nKäesolevates näidetes võiksime ühendada brutopalga ja palgalõhe andmetabelid palk ja lõhe. Mõlemas tabelis esindab iga rida ühte tegevusala ühel aastal, mistõttu saab nende kahe tunnuse alusel read kokku viia.\nSelleks peavad sama tähendusega väärtused olema samamoodi nimetatud. Saame seda kontrollida funktsiooniga setdiff(), mis näitab, millised esimeses argumendis olevad kordumatud väärtused on puudu teisest argumendist.\n\n# Milliseid palgalõhe tabelis olevaid tegevusalasid ei ole brutopalga tabelis?\nsetdiff(lõhe$tegevusala, palk$tegevusala)\n\n[1] \"Tegevusalad kokku\"                                    \n[2] \"Veevarustus; kanalisatsioon, jäätme- ja saastekäitlus\"\n\n# Milliseid brutopalga tabelis olevaid tegevusalasid ei ole palgalõhe tabelis?\nsetdiff(palk$tegevusala, lõhe$tegevusala)\n\n[1] \"Kokku – kõik tegevusalad\"                             \n[2] \"Veevarustus; kanalisatsioon; jäätme- ja saastekäitlus\"\n\n\nNäeme, et kahes tabelis on samad nähtused kas erinevate nimetustega või siis on semikooloni asemel kastatud koma. Muudame väärtuste nimetused nii, et sama nähtus oleks täpselt samamoodi sõnastatud.\n\n# Määrame palgalõhe tabelis tegevusalale semikooloni koma asemele\nlõhe$tegevusala[lõhe$tegevusala == 'Veevarustus; kanalisatsioon, jäätme- ja saastekäitlus'] <- 'Veevarustus; kanalisatsioon; jäätme- ja saastekäitlus'\n# Määrame brutopalga tabelis veerus tegevusala \"Tegevusalad kokku\" seal, \n# kus on pregu on \"Kokku - kõik tegevusalad\"\npalk$tegevusala[palk$tegevusala == 'Kokku – kõik tegevusalad'] <- 'Tegevusalad kokku'\n\nKaks tabelit saame ühendada funktsiooniga merge().\n\npalkLõhe <- merge(\n  palk, lõhe, \n  by.x = c('tegevusala', 'aasta'), # Brutopalga tabeli ühendatavad tunnused\n  by.y = c('tegevusala', 'aasta'), # Palgalõhe tabeli ühendatavad tunnused\n  all.x = TRUE, # Jätame alles kõik brutopalga tabeli read\n  all.y = TRUE) # Jätame alles kõik palgalõhe tabeli read\n# Meie andmetabelites on ühendatavad tunnused sama nimega, \n# seega võime mõned argumendid ära jätta või neid lihtsustada\npalkLõhe <- merge(palk, lõhe, all = TRUE)\nhead(palkLõhe)\n\n                                                    tegevusala aasta kesk.palk\n1 Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus  2008      1061\n2 Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus  2009       981\n3 Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus  2010       955\n4 Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus  2011       988\n5 Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus  2012      1037\n6 Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus  2013      1130\n  kesk.kulu osatööaeg töötajad kesk.maksud mehed.palk naised.palk lõhe.osa\n1      1434       2.6    34776         373         NA          NA       NA\n2      1337       3.6    34693         356         NA          NA       NA\n3      1297       3.4    34935         342         NA          NA       NA\n4      1341       3.2    35034         353        6.2         5.5     10.2\n5      1408       2.9    35138         371        5.8         5.3      9.8\n6      1526       2.6    34552         396        6.4         5.7     12.1\n\n\nÜhendatud tabeli alusel saame varem kahes eraldi tabelis olnud tunnuseid nüüd omavahel võrrelda. Näiteks saame uurida, kuidas on palgalõhe seotud osatööaja, keskmise palga ja tegevusalaga ning kuidas see seos aastate jooksul muutunud on.\n\nggplot(palkLõhe) + \n  aes(x = lõhe.osa, y = osatööaeg, size = kesk.palk, color = aasta) + \n  geom_point(alpha = .5) +\n  facet_wrap(~tegevusala, ncol = 3) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nKelleher, J. D., & Tierney, B. (2018). Data science. The MIT Press.\n\n\nWickham, H. (2014). Tidy Data. Journal of Statistical Software, 059(i10). https://ideas.repec.org/a/jss/jstsof/v059i10.html"
  },
  {
    "objectID": "joonised.html",
    "href": "joonised.html",
    "title": "7  Joonised",
    "section": "",
    "text": "Andmete esitamine ilmekate joonistena võib tundunda lihtsakoelisena. Siiski on enamikes olukodades andmete visualiseerimine kasulikum kui nende esitamine mahuka teksti või keerukate tabelitena. Andmete visualiseerimine on teabe esitamine graafilisel kujul ja sellel on eelnevalt nimetatu ees mitu eelist (Saltz & Stanton, 2017):"
  },
  {
    "objectID": "joonised.html#joonistamise-põhimõtted",
    "href": "joonised.html#joonistamise-põhimõtted",
    "title": "7  Joonised",
    "section": "7.1 Joonistamise põhimõtted",
    "text": "7.1 Joonistamise põhimõtted\nAndmete vormistamisel joonistena võiks enamasti järgida alljärgnevaid soovitusi.\n\nLisa joonisele nii vähe kui on võimalk ja nii palju kui on vajalik.\nToo esile see, mis on kõige olulisem.\nEsita kas mingi üldine muster või too välja pisiasjad, aga mitte mõlemaid korraga.\nVeendu, et telgede ulatus ega väärtuste teisendused ei kallutaks seda, mida andmed tegelikult näitavad.\nMitme joonise kõrvutamisel veendu, et telgede ulatused on samad.\nKujuta andmepunktid või muud joonise osised läbipaistvatena, et vältida kattuvusel tekkivat teabekadu.\nÜhenda andmepunktid joontega ainult siis, kui nende järjestusel on mingi tähendus. Nt aegridade korral on näitab joon muutumist ajas.\nVärvid peaksid olema seotud kujutatavate väärtuste tähendusega.\n\nVärvide valikul on mitu põhimõtet, aga muuhulgas on oluline lähtuda tunnuse liigist ja väärtuste tähendusest (vt Crameri et al. (2020)). Üldiselt tuleks jälgida, et\n\nkõik värvid oleksid sama tugevusega (nt kollane on teistest värvidest heledam),\njärjestuse korral peaks värvide järjestus olema loogiline,\nkeskmine väärtus peaks olema selgelt neutraalse värviga eristatud,\nnähtuste vastandamise korral peaks ka värviskaala olema vastanduv.\n\nSageli viidatakse ka viiele omadusele, mis iseloomustavad head joonist (Cairo, 2016):\n\ntõene (põhineb uurimustööl),\nkasulik (rakendatav mingil eesmärgil),\nilus (kutsub vaatama),\navav (võimaldab näha midagi teisest küljest),\nselgitav (pakub uusi teadmisi)."
  },
  {
    "objectID": "joonised.html#jooniste-liigid",
    "href": "joonised.html#jooniste-liigid",
    "title": "7  Joonised",
    "section": "7.2 Jooniste liigid",
    "text": "7.2 Jooniste liigid\nVõimalikke viise jooniste vormistamiseks on lugematul hulgal. Üldiselt võib neid jooniseid eristada aga nelja omaduse alusel:\n\neesmärk (vt allpool),\nmõõtmistase (kvantitatiivsed või kvalitatiivsed tunnused),\nmõõtmed (telgede arv),\nandmete kuju (praktikas tähtsusetu).\n\nKõige otstarbekam on joonise vormistuse valimisel lähtuda andmete visualiseerimise eesmärgist, milleks võib olla kujutada\n\nvõrdlust (nt tulp-, punktjoonis),\nkoostist (nt ring-, pindala-, puujoonis),\nvooge (Sankey joonis),\nmuutust (joon),\nseost (nt hajumisjoonis, seosekaart),\njaotust (nt histogramm, tihedus-, karpjoonis),\nruumilist jaotust (punkt-, koropleetkaart),\nvõrgustikku (võrgustikjoonis).\n\nEnamus liike jooniseid võimaldavad visualiseerida ainult kvantitatiivselt mõõdetud ehk arvtunnuseid. Kvalitatiivseid tunnuseid saab joonistele lisada kas\n\nühele telgedest,\ntekitades iga kvalitatiivse tunnuse väärtuse jaoks eraldi joonise,\nkujundades vastavalt tunnuse väärtustele joonise osiseid, nt punktide suurust, kuju või värvi."
  },
  {
    "objectID": "joonised.html#joonised-r-keeles",
    "href": "joonised.html#joonised-r-keeles",
    "title": "7  Joonised",
    "section": "7.3 Joonised R keeles",
    "text": "7.3 Joonised R keeles\nAlljärgnevates näidetes joonistamise näitlikustamieks võrdleme maailma riike.\n\nlibrary('magrittr') # Laadime laienduse toru kasutamiseks\nriigid <- read.csv('andmed/countries.csv')\nnames(riigid) %<>% strsplit('\\\\.') %>% sapply(`[`, 1) # Jätame veerunimetustes alles vaid enne punkti oleva\n\nR keeles saab tekitada lihtsaid jooniseid nagu punkt- ja ringjoonis nt sageduste kujutamiseks.\n\ntable(riigid$Region) %>% barplot\n\n\n\ntable(riigid$Region) %>% pie\n\n\n\n\nSamuti tuleb R keelega kaasa mitu funktsiooni väärtuste hajumise kujutamiseks, sh histogramm ning hajumis- ja karpjoonis. Need funktsioonid ei nõua eriti palju tähemärke, mistõttu on neid mugav kasutada andmete uurimiseks.\n\nhist(riigid$Arable)\n\n\n\nplot(GDP ~ Phones, riigid)\n\n\n\nboxplot(GDP ~ Region, riigid)\n\n\n\n\nEelnevad R keelega kaasas olevad funktsioonid on mõnevõrra piiratud ja igasuguste osiste muutmine joonistel on enamasti keerukas ja kohmakas. Seetõttu on kujunenud tavapäraseks, et joonised tekitatakse R keeles hoopis laienduses ggplot2 olevate funktsioonidega. Need pakuvad andmete joonistamiseks peaaegu piiramatult võimalusi.\nNt on ggplot2 kasutades lihtne kujutada korraga joonisel mitut tunnust.\n\nlibrary('ggplot2')\nggplot(riigid) + \n  aes(x = GDP, y = Phones, size = Population, color = Literacy) + \n  geom_point() + \n  facet_wrap(~Region) + \n  theme_light()\n\nWarning: Removed 4 rows containing missing values (geom_point).\n\n\n\n\n\nAndmeid saab kujutada väga erinevat liiki joonistel, kuvada jooniseid üksteise peal ja muuta kõiki joonise osiseid.\n\nlibrary('ggplot2')\nggplot(riigid) + \n  aes(x = Region, y = Agriculture*100, color = Arable) + \n  coord_flip() + \n  ylim(c(0,100)) +\n  geom_boxplot() + \n  geom_jitter(aes(size = Population/1e6)) + \n  labs(title = \"Põllumajandus\", \n       subtitle = \"Hõive põllumajanduses erineb piirkonniti ja riigiti märkimisväärselt\", \n       x = \"Piirkond\", y = \"Hõive põllumajanduses, %\", \n       size = \"Rahvaarv, mln\", \n       color = \"Põllumajandusmaa\\nosakaal, %\") + \n  scale_color_gradient(low = 'steelblue', high = 'tomato') + \n  theme_light()\n\nWarning: Removed 15 rows containing non-finite values (stat_boxplot).\n\n\nWarning: Removed 16 rows containing missing values (geom_point).\n\n\n\n\n\nLaienduse ggplot2 kasutamise kohta on internetis hulgaliselt selgitusi ja näiteid. Nt võib selle abil joonistamisel võtta kõrvale juhendi.\n\n\n\n\n\nCairo, A. (2016). The truthful art: data, charts, and maps for communication. New Riders.\n\n\nCrameri, F., Shephard, G. E., & Heron, P. J. (2020). The misuse of colour in science communication. Nature Communications, 11(1), 5444. https://doi.org/10.1038/s41467-020-19160-7\n\n\nSaltz, J. S., & Stanton, J. M. (2017). An introduction to data science. SAGE Publications, Inc."
  },
  {
    "objectID": "tunnused.html",
    "href": "tunnused.html",
    "title": "8  Tunnuste liigid",
    "section": "",
    "text": "Kahte nähtust saab võrrelda mitmel viisl: kas üks on teisest suurem, kumb on teisest suurem, kui palju on üks teistest suurem. Vastavalt sellele saab nähtusi ka mitmel viisil mõõta. Kõige üldisemalt saame eristada nelja mõõtmistaset1, millele vastavad mõõtmisskaalad alates kõige üldistavamast:1 Eesti keeles on mõõtmistasemete olemust ilmekalt selgitanud Sauga (2017).\n\nbinaarskaala (kuni kaks järjestamata väärtust),\nnimiskaala (järjestamata väärtused),\njärjestusskala (järjestatud väärtused),\narvskaala (väärtused, mille erinevusi saame arvutada).\n\nSealjuures tuleb nähtuste mõõtmisel võtta arvesse, et mida üldistatum on mõõtmistase, seda vähem teavet see sisaldab. Seega saame väärtusi teisendada alati üldisemale mõõtmistasemele, aga mitte vähem üldisele.\nMõõtmistasemete eristamiseks on veel mitu viisi.\n\nKvantitatiivse ja kvalitatiivse mõõtmistaseme eristamine seisneb selles, kas mõõtmise tulemuseks on arvud. Kvantitatiivse mõõtmise korral on väärtused esitatavad tähenduslikult arvudena, kvalitatiivne mõõtmistase hõlmab enamasti aga arve mitte sisaldavaid väärtusi ehk sõnu või lauseid.\nDiskreetne ja pidev (discrete, continuous) mõõtmine kehtivad ainult arvskaalal ja nende erisus seisneb intervallide vahedes. Diskreetsel mõõtmisel on tulemuseks ainult täisarvud, mis saadakse enamasti millegi loendamisel. Pideval mõõtmisel võib tulemuseks olla mistahes arv.\nIntervall- ja suhteskaala (interval, ratio) on mõlemad arvskaala alaliigid, mille erinevus tuleneb väärtuse 0 tähendusest. Suhteskaalal tähendab väärtus 0 mõõdetava nähtuse puudumist, intervallskaalal aga mitte. Seetõttu võib intervallskaalal mõõdetud väärtusi ainult liita ja lahutada, suhteskaalal aga ka korrutada ja jagada (Stevens, 1946)2.\n\n2 Nt 20 eurot on kaks korda rohkem kui 10 eurot, aga 20 kraadi ei ole kaks korda soojem kui 10 kraadi.Eelnevalt selgitatud mõõtmise tasemed saab kokku võtta alloleva joonisega\n\n\n\n\ngraph\n    subgraph Kvalitatiivne\n        Binaarskaala-->Nimiskaala\n        Nimiskaala-->Järjestusskaala\n    end\n    subgraph Kvantitatiivne\n        Järjestusskaala-->Arvskaala\n    end\n        subgraph \"Väärtuse 0 tähendus\"\n            Arvskaala-->|0 ei ole puudumine|Intervallskaala\n            Arvskaala-->|0 on puudumine|Suhteskaala\n        end\n        subgraph \"Intervallide vahed\"\n            Arvskaala-->|Täisarvud|Diskreetne\n            Arvskaala-->|Kõik arvud|Pidev\n        end"
  },
  {
    "objectID": "tunnused.html#tunnuste-liigid",
    "href": "tunnused.html#tunnuste-liigid",
    "title": "8  Tunnuste liigid",
    "section": "8.2 Tunnuste liigid",
    "text": "8.2 Tunnuste liigid\nStatistikarakendused ja R keel määravad andmete sisestamisel igale andmetabeli veerule tunnuse liigi. See tunnuse liik on otseselt seotud mõõtmistasemega. Kasutades andmetöötluseks tarkvara, mis ei ole tabelarvutus, on oluline eristada käesoleva peatüki alguses esitatud nelja üldist mõõtmistaset. Diskreetsete ja pideva skaala eristamine ei ole üldjuhul tähtis ja intervall- ja suhteskaalat tarkvara ei erista.\nKui salvestada R töölaua objekti kas või üksik väärtus, siis määratakse selle liigiks kas numeric või character, vastavalt sellele, kas tegemist on arvuga või mitte. Kui väärtus pärineb tõeväärtusest (Peatükk 5), siis määratakse selle liigiks logical.\n\n\n\n\n\n\n\n\n\nEelistus\nMõõtmistase\nTunnuse liik R keeles\nSelgitus\n\n\n\n\n1.\nBinaarskaala\nLogical\nAinult väärtused FALSE või TRUE\n\n\n2.\nArvskaala\nNumeric\nAinult arvud\n\n\n3.\nJärjestusskaala\nFactor\nÜkskõik mis väärtused järjestatakse\n\n\n4.\nNimiskaala\nCharacter\nÜkskõik mis väärtused\n\n\n\n\n\n\n\n\n\nSoovitus\n\n\n\nVäärtustele tunnuse liigi määramisel tuleks eelistada kõige lihtsamat tunnuse liiki. Sel juhul saab enamasti vastava tunnusega kõige enam erinevaid tehteid teha.\n\n\nTunnuste liike on tarkvaral tähtis eristada seetõttu, et sel juhul\n\nilmnevad lihtsamini puudulikud väärtused veergudes3;\ntarkvara määrab ise tunnuse jaoks vaikimisi sobiva funktsiooni rakendamise või andmete kuvamise viisi;\ntarkvara saab optimeerida arvutuskäiku nii, et see toimuks võimalikult kiiresti.\n\n\n\n\n3 Nt kui arvude veergu on sattunud mõni täht, siis saab vea tuvastada varakult tunnuse tüübi alusel ja ei ole vaja hiljem ilmneva vea põhjust mõnikod mitu tundi otsida.\n\nSauga, A. (2017). Statistika õpik majanduseriala üliõpilastele. TTÜ kirjastus.\n\n\nStevens, S. S. (1946). On the Theory of Scales of Measurement. Science, 103(2684), 677–680. https://doi.org/10.1126/science.103.2684.677"
  },
  {
    "objectID": "valim.html",
    "href": "valim.html",
    "title": "9  Valim ja kogum",
    "section": "",
    "text": "Mõiste\n\n\n\nKui andmetes on ainult osa vaatlustest, mida soovime kirjeldada, siis on tegemist valimiga (sample). Kõik vaatlused, mida soovime kirjeldada, moodustavad kogumi (population).\n\n\nKogumist valimi võtmiseks on palju viise, aga enamasti valitakse kogumist vaatlused võimalikult juhuslikult. Sellisel juhul esindab piisavalt suur valim kogumit ja nii saame teha valimi alusel järeldusi kogumi kohta ehk kirjeldada kogumit isegi siis, kui meil ei ole selle kohta täielikku teadmist.\n\n\n\n\n\n\nPea meeles!\n\n\n\nValim peaks võimalikult täpselt peegeldama kogumit. Seda saab saavutada juhuvalik. Juhuslik valik ei tähenda alati mitmekesisust. Kui kogum on ühetaoline, siis peaks olema ühetaoline ka valim ja vastupidi.\n\n\nIsegi juhul, kui meil on andmed kõikide vaatluste kohta, mida soovime kirjeldada, siis võib olla kasulik mõelda ka kogumist kui valimist. Mõnikord saame nii teha üldistusi ka nende aegade kohta, mis jäävad väljapoole tehtud mõõtmisi. Samuti saame nii olla kindlamad, et järeldusi mõjutavad vähem mõõtmisvead.\nValimi kasutamine ongi sageli põhjuseks, miks me ei ole päris kindlad statistilistes mõõtmistes. Kui meil on ainult osa kirjeldatavast kogumist, siis isegi juhul, kui see osa valiti juhuslikult, ei saa me kunagi täiesti kindlad olla, et valim peegeldab kogumit täpselt. See valim võis ka juhuslikult kujuneda nii, et see esindab ainult ühte äärmust kogumist1. Sellisest ebakindlusest tulenevalt nimetatakse statistikas valimi alusel arvutatud väärtusi hinnanguteks (Peatükk 17).1 Kui soovime kirjeldada erakondade toetust, siis võivad meie valimisse ka juhuslikul teel sattuda peaaegu ainult ühe erakonna toetajad, mis ei võimalda teha õigeid järeldusi."
  },
  {
    "objectID": "valikunihe.html",
    "href": "valikunihe.html",
    "title": "10  Valikunihe",
    "section": "",
    "text": "Valikunihe ei mõjuta järeldusi aga mitte alati. Kui nihet põhjustav tunnus ei ole kuidagi seotud tunnusega, mille alusel teeme järeldused, siis ei mõjuta valikunihe ka järeldusi.\nTingimusi valikunihke tekkimiseks on erinevaid:\n\nmittejuhuslik valim ehk valiminihe (sample bias):\n\nvaatluste määramine valimisse,\nvaatluste poolne valik valimisse sattumiseks vabatahtliku valimi korral,\nvalimist välja langemine;\n\nandmete kogumine või analüüsi kordamine niikaua, kuni saadakse soovitud tulemus;\nsobivate vaatluste valimine;\nandmekogumise ajastus või ajaline valik analüüsil.\n\nValikunihe ei teki mitte ainult andmete analüüsimisel. Ainult olemasoleva teadmise alusel järelduste tegemine võib viia nihkega hinnanguni misiganes olukorras. Pea alati meeles ka seda, mida sa ei näe!"
  },
  {
    "objectID": "taasvalik.html",
    "href": "taasvalik.html",
    "title": "11  Taasvalik",
    "section": "",
    "text": "Mõiste\n\n\n\nTaasvalik (resampling) tähendab korduvat valimite võtmist andmetest, mis võivad ise esindada valimit. Selle eesmärk on hinnata andmete alusel tehtud hinnangute kindlust, uurides hinnangute hajuvust erinevate valimite korral.\n\n\nTaasvaliku rakendamiseks ehk andmetes valimite võtmiseks on palju erinevaid viise:\n\nkorduvvalik (bootstrapping),\npermutatsioon (permutation),\nlõikemeetod (jackknife),\nristvalideerimine (cross-validation),\nerinevad Monte Carlo meetodid.\n\nKorduvvaliku käigus võetakse andmetest juhuslikult vaatlusi selliselt, et üks ja sama vaatlus võib korduvvaliku valimis esineda rohkem kui ühe korra. Sealjuures on igas valimis sama palju vaatlusi kui andmetes. Sobivaks valimite arvuks peetakse enamasti vähemalt 1000 valimit. Sarnaselt teistele taasvaliku meetoditele ei sea (mitteparameetriline) korduvvalik eeldusi andmete jaotusele, kuid eeldab, et andmed esindavad piisavalt täpselt kogumit, mille kohta soovitakse teha andmete alusel järeldusi. Taasvalikut kasutatakse enamasti hinnangute valimijaotuste moodustamiseks.\n\n\n\n\n\n\nPea meeles!\n\n\n\nTaasvaliku alusel leitud hinnangud parameetri kohta kehtivad juhul, kui andmetes olev valim peegeldab kogumit piisavalt täpselt ehk on kogumi suhtes piisavalt esinduslik.\n\n\nKui arvutame iga taasvaliku teel saadud valimi alusel mõne parameetri väärtuse, siis need parmeetri väärtused koonduvad enamasti mingi konkreetse väärtuse ümber ja järgivad mingit jaotust. Sellist paljude valimite alusel leitud parameetri jaotust nimetatakse valimijaotuseks1.1 Nt tsentraalse piirteoreemi järgi järgib aritmeetilise keskmise valimijaotus alati normaaljaotust"
  },
  {
    "objectID": "seosed.html",
    "href": "seosed.html",
    "title": "12  Seosed",
    "section": "",
    "text": "suund ehk kas seos on positiivne või negatiivne;\ntugevus ehk mil määral sõltuvad ühe tunnuse väärtused teise tunnuse väärtustest;\nstatistiline olulisus ehk kas seos on juhuslik ja tuvastav ainult valimis või ka kogumile üldistatav.`\n\nLisaks saame enamasti ainult teoreetiliselt kirjeldada ka seoste põhjuslikku vahekorda."
  },
  {
    "objectID": "põhjuslikkus.html",
    "href": "põhjuslikkus.html",
    "title": "13  Põhjuslikkus",
    "section": "",
    "text": "oletada, kust otsida põhjuslikke seoseid või\nkasutada teoreetilisi põhjendusi statistika abil leitud seostele põhjuslikkuse omistamiseks.\n\n\n\n\n\n\n\nPea meeles!\n\n\n\nMitte ükski statistiline arvutus ei näita seose põhjuslikkust. Põhjuslike seoste näitamiseks on vajalikud juhusliku katse tingimustes kogutud andmed.\n\n\nPõhjuslikke seoseid saame näidata ainult eksperimendi tingimustes kogutud andmetega. Teadustöös on tunnustatud viis põhjuslike seoste määratlemiseks juhuslikustatud katse (randomized controlled trial ehk RCT). Selle käigus jagatakse uuritavad objektid juhuslikult katse- ja kontrollrühma nii, et ainus erinevus nende vahel on põhjusliku tunnusena käsitletav uuritav nähtus. Nii saab igasugune erinevus mingis tagajärgses tunnuses nende rühmade vahel tuleneda ainult sellest uuritavast nähtusest1. Kui loodusteadustes on juhuslikud katsed tavalised, siis majandus- ja ühiskonnateadustes on need enamasti kulukad või eetilistel põhjustel sobimatud2.1 Nt kui kahe rühma ainus erinevus seisneb ravimi manustamises, siis igasugune hilisem erinevus nende rühmade vahel on seletatav ravimi mõjuga.2 Siiski on mitmes riigis määratud juhuslikult kodanikupalga saajad, et uurida selle mõju inimeste käitumisele.\n\n\n\n\n\n\nMõiste\n\n\n\nJuhuslikustatud katse käigus määratakse uuritavad objektid juhuslkult katse- ja kontrollrühma. Kuna seetõttu on rühmade ainus erinevus katserühmal rakendatav tegevus, siis on igasugune hilisem erinevus rühmade vahel seletatav ainult selle tegevuse mõjuga.\n\n\nÜks nähtus võib otseselt mõjutada teist (\\(X \\rightarrow Y\\)). Lisaks sellele on veel mitu seletust statistilise protseduuri abil leitud seostele tunnuste vahel:\n\nseos on vastastikkune\n\\[X \\leftrightarrow Y,\\]\nmingi kolmas nähtus mõjutab mõlemat uuritavat nähtust ja viimaste vahel vastastikkune mõju puudub:\n\\[\\displaylines{Z \\rightarrow X \\\\ Z \\rightarrow Y},\\]\nmingi kolmas nähtus vahendab ühe nähtuse mõju teisele ja mõju uuritavate nähtuste vahel on kaudne:\n\\[X \\rightarrow Z \\rightarrow Y,\\]\nkuigi seda esineb harva, siis seos võib olla kokkusattumus3:\n\\[X \\cancel{\\rightarrow} Y.\\]\n\n\n\n3 IDEE: Tõstame viina hinda, et vähendada õpetajate puudust koolides"
  },
  {
    "objectID": "tinglikkus.html",
    "href": "tinglikkus.html",
    "title": "14  Tinglikkus",
    "section": "",
    "text": "Mõeldes tunnuste hajuvusest kui millesti, mis on tingitud ühest või enamast teistest tunnustest, on lihtsam mõtestada seoseid tunnuste vahel. Tinglikkuse ideed rakendades vaatleme, kas ja mil viisil ühe tunnuse väärtused erinevad vastavalt mõne teise tunnuse väärtustele. Seda tegevust nimetatakse sageli ka kihitamiseks (stratification).\n\n\n\n\n\n\nMõiste\n\n\n\nKihitamise käigus uurime, kuidas ühe tunnuse väärtused erinevad teise tunnuse kihtide lõikes.\n\n\nKihitamist saame kasutada mistahes tüüpi tunnuste korral, kuigi kihtide kasutamine eeldab, et üks tunnustest on rühmitatud väikesel arvul väärtustesse.\n\nTinglikkus võib hõlmata rohkem kui kahte nähtust. Sageli ilmnevad seosed tunnuste vahel alles siis, kui kihitame rohkem kui kahte tunnust korraga. See on kasulik näiteks siis, kui esineb interaktsioon.\n\n\n\n\n\n\nMõiste\n\n\n\nInteraktsioon iseloomustab olukorda, kus kahe tunnuse vaheline seos muutub märkimisväärselt, kui võtame arvesse ka mõnda kolmandat tunnust.\n\n\n\n\n\n\n\nWild, C. (2006). The concept of distribution. Statistics Education Research Journal, 5(2), 10–26."
  },
  {
    "objectID": "korrelatsioon.html",
    "href": "korrelatsioon.html",
    "title": "15  Korrelatsioon",
    "section": "",
    "text": "Selle korrelatsiooni suuna ja tugevuse saab arvutada ja esitada korrelatsioonikoefitsiendina. Kuigi selleks on erinevaid arvutuskäike, siis enamasti kasutatakse Pearsoni korrelatsioonikoefitsienti ja seda võib eeldada ka juhul, kui täpsustus arvutuskäigu kohta puudub.\n\n\n\n\n\n\nPea meeles!\n\n\n\nKorrelatsioonikoefitsiendi väärtusel on kolm omadust, mille alusel saab teha järeldusi vastava tunnuste vahelise seose kohta:\n\nselle väärtus on vahemikus -1 ja 1;\nselle absoluutväärtus näitab seose tugevust, kus\n\nväärtus 0 näitab seose puudumist ja\nväärtus -1 või 1 näitab täielikku seost;\n\nselle märk näitab seose suunda, kus\n\npositiivne väärtus tähendab positiivset seost ehk ühe tunnuse väärtuste suurenedes suurenevad ka teise tunnuse väärtused,\nnegatiivne väärtus näitab negatiivset seost.\n\n\n\n\nHinnang korrelatsioonikordaja tugevusele oleneb konkreetsetest nähtustest, mida tunnused esindavad. Nt füüsikaliste nähtuste vahel on korrelatsioonikordajad tavaliselt kõrgemad kui ühiskondlike nähtuste puhul.\nÜldiselt võib korrelatsioonikordaja alusel seose tugevuse hindamisel lähtuda sellest, et korrelatsioonikordaja\n\nalla 0,2 näitab korrelatsiooni puudumist,\n0,2 ja 0,5 vahel näitab mõõdukat korrelatsiooni,\nüle 0,5 näitab tugevat korrelatsiooni.\n\nHarva huvitab meid üksik korrelatsioonikordaja kahe tunnuse vahel. Enamasti soovime hinnata korraga seoseid mitme tunnuse või väga paljude tunnuste vahel. Üks korrelatsioonanalüüsi kasulik rakendus on korrelatsioonimaatriksid ja nende alusel loodud seosekaardid (heatmaps), mis näitlikustavad korraga kõiki ette antud korrelatsioone.\nR keeles on korrelatsioonide leidmiseks funktsioon cor(), mis vaikimisi arvutab Pearsoni korrelatsioonikordaja.\n\n\n# Laadime laienduse tidyverse\nlibrary('tidyverse')\n# Sisestame andmed\nriigid <- read.csv('andmed/countries.csv')\n# Kuvame andmetabeli ülevaate\nstr(riigid)\n\n'data.frame':   227 obs. of  20 variables:\n $ Country    : chr  \"Afghanistan \" \"Albania \" \"Algeria \" \"American Samoa \" ...\n $ Region     : chr  \"ASIA (EX. NEAR EAST)\" \"EASTERN EUROPE\" \"NORTHERN AFRICA\" \"OCEANIA\" ...\n $ Population : int  31056997 3581655 32930091 57794 71201 12127071 13477 69108 39921833 2976372 ...\n $ Area       : int  647500 28748 2381740 199 468 1246700 102 443 2766890 29800 ...\n $ Pop        : num  48 124.6 13.8 290.4 152.1 ...\n $ Coastline  : num  0 1.26 0.04 58.29 0 ...\n $ Migration  : num  23.06 -4.93 -0.39 -20.71 6.6 ...\n $ Infant     : num  163.07 21.52 31 9.27 4.05 ...\n $ GDP        : int  700 4500 6000 8000 19000 1900 8600 11000 11200 3500 ...\n $ Literacy   : num  36 86.5 70 97 100 42 95 89 97.1 98.6 ...\n $ Phones     : num  3.2 71.2 78.1 259.5 497.2 ...\n $ Arable     : num  12.13 21.09 3.22 10 2.22 ...\n $ Crops      : num  0.22 4.42 0.25 15 0 0.24 0 4.55 0.48 2.3 ...\n $ Other      : num  87.7 74.5 96.5 75 97.8 ...\n $ Climate    : num  1 3 1 2 3 NA 2 2 3 4 ...\n $ Birthrate  : num  46.6 15.11 17.14 22.46 8.71 ...\n $ Deathrate  : num  20.34 5.22 4.61 3.27 6.25 ...\n $ Agriculture: num  0.38 0.232 0.101 NA NA 0.096 0.04 0.038 0.095 0.239 ...\n $ Industry   : num  0.24 0.188 0.6 NA NA 0.658 0.18 0.22 0.358 0.343 ...\n $ Service    : num  0.38 0.579 0.298 NA NA 0.246 0.78 0.743 0.547 0.418 ...\n\n# Jätame ainult valitud tunnused\nriigid <- riigid[, 3:17]\n# Arvutame korrelatsioonid\nkorrelatsioonid <- cor(riigid, use = 'pairwise.complete.obs')\n\n\n# Määrame käsu vastuse suurima laiuse\noptions(width = 1000)\n# Kuvame arvutatud korrelatsioonid ümardatuna kahe komakohani\nround(korrelatsioonid, 2)\n\n           Population  Area   Pop Coastline Migration Infant   GDP Literacy Phones Arable Crops Other Climate Birthrate Deathrate\nPopulation       1.00  0.47 -0.03     -0.07      0.00   0.02 -0.04    -0.04  -0.03   0.19 -0.06 -0.12   -0.03     -0.05     -0.03\nArea             0.47  1.00 -0.07     -0.10      0.05  -0.01  0.07     0.04   0.05  -0.08 -0.14  0.14   -0.12     -0.07      0.04\nPop             -0.03 -0.07  1.00      0.24      0.18  -0.14  0.20     0.10   0.28  -0.08 -0.03  0.08    0.01     -0.16     -0.07\nCoastline       -0.07 -0.10  0.24      1.00     -0.13  -0.14  0.05     0.12   0.15  -0.12  0.34 -0.08   -0.03     -0.08     -0.16\nMigration        0.00  0.05  0.18     -0.13      1.00  -0.03  0.38    -0.01   0.24  -0.06 -0.35  0.23   -0.02     -0.07      0.03\nInfant           0.02 -0.01 -0.14     -0.14     -0.03   1.00 -0.60    -0.77  -0.67  -0.11 -0.06  0.12   -0.37      0.85      0.66\nGDP             -0.04  0.07  0.20      0.05      0.38  -0.60  1.00     0.51   0.83   0.02 -0.22  0.10    0.34     -0.65     -0.20\nLiteracy        -0.04  0.04  0.10      0.12     -0.01  -0.77  0.51     1.00   0.60   0.11  0.04 -0.11    0.39     -0.79     -0.39\nPhones          -0.03  0.05  0.28      0.15      0.24  -0.67  0.83     0.60   1.00   0.06 -0.15  0.03    0.40     -0.72     -0.26\nArable           0.19 -0.08 -0.08     -0.12     -0.06  -0.11  0.02     0.11   0.06   1.00  0.09 -0.86    0.38     -0.19      0.05\nCrops           -0.06 -0.14 -0.03      0.34     -0.35  -0.06 -0.22     0.04  -0.15   0.09  1.00 -0.59    0.00      0.12     -0.20\nOther           -0.12  0.14  0.08     -0.08      0.23   0.12  0.10    -0.11   0.03  -0.86 -0.59  1.00   -0.31      0.09      0.06\nClimate         -0.03 -0.12  0.01     -0.03     -0.02  -0.37  0.34     0.39   0.40   0.38  0.00 -0.31    1.00     -0.46      0.01\nBirthrate       -0.05 -0.07 -0.16     -0.08     -0.07   0.85 -0.65    -0.79  -0.72  -0.19  0.12  0.09   -0.46      1.00      0.40\nDeathrate       -0.03  0.04 -0.07     -0.16      0.03   0.66 -0.20    -0.39  -0.26   0.05 -0.20  0.06    0.01      0.40      1.00\n\n\nNäeme, et nt kirjaoskuse ja sündimuse vahel on tugev negatiivne korrelatsioon ning rahvaarv korreleerub tugevalt ainult riigi pindalaga.\nKorrelatsioonimaatriks ei pea olema sümmeetriline tunnuste suhtes, vaid ridades ja veergudes võivad olla ka erinevad tunnused.\n\nheatmap(korrelatsioonid)\n\n\n\n\nKorrelatsioonimaatriksi kuvamiseks joonisena saame kasutada funktsiooni heatmap(). Vaikimisi järjestatkse tunnused selliselt, et sarnaste korrelatsioonidega tunnused oleksid lähestikku.\n\nheatmap(korrelatsioonid)\n\n\n\n\nRohkem valikuid korrelatsioonimaartikis joonistamisel pakub funktsioon heatmap.2() laiendusest gplots. Lisaks legendile pakub see ka väga palju teisi võimalusi korrelatsioonide kuvamiseks.\n\nlibrary('gplots')\nheatmap.2(korrelatsioonid)\n\n\n\n\nInteraktiivse seosekaardi tekitamiseks saame kasutada funktsiooni heatmaply() samanimelisest laiendusest.\n\nlibrary('heatmaply')\nheatmaply(korrelatsioonid)"
  },
  {
    "objectID": "seosereeglid.html",
    "href": "seosereeglid.html",
    "title": "16  Seosereeglid",
    "section": "",
    "text": "Seosereegel (association rule) näitab, kui sageli esinevad nähtused üheskoos ja seosereeglite analüüsi eesmärk on tavaliselt selgitada välja selliste nähtuste kogumid. Seosereeglite analüüsi kasutatakse sageli asjade koos esinemise uurimiseks tehingutes nt toodete või teenuste ostmisel.\nSageli nimetataksegi seosereeglite analüüsi hoopis ostukorvi analüüsiks (market-basket analysis, Saltz & Stanton (2017)), sest selle abil saab vastata küsimustele ostjate ostueelistuste kohta.\nSeosereeglid põhinevad lihtsalt asjade esinemissagedustel. Seosereeglite leidmiseks kasutatakse Apriori algoritmi. See määrab kõikvõimalikud andmetes esinevad asjade kogumid ja tuvastab need, mis esinevad teatud tugevuse ja kindlusega. Lisaks neile kahele mõõdikule saab seosereegleid hinnata ka ootuspärasuse alusel.\nEnamasti ei võeta järelduste tegemisel arvesse selliseid seosereegleid, mis on liiga ilmselged või millele ei ole seletust ja mis võivad olla seega juhuslikud."
  },
  {
    "objectID": "seosereeglid.html#seosereeglite-leidmine",
    "href": "seosereeglid.html#seosereeglite-leidmine",
    "title": "16  Seosereeglid",
    "section": "16.1 Seosereeglite leidmine",
    "text": "16.1 Seosereeglite leidmine\nSeosereeglite analüüsimiseks R keeles peame paigaldama ja laadima laienduse arules ja reeglite kuvamiseks joonistena laienduse arulesViz.\n\n# Laadime laiendused\nlibrary('tidyverse')\nlibrary('arules') # Seosereeglite arvutamiseks\nlibrary('arulesViz') # Seosereeglite joonistamiseks\n\nSeosereeglite kasutamisel R keeles on üks võimalus sisestada andmed tekstifailina, milles igal real on ühes tehindus olevad asjad. Järgnevalt laadimegi sellisel kujul oleva toidupoe ostukorvi andmestiku Groceries. Selleks kasutame funktsiooni read.transactions() ja lisame täpsustuse format = 'basket' määramaks, et iga rida esindab ühte tehingut.\n\n\ntehingud <- read.transactions('andmed/groceries.txt', format = 'basket', sep = ',')\nsummary(tehingud)\n\ntransactions as itemMatrix in sparse format with\n 9835 rows (elements/itemsets/transactions) and\n 169 columns (items) and a density of 0.02609146 \n\nmost frequent items:\n      whole milk other vegetables       rolls/buns             soda \n            2513             1903             1809             1715 \n          yogurt          (Other) \n            1372            34055 \n\nelement (itemset/transaction) length distribution:\nsizes\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n2159 1643 1299 1005  855  645  545  438  350  246  182  117   78   77   55   46 \n  17   18   19   20   21   22   23   24   26   27   28   29   32 \n  29   14   14    9   11    4    6    1    1    1    1    3    1 \n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   2.000   3.000   4.409   6.000  32.000 \n\nincludes extended item information - examples:\n            labels\n1 abrasive cleaner\n2 artif. sweetener\n3   baby cosmetics\n\n\nFunktsioon summary() kuvab muuhulgas tehingute ja asjade arvu, sagedasemate asjad nimetused ja sagedused ning tehingute suurused. Konkreetsete tehingute nägemiseks saame kasutada funktsiooni inspect().\n\ninspect(tehingud[1:5])\n\n    items                      \n[1] {citrus fruit,             \n     margarine,                \n     ready soups,              \n     semi-finished bread}      \n[2] {coffee,                   \n     tropical fruit,           \n     yogurt}                   \n[3] {whole milk}               \n[4] {cream cheese,             \n     meat spreads,             \n     pip fruit,                \n     yogurt}                   \n[5] {condensed milk,           \n     long life bakery product, \n     other vegetables,         \n     whole milk}               \n\n\nLisaks saame kuvada nt teatud toega tehingud. Alljärgnevalt leiame asjad, mis esinevad vähemalt 5% tehingutes.\n\neclat(tehingud, support = 0.05) %>% sort %>% inspect\n\nEclat\n\nparameter specification:\n tidLists support minlen maxlen            target  ext\n    FALSE    0.05      1     10 frequent itemsets TRUE\n\nalgorithmic control:\n sparse sort verbose\n      7   -2    TRUE\n\nAbsolute minimum support count: 491 \n\ncreate itemset ... \nset transactions ...[169 item(s), 9835 transaction(s)] done [0.00s].\nsorting and recoding items ... [28 item(s)] done [0.00s].\ncreating sparse bit matrix ... [28 row(s), 9835 column(s)] done [0.00s].\nwriting  ... [31 set(s)] done [0.00s].\nCreating S4 object  ... done [0.00s].\n     items                          support    count\n[1]  {whole milk}                   0.25551601 2513 \n[2]  {other vegetables}             0.19349263 1903 \n[3]  {rolls/buns}                   0.18393493 1809 \n[4]  {soda}                         0.17437722 1715 \n[5]  {yogurt}                       0.13950178 1372 \n[6]  {bottled water}                0.11052364 1087 \n[7]  {root vegetables}              0.10899847 1072 \n[8]  {tropical fruit}               0.10493137 1032 \n[9]  {shopping bags}                0.09852567  969 \n[10] {sausage}                      0.09395018  924 \n[11] {pastry}                       0.08896797  875 \n[12] {citrus fruit}                 0.08276563  814 \n[13] {bottled beer}                 0.08052872  792 \n[14] {newspapers}                   0.07981698  785 \n[15] {canned beer}                  0.07768175  764 \n[16] {pip fruit}                    0.07564820  744 \n[17] {other vegetables, whole milk} 0.07483477  736 \n[18] {fruit/vegetable juice}        0.07229283  711 \n[19] {whipped/sour cream}           0.07168277  705 \n[20] {brown bread}                  0.06487036  638 \n[21] {domestic eggs}                0.06344687  624 \n[22] {frankfurter}                  0.05897306  580 \n[23] {margarine}                    0.05856634  576 \n[24] {coffee}                       0.05805796  571 \n[25] {pork}                         0.05765125  567 \n[26] {rolls/buns, whole milk}       0.05663447  557 \n[27] {whole milk, yogurt}           0.05602440  551 \n[28] {butter}                       0.05541434  545 \n[29] {curd}                         0.05327911  524 \n[30] {beef}                         0.05246568  516 \n[31] {napkins}                      0.05236401  515 \n\n\nNäeme, et enam kui veerandis tehingutest on piim ja veidi alla viiendikus köögiviljad.\nSeosereeglid saame leida Apriori algoritmi kasutades funktsiooniga apriori(). Sealjuures peaksime määrama teatud tingimused leitavatele reeglitele:\n\nsupport ehk tugi,\nconfidece ehk kindlus,\nminlen ehk vähima asjad arvu tehingus,\nmaxlen ehk suurima asjade arvu ühes tehingus.\n\nAlljärgnevalt leiame reeglid, mis iseloomustavad vähmalt 1% kõikidest tehingutest (tugi) ja kehtivad 20% juhtudest (kindlus).\n\n# Määrame valikud\nvalikud <- list(support = 0.01, confidence = 0.2)\n# Rakendame Apriori algoritmi\nreeglid <- apriori(tehingud, parameter = valikud, \n                   control = list(verbose = FALSE)) %>% # Peidame protseduuri kirjelduse\n  sort(by = 'confidence') # Järjestame reeglid alates kõige kõrgema kindlusega reeglist\n# Kuvame ülevaate reeglitest\nsummary(reeglid)\n\nset of 232 rules\n\nrule length distribution (lhs + rhs):sizes\n  1   2   3 \n  1 151  80 \n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   2.000   2.000   2.341   3.000   3.000 \n\nsummary of quality measures:\n    support          confidence        coverage            lift       \n Min.   :0.01007   Min.   :0.2006   Min.   :0.01729   Min.   :0.8991  \n 1st Qu.:0.01200   1st Qu.:0.2470   1st Qu.:0.03437   1st Qu.:1.4432  \n Median :0.01490   Median :0.3170   Median :0.05241   Median :1.7277  \n Mean   :0.02005   Mean   :0.3321   Mean   :0.06708   Mean   :1.7890  \n 3rd Qu.:0.02227   3rd Qu.:0.4033   3rd Qu.:0.07565   3rd Qu.:2.0762  \n Max.   :0.25552   Max.   :0.5862   Max.   :1.00000   Max.   :3.2950  \n     count       \n Min.   :  99.0  \n 1st Qu.: 118.0  \n Median : 146.5  \n Mean   : 197.2  \n 3rd Qu.: 219.0  \n Max.   :2513.0  \n\nmining info:\n     data ntransactions support confidence\n tehingud          9835    0.01        0.2\n                                                                           call\n apriori(data = tehingud, parameter = valikud, control = list(verbose = FALSE))\n\n\nNäeme, et leiti 232 reeglit keskmise toega 0.0200507 ja keskmise kindlusega 0.3321035.\n\n# Kuvame 20 esimest reeglit\ninspect(reeglid[1:20])\n\n     lhs                         rhs                   support confidence   coverage     lift count\n[1]  {citrus fruit,                                                                                \n      root vegetables}        => {other vegetables} 0.01037112  0.5862069 0.01769192 3.029608   102\n[2]  {root vegetables,                                                                             \n      tropical fruit}         => {other vegetables} 0.01230300  0.5845411 0.02104728 3.020999   121\n[3]  {curd,                                                                                        \n      yogurt}                 => {whole milk}       0.01006609  0.5823529 0.01728521 2.279125    99\n[4]  {butter,                                                                                      \n      other vegetables}       => {whole milk}       0.01148958  0.5736041 0.02003050 2.244885   113\n[5]  {root vegetables,                                                                             \n      tropical fruit}         => {whole milk}       0.01199797  0.5700483 0.02104728 2.230969   118\n[6]  {root vegetables,                                                                             \n      yogurt}                 => {whole milk}       0.01453991  0.5629921 0.02582613 2.203354   143\n[7]  {domestic eggs,                                                                               \n      other vegetables}       => {whole milk}       0.01230300  0.5525114 0.02226741 2.162336   121\n[8]  {whipped/sour cream,                                                                          \n      yogurt}                 => {whole milk}       0.01087951  0.5245098 0.02074225 2.052747   107\n[9]  {rolls/buns,                                                                                  \n      root vegetables}        => {whole milk}       0.01270971  0.5230126 0.02430097 2.046888   125\n[10] {other vegetables,                                                                            \n      pip fruit}              => {whole milk}       0.01352313  0.5175097 0.02613116 2.025351   133\n[11] {tropical fruit,                                                                              \n      yogurt}                 => {whole milk}       0.01514997  0.5173611 0.02928317 2.024770   149\n[12] {other vegetables,                                                                            \n      yogurt}                 => {whole milk}       0.02226741  0.5128806 0.04341637 2.007235   219\n[13] {other vegetables,                                                                            \n      whipped/sour cream}     => {whole milk}       0.01464159  0.5070423 0.02887646 1.984385   144\n[14] {rolls/buns,                                                                                  \n      root vegetables}        => {other vegetables} 0.01220132  0.5020921 0.02430097 2.594890   120\n[15] {root vegetables,                                                                             \n      yogurt}                 => {other vegetables} 0.01291307  0.5000000 0.02582613 2.584078   127\n[16] {fruit/vegetable juice,                                                                       \n      other vegetables}       => {whole milk}       0.01047280  0.4975845 0.02104728 1.947371   103\n[17] {butter}                 => {whole milk}       0.02755465  0.4972477 0.05541434 1.946053   271\n[18] {curd}                   => {whole milk}       0.02613116  0.4904580 0.05327911 1.919481   257\n[19] {whipped/sour cream,                                                                          \n      yogurt}                 => {other vegetables} 0.01016777  0.4901961 0.02074225 2.533410   100\n[20] {other vegetables,                                                                            \n      root vegetables}        => {whole milk}       0.02318251  0.4892704 0.04738180 1.914833   228\n\n\nKõige sagedasem on osta koos teiste toodetega köögivilju ja piima. Esimene reegel näitab, et kui ostetakse tsitruselisi ja juurvilju, siis umbes 58,62% juhtudest ostetakse ka teisi köögivilju. Selliseid tehinguid oli 102 ehk 1,03% kõikidest tehingutest.\n\n\n\n\n\n\nPea meeles!\n\n\n\nSeosereeglite korral on olulised seose pooled. Seos A => B näitab, et kui ostetakse A, siis ostetakse ka B, mitte aga vastupidi. Nt kindlus näitab tõenäosust, et tehingus on B, kui selles on A, aga see sama kindlus ei kehti vastupidise seose kohta.\n\n\nFunktsioon plot() joonistab toe ja kindluse vahelised seosed.\n\nplot(reeglid)\n\nTo reduce overplotting, jitter is added! Use jitter = 0 to prevent jitter.\n\n\n\n\n\nLisades argumendi engine = 'htmlwidget' saame interaktiivse joonise, millel on võimalik võimalik tuvastada konkreetseid reegleid, mida punktid esindavad.\n\nplot(reeglid, engine = 'htmlwidget')\n\nTo reduce overplotting, jitter is added! Use jitter = 0 to prevent jitter.\n\n\n\n\n\n\n\nKõige intuitiivsem viis reeglite kuvamiseks on võrgustikjoonis, mis näitab korraga seoseid mitme reegli vahel.\n\nplot(reeglid, method = 'graph', limit = 20)\n\n\n\n\nSamuti saame kuvada maatriksi, milles veergudes on A ja ridades B ning nende ristumiskohtades on reeglid.\n\nplot(reeglid, method = 'grouped', limit = 20)\n\n\n\n\nLisaks saame kuvada reeglid nooltena, mille joon läbib kõiki asju A ja noole ots näitab asja B.\n\nplot(reeglid, method = 'paracoord', limit = 10)"
  },
  {
    "objectID": "seosereeglid.html#konkreetsed-asjad-reeglites",
    "href": "seosereeglid.html#konkreetsed-asjad-reeglites",
    "title": "16  Seosereeglid",
    "section": "16.2 Konkreetsed asjad reeglites",
    "text": "16.2 Konkreetsed asjad reeglites\nEelnevalt leidsime kõikvõimalikud seosereeglid ja uurisime neid, millel oli kõige kõrgem kindlus. Saame aga leida seosereeglid ka ainult meile huvipakkuvate asjade kohta.\nNt kui soovime teada, mis toodetega kaasneb jogurt (ehk jogurt on B), siis lisame funktsioonile apriori() argumendi appearance = list(default = 'lhs', rhs = 'yogurt').\n\nvalikud <- list(support = 0.01, confidence = 0.1)\nreeglid <- apriori(tehingud, parameter = valikud, \n                   control = list(verbose = FALSE), \n                   appearance = list(default = 'lhs', rhs = 'yogurt')) %>% \n  sort(by = 'confidence')\nplot(reeglid, method = 'graph', limit = 20)\n\n\n\n\nSaame otsida seosereegleid ka teistpidi. Nt kui ostetakse pudelivett, siis mida veel ostetakse (pudelivesi on A)?\n\nreeglid <- apriori(tehingud, parameter = valikud, \n                   control = list(verbose = FALSE), \n                   appearance = list(default = 'rhs', lhs = 'bottled water')) %>% \n  sort(by = 'confidence')\nplot(reeglid, method = 'graph', limit = 20)\n\n\n\n\nKui seosereeglite analüüsi rakendada ostjate ostueelistuste määramiseks ja on olemas teave ka ostjate tausta kohta, siis saab hinnata ka seda, millised ostjad milliseid tooteid eelistavad.\n\n\n\n\n\nSaltz, J. S., & Stanton, J. M. (2017). An introduction to data science. SAGE Publications, Inc."
  },
  {
    "objectID": "usaldusvahemikud.html",
    "href": "usaldusvahemikud.html",
    "title": "17  Usaldusvahemikud",
    "section": "",
    "text": "Tihti peame üldistusi tegema valimi alusel (Peatükk 9). Selline olukord tekib näiteks juhul, kui kasutame küsitluse teel kogutud andmeid ja soovime nende alusel teha järeldusi ka isikute kohta, kes küsitluses ei osalenud. Sellisel juhul ei iseloomusta aga valimi alusel arvutatud mõõdik otseselt kogumit, vaid on ainult hinnang. Sellist konkreetset hinnangut nimetatakse punkthinnanguks. Ei ole aga tõenäoline, et mingi konkreetne valimi alusel arvutatud mõõdiku väärtus on täpselt sama, mis vastavas kogumis. Seetõttu arvutatakse mõõdiku väärtusele ka vahemikud, milles tegelik, kogumiku väärtus teatud tõenäosusega asetseb. Selliselt arvutatud hinnangut nimetatakse vahemikhinnanguks, mis enamasti tähendab usaldusvahemikku.\nUsaldusvahemiku arvutamiseks on kaks viisi:\nSiin vaatame eelkõige esimest, taasvalikut hõlmavat lähenemist, aga lõpus uurime lühidalt ka teoreetilise jaotuse abil usaldusvahemiku arvutamist."
  },
  {
    "objectID": "usaldusvahemikud.html#ühe-tunnuse-usaldusvahemik",
    "href": "usaldusvahemikud.html#ühe-tunnuse-usaldusvahemik",
    "title": "17  Usaldusvahemikud",
    "section": "17.1 Ühe tunnuse usaldusvahemik",
    "text": "17.1 Ühe tunnuse usaldusvahemik\nAlustame vajalike laienduste töölauale laadimisega.\n\nlibrary('magrittr')\nlibrary('tidyverse')\nlibrary('ggplot2')\n\nJärgnevas näites kasutame andmestikku IT valdkonna töötajate töötasude kohta 2020. aastal peamiselt Saksamaal.\n\ntasu <- read.csv('andmed/itsalary.csv')\nstr(tasu)\n\n'data.frame':   1177 obs. of  3 variables:\n $ gender    : chr  \"Male\" \"Male\" \"Male\" \"Male\" ...\n $ salary    : num  80000 80000 54000 62000 76000 57000 65000 56000 95000 52500 ...\n $ experience: num  5 7 4 17 5 6 5 8 15 2 ...\n\n\n\nVeerus salary on aastane brutotöötasu eurodes ilma lisatasudeta. Teisendame selle meile tuttavaks kuutöötasuks ja uurime, kuidas tasud jaotuvad.\n\ntasu %<>% mutate(salary = salary / 12)\nhist(tasu$salary)\n\n\n\nmean(tasu$salary)\n\n[1] 5656.305\n\n\nNäeme, et keskmine kuutöötasu on 5656 eurot. Kui tõenäoline on, et ka tegelikult oli Saksamaal 2020. aastal IT valdkonna töötajate kuutöötasu täpselt 5656 eurot? Mitte eriti. Usutavama hinnangu saaksime anda siis, kui leiame hoopis vahemiku, milles see hinnang mingi kindlusega on. Seega peaksime leidma usaldusvahemiku.\nUsaldusvahemiku leidmiseks kõige intuitiivsem viis on kasutada Korduvvalikut (bootstrapping). Selleks võtame esmalt andmetest mingil hulgal juhuslikult valimeid nii, et iga leitud valim on sama suur kui algne andmestik, aga osad väärtused (isikud) valimites korduvad ja osad on puudu (Peatükk 11). Valimi võtmiseks saame kasutada funktsiooni sample() ja selle tegevuse kordamiseks funktsiooni replicate().\n\nvalimid <- replicate(1000, # Korrata järgnevat käsku 1000 korda\n                     sample(tasu$salary, # Võtta valim töötasude seast\n                            length(tasu$salary), # Valimis on sama palju väärtusi kui andmestik\n                            replace = T), # Valimis võivad vaatlused korduda\n                     simplify = FALSE) # Väljasta tulemus loeteluna\nstr(head(valimid))\n\nList of 6\n $ : num [1:1177] 5000 7750 4500 5833 4583 ...\n $ : num [1:1177] 6250 5000 3125 4400 4667 ...\n $ : num [1:1177] 3125 7708 5833 5917 4833 ...\n $ : num [1:1177] 5667 6000 4417 5833 7833 ...\n $ : num [1:1177] 6500 5667 4000 6833 4500 ...\n $ : num [1:1177] 7083 4833 6417 3833 6333 ...\n\n\nÜleval on kuvatud esimesed kuus valimit tuhandest. Näeme, et igas valimis on 1177 juhuslikku väärtust andmetes olevates töötasudest.\nJärgmiseks arvutame iga valimi keskmise väärtuse. Selleks rakendame funktsiooni mean() igal valimil eraldi. Loetelu igale osisele saame funktsiooni rakendada funktsiooniga sapply() alljärgnevalt. Vaatame valimite keskmiste jaotust histogrammilt.\n\nkeskmised <- sapply(valimid, mean)\nhist(keskmised)\n\n\n\n\nHistogrammilt näeme, et suur osa valimite keskmistest jäävad väärtuste 5600 ja 5700 vahele.\nKuna usaldusvahemik oleneb sellest, kui kindlad me tahame olla, et tegelik väärtus seal asub, siis peame selle kindluse määrama. Enamasti leitakse usaldusvahemik kindlusega 95%. Taasvalikut rakendades tähendab see, et usaldusvahemiku määravad need piirid, juhul jääb 95% kõikidest leitud valimite keskmistest. Seega alumine töötasu piir peab olema selline, millest väiksemaid väärtusi on 2,5% ja ülemisest piirist suuremaid väärtusi 2,5%. Sinna vahele jääb 95% kõikide valimite alusel leitud keskmistest töötasudest. Vastavate kvantiilide leidmiseks saame kasutada funktsiooni quantile().\n\nquantile(keskmised, .025) # Alumine 2.5% piir\n\n    2.5% \n5570.367 \n\nquantile(keskmised, .975) # Ülemine 2.5% piir\n\n   97.5% \n5735.849 \n\n\nNeed kaks töötasu väärtust 5570 ja 5736 ongi 95% usaldusvahemik, mille vahele jääb suure tõenäosusega tegelik töötasu.\nAll oleval joonisel on leitud usaldusvahemik kujutatud töötasu valimijaotuse tihedusfunktsioonil. Joontena esitatud usaldusvahemiku vahele jääb 95% tihendusfunktsiooni kõvera alusest pindalast.\n\nplot(density(keskmised))\nabline(v = quantile(keskmised, .025))\nabline(v = quantile(keskmised, .975))\n\n\n\n\nEelnevate arvutuste üks mõte oli usaldusvahemiku leidmise selgitamine. Tegelikult saab korduvvaliku alusel usaldusvahemikku leida ka lühemalt, kasutades funktsioone boot() ja boot.ci() vastavast laiendusest. Sellisel juhul tuleb kasutatav mõõdik vormistada veidi keerulisemalt, käsitsi loodava funktsioonina.\n\nlibrary('boot')\n# Leiame 1000 korduvvaliku teel saadud valimi keskmised \nkeskmisedBoot <- boot(tasu$salary, \n                      function(x,i) mean(x[i]), # Funktsioon keskmiste arvutamiseks\n                      1000) # Kordame valikut 1000 korda\n# Leiame, mis vahemikku jääb 95% nendest keskmistest\nboot.ci(keskmisedBoot, conf = 0.95, type = 'norm')\n\nBOOTSTRAP CONFIDENCE INTERVAL CALCULATIONS\nBased on 1000 bootstrap replicates\n\nCALL : \nboot.ci(boot.out = keskmisedBoot, conf = 0.95, type = \"norm\")\n\nIntervals : \nLevel      Normal        \n95%   (5572, 5742 )  \nCalculations and Intervals on Original Scale\n\n\nNäeme, et leitud töötasu usaldusvahemik on sarnane varem käsitsi leitud usaldusvahemikule 5570 ja 5736.\n\n\n\n\n\n\nPea meeles!\n\n\n\nKorduvvaliku käigus võetakse valimid juhuslikult. Seetõttu saame korduvvalikut korrates peaaegu alati veidi erineva valimi ja seega ka erineva usaldusvahemiku. See erinevus on aga piisavalt väike, et hinnngut mitte märkimisväärselt muuta."
  },
  {
    "objectID": "usaldusvahemikud.html#kahe-rühma-võrdlemine",
    "href": "usaldusvahemikud.html#kahe-rühma-võrdlemine",
    "title": "17  Usaldusvahemikud",
    "section": "17.2 Kahe rühma võrdlemine",
    "text": "17.2 Kahe rühma võrdlemine\nVõrdleme naiste ja meeste töötasude erinevust.\n\nhist(tasu$salary, freq = FALSE)\nlines(density(tasu$salary[tasu$gender == \"Female\"]), col = 'red')\nlines(density(tasu$salary[tasu$gender == \"Male\"]), col = 'blue')\n\n\n\nmean(tasu$salary[tasu$gender == \"Female\"])\n\n[1] 4902.418\n\nmean(tasu$salary[tasu$gender == \"Male\"])\n\n[1] 5799.612\n\n\nNäeme, et naiste keskmine töötasu on tunduvalt madalam kui meestel, kuigi töötasude jaotused suurel määral kattuvad. Enne järelduste tegemist tuleb aga meeles pidada, et andmestikus on ainult valim ja tegelikult, kogumis ei pruugi üldse erinevust olla. Usutavama järeldus saame teha usaldusvahemiku alusel. Leiame järgnevalt usaldusvahemiku naiste ja meeste töötasude kohta eraldi.\n\n# Naiste töötasu usaldusvahemik\nkeskmisedN <- boot(tasu$salary[tasu$gender == \"Female\"], \n                   function(x,i) mean(x[i]), \n                   1000) \nboot.ci(keskmisedN, conf = 0.95, type = 'norm')\n\nBOOTSTRAP CONFIDENCE INTERVAL CALCULATIONS\nBased on 1000 bootstrap replicates\n\nCALL : \nboot.ci(boot.out = keskmisedN, conf = 0.95, type = \"norm\")\n\nIntervals : \nLevel      Normal        \n95%   (4730, 5068 )  \nCalculations and Intervals on Original Scale\n\n# Meeste töötasu usaldusvahemik\nkeskmisedM <- boot(tasu$salary[tasu$gender == \"Male\"], \n                   function(x,i) mean(x[i]), \n                   1000) \nboot.ci(keskmisedM, conf = 0.95, type = 'norm')\n\nBOOTSTRAP CONFIDENCE INTERVAL CALCULATIONS\nBased on 1000 bootstrap replicates\n\nCALL : \nboot.ci(boot.out = keskmisedM, conf = 0.95, type = \"norm\")\n\nIntervals : \nLevel      Normal        \n95%   (5711, 5887 )  \nCalculations and Intervals on Original Scale\n\n\nNäeme, et 95% valimite korral on naiste tegelik keskmine töötasu 4730 ja 5068 euro vahel, meestel aga 5711 ja 5887 euro vahel.\nSaame selle erinevuse joonistada ka valimijaotuste tihendusfunktsioonina koos varem leitud üldise keskmise töötasu valimijaotusega.\n\nhist(keskmised, freq = FALSE, xlim = c(4500,6500))\nlines(density(keskmisedN$t), col = 'red') # Naiste tõõtasu punasega\nlines(density(keskmisedM$t), col = 'blue') # Meeste tõõtasu sinisega\n\n\n\n\nNäeme, et naiste ja meeste tööusaldusude valimijaotused peaaegu ei kattu. Võime järeldada, et naiste töötasu IT valdkonnas 2020. aastal oli madalam mitte ainult meie andmetes, vaid ka tegelikult.\n\n\n\n\n\n\nPea meeles!\n\n\n\nUsaldusvahemikul on palju tõlgendusviise. Õige on öelda, et usaldusvahemik kehtib 95% valimite korral ja tegemist on 95% usaldusvahemikuga. Korduvvaliku alusel leitud usaldusvahemiku korral ei ole aga ka täiesti vale öelda, et need kehtivad 95% tõenäosusega või et teglik väärtus jääb usaldusvahemikku 95% tõenäosusega."
  },
  {
    "objectID": "usaldusvahemikud.html#seose-usaldusvahemik",
    "href": "usaldusvahemikud.html#seose-usaldusvahemik",
    "title": "17  Usaldusvahemikud",
    "section": "17.3 Seose usaldusvahemik",
    "text": "17.3 Seose usaldusvahemik\nKorduvvalik ei võimalda usaldusvahemikku leida mitte ainult keskväärtuse, vaid mistahes parameetri jaoks. Alloleval joonisel paistab, et töökogemuse (experience) kasvades suureneb ka keskmiselt töötasu (salary). Meid võib huvitada, kas see seos kehtib ainult meie valimis või ka tegelikkuses.\n\nggplot(tasu) + \n  aes(x = experience, y = salary) + \n  geom_point() + \n  geom_smooth() + \n  theme_minimal()\n\n`geom_smooth()` using method = 'gam' and formula 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\nSeost kahe tunnuse vahel saame hinnata korrelatsioonikordajaga. Leiame järgneval korrelatsiooni kahe huvipakkuva tunnuse vahel selliselt, et võtame arvesse ainult isikuid, kelle kohta ei ole kummagi tunnuse väärtuste seas puuduvaid. Selleks lisame funktsiooni cor() argumendi use = 'pairwise.complete.obs'.\n\ncor(tasu$salary, tasu$experience, use = 'pairwise.complete.obs')\n\n[1] 0.4266482\n\n\nNäeme, et meie valimis on tunnuste vahel keskmise või mõõduka tugevusega positiive seos.\nArvutame usaldusvahemiku jällegi laienduse boot funktsioone kasutades.\n\nkorrelatsioonid <- boot(tasu, \n                        function(x,i) cor(x[i, 'salary'], x[i, 'experience']), \n                        1000)\nboot.ci(korrelatsioonid, type = 'norm')\n\nBOOTSTRAP CONFIDENCE INTERVAL CALCULATIONS\nBased on 1000 bootstrap replicates\n\nCALL : \nboot.ci(boot.out = korrelatsioonid, type = \"norm\")\n\nIntervals : \nLevel      Normal        \n95%   ( 0.3711,  0.4800 )  \nCalculations and Intervals on Original Scale\n\n\nNagu näha, siis 95% valimite korral jäävad korrelatsioonid vahemikku 0.37 ja 0.48.\nJoonistame ka korrelatsioonide valimijaotuse.\n\nhist(korrelatsioonid$t, xlim = c(0,.5))\n\n\n\n\nOn selge, et 95% usaldusvahemik ei kata nullpunkti. Sellest võime järeldada, et mitte ainult meie valimis, vaid ka üldiselt, kogumis on kogemuse ja töötasu vahel positiivne seos. Usaldusvahemiku alusel võime järeldada, et korrelatsioonikordaja kogemuse ja töötasu vahel on kogumis 95% kindlusega vähemalt 0.37, aga mitte üle 0.48."
  },
  {
    "objectID": "usaldusvahemikud.html#usaldusvahemik-statistika-lähenemises",
    "href": "usaldusvahemikud.html#usaldusvahemik-statistika-lähenemises",
    "title": "17  Usaldusvahemikud",
    "section": "17.4 Usaldusvahemik statistika lähenemises",
    "text": "17.4 Usaldusvahemik statistika lähenemises\nEelnev usaldusvahemiku leidmise viis valimeid simuleerides iseloomustab hästi andmeteadust. Enne arvuteid kujunenud statistika lähenemine usalduvahemike leidmisele põhineb rohkem matekaatika teoorial.\nPaljusid nähtusi iseloomustavad väärtused järgivad jaotuses sageli normaaljaotust, aga ka sellele sarnast t-jaotust. Võime oletada, et ka kogumis on väärtused jaotunud vastavalt t-jaotusele.\n\ntjaotus <- rt(1e4, length(tasu$salary)) * sd(tasu$salary) + mean(tasu$salary)\npar(mfrow = 1:2)\nhist(tasu$salary, main = \"Jaotus valimis\", 20)\nhist(tjaotus, main = \"Eeldatav jaotus kogumis\", 20)\n\n\n\n\nNäeme, et meie küsitletute seas on jaotus veidi paremale kaldu, aga üldiselt siiski sarnane sellele vastavale t-jaotusele. Kui eeldame, et kogumis ongi väärtused jaotunud nii nagu t-jaotuse korral, siis saame usaldusvahemiku leida teoreetiliselt ilma suurel hulgal valimeid tekitamata.\nNimetatud eeldusel saab usaldusvahemiku leida matemaatiliselt kasutades valemit\n\\[\\bar{x} \\pm z \\frac{s}{\\sqrt{n}}, \\]\nkus \\(\\bar{x}\\) on keskmine, \\(z\\) on t-jaotuse täiendkvantiil, \\(s\\) valimi standardviga ja \\(n\\) valimi suurus.\nKirjutame selle valemi R käskudena.\n\nz <- qt(0.975, length(tasu$salary) - 1) # T-jaotuse täiendkvantiil\nviga <- z * (sd(tasu$salary) / sqrt(length(tasu$salary))) # Viga keskmisest\nmean(tasu$salary) - viga # Alumine 2.5% piir\n\n[1] 5573.566\n\nmean(tasu$salary) + viga # Ülemine 2.5% piir\n\n[1] 5739.044\n\n\nNäeme, et töötasu 95% usaldusvahemik on 5574 ja 5739 euro vahel. Sama tulemuse saame ka lihtsamalt, kasutades ära funktsiooni t.test().\n\nt.test(tasu$salary)\n\n\n    One Sample t-test\n\ndata:  tasu$salary\nt = 134.13, df = 1176, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 5573.566 5739.044\nsample estimates:\nmean of x \n 5656.305 \n\n\nNeed matemaatiliselt leitud usaldusvahemik on väga sarnane varem korduvvaliku teel leitud usaldusvahemikule, mis oli 5570 ja 5736."
  },
  {
    "objectID": "linreg.html",
    "href": "linreg.html",
    "title": "18  Lineaarne regressioon",
    "section": "",
    "text": "Korrelatsioonanalüüsis uurisime seost kahe tunnuse vahel, võtmata arvesse põhjuslikku seost nende vahel (Peatükk 12). Lineaarse regressiooni korral mõõdame samuti seost tunnuste vahel, aga selliselt, et üks tunnustest on alati määratud ühest või mitmest tunnusest sõltuvaks. See sõltuvus on sealjuures puhtalt matemaatiline ega tähenda põhjuslikku seost (Peatükk 13).\nRegressioonanalüüs ei ole üks konkreetne statistiline protseduur, vaid see mõiste hõlmab palju mitmesuguseid statistilisi mudeli kujusid ja nende hindamise viise. Sealjuures on loodud ka väga keerukaid matemaatilisi seletusi sellele, kuidas tunnused omavahel seotud on. Käesolevas õpikus kasutatakse regressioonanalüüsiga seotud mõisteid lihtsustatult: - lineaarne regressioon viitab ainult vähimruutude meetodil leitud lineaarsele regressioonile ning - logistilise regressioonina käsitletakse regressioonanalüüsi logit-mudeli alusel, mis üldiselt on samuti lineaarne regressioonimudel.\nRegressioonanalüüs on peamine analüütiline meetod majandusteadustes ja kogu ökonomeetria põhineb erineva matemaatilise kujuga regressioonimudelitel. Regressioonanalüüsi kasutades saab vastata küsimustele, mille korral meid huvitab, kuidas sõltub üks tunnus teisest või teistest.\nJärgnevalt üritame regressioonanalüüsi abil seletada ja prognoosida majade hindasid.\nSoovime määrata majale hinna, mis vastaks võimalikult täpselt selle turuväärtusele. Kuidas seda teha? Mõistlik oleks lähtuda teiste sarnaste majade hindadest. Võiksime otsida sarnase pinna, tubade arvu ja teiste asjakohaste tunnustega maju. Konkreetse maja hinna saaksime määrata umbkaudselt sarnase majade hindade alusel. Täpsema turuväärtuse saaksime aga siis, kui leiaksime matemaatilise seose majade erinevate tunnuste ja hindade vahel.\nVaatame kuidas on majade väärtused seotud nt pinnaga.\nMaja pinna ja hinna vahel paistab olevat positiivne seos: mida suurem maja, seda kõrgem hind. Kõige lihtsam oleks sobivama hinna leidmiseks arvutada lihtsalt kõikide majade keskmine hind. See oleks kõige parem pakkumine juhul, kui meil ei oleks majade kohta mingit muud teavet peale hinna. Aga kui kasutame lihtsalt keskmist, siis kui täpse tulemuse saaksime majade pindasid arvesse võttes?\nNäeme et kui pakume kõikide majade väärtuseks keskmise hinna, siis saaksime antud juhul täpse tulemuse ainult keskmise pinnaga majade korral. Võime iga maja kohta arvutada ja joonisel kujutada ka hinna määramisel keskmist kasutades tehtud vea.\nVäiksemate majade väärtust hindame liiga suureks, samas kui suurte majade väärtust alahindame. Seega võiksime sirgele määrata sellise asukoha ja tõusu, et see väljundtunnuse suhtes võimalikult täpselt punktipilve läbiks. Selline sirge on järgneval joonisel Joonis 18.1.\nKuidas selline sirge leida? Et võimalikult täpselt määrata iga maja hind lähtudes pinnast, tuleks leida selline sirge, mille korral hinna määramisel tehtud viga oleks võimalikult väike.\nKirjeldatud protseduuri võib nimetada vähimruutude meetodiks."
  },
  {
    "objectID": "linreg.html#regressioonimudel",
    "href": "linreg.html#regressioonimudel",
    "title": "18  Lineaarne regressioon",
    "section": "18.1 Regressioonimudel",
    "text": "18.1 Regressioonimudel\nMatemaatiliselt kõige lihtsam viis arvskaalal väljundtunnusega regressioonimudeli parameetreid hinnata ongi vähimruutude meetod.\n\n\n\n\n\n\nMõiste\n\n\n\nLihtne vähimruutude meetod (ordinary least squares) on regressioonmudeli parameetrite leidmise viis. Selle käigus leitakse maatriksalgebra alusel selline mudeli vabaliige ja sisendtunnus(t)e kordaja(d), mille korral regressioonisirge teeks võimalikult väikse vea väljundtunnuse väärtuste seletamisel.\n\n\nEmpiiriliselt ongi regressioonimudelis põhjuslik seos seetõttu, et selle hindamisel on eesmärk võimalikult täpselt seletada just väljundtunnuse väärtusi. Lihtsustatult võib regressioonimudelist mõelda kui mistahes statistilisest mudelist. See kirjeldab lihtsalt seost sisend- ja väljundtunnuste vahel ning võimaldab selle kirjelduse alusel väljundtunnuse väärtusi prognoosida.\n\n\n\n\nflowchart LR\ni[\"Sisendtunnus(ed)\"] --> m(Mudel) --> o[Väljundtunnus]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMõiste\n\n\n\nRegressioonimudel määrab seose ühe või enama sisendtunnuse ja ühe väljundtunnuse vahel selliselt, et viga väljundtunnuse prognoosimisel oleks võimalikult väike. Regressioonimudelit saab kasutada\n\nseoste kirjeldamiseks iga sisendtunnuse ja väljundtunnuse vahel ning\nväljundtunnuse väärtuse prognoosimiseks teatud sisendtunnus(t)e väärtuste alusel.\n\n\n\nR keeles saab vähimruutude meetodit rakendada funktsiooniga lm() (ehk lineaarne mudel). Leiame mudeli, mis selgitab, kuidas maja pind (area) määrab maja hinna (price). Selleks tuleb funktsioonis mudel määratleda valemi kujul price ~ area.\n\nmPind <- lm(price ~ area, majad)\n\nVähimruutude meetodi alusel saab arvutada ka mudeleid, milles sisendtunnus on mõõdetud nimiskaalal. Vaatame nt, kuidas lähedus suurele teele (mainroad) on seotud maja hinnaga.\n\nmTee <- lm(price ~ mainroad, majad)\n\nRegressioonimudelisse saame lisada ka mitu tunnust korraga, nt mõlemad eelnevalt nimetatud sisendtunnused.\n\nmPindTee <- lm(price ~ area + mainroad, majad)\n\nÜks võimalik lähenemine regressioonanalüüsile on lisada mudelisse kõik sisendtunnused, mis teoreetiliselt võiksid seletada väljundtunnuse väärtusi. Järgnevas näites lisame sisendtunnustena kõik andmetabelis olevad tunnused, va väljundtunnus.\n\nmKõik <- lm(price ~ ., majad)"
  },
  {
    "objectID": "linreg.html#regressioonikordajad",
    "href": "linreg.html#regressioonikordajad",
    "title": "18  Lineaarne regressioon",
    "section": "18.2 Regressioonikordajad",
    "text": "18.2 Regressioonikordajad\n\n18.2.1 Arvtunnus\nEelnevalt hinnatud regressioonimudel maja hinnna leidmiseks pinna alusel sisaldab kahte regressioonikordajat.\n\nmPind\n\n\nCall:\nlm(formula = price ~ area, data = majad)\n\nCoefficients:\n(Intercept)         area  \n    2.10211      0.00546  \n\n\nNeist esimene on vabaliige (Intercept) ehk väljundtunnuse väärtus seal, kus sirge ristub sisendtunnuse teljega. See on maja hind juhul, kui maja pinna väärtus on null. Antud juhul näeme, et ilma pinnata maja hind oleks empiiriliselt 2.1 mln USD. Kuna kasutatud andmetes päriselt ilma pinnata majasid ei ole, siis ei ole mõtet vabaliikmele ka tähendust omistada.\n\n\n\n\n\n\nMärkus\n\n\n\nVähimruutude meetodil leitud regresioonimudeli arvtunnuse kordaja näitab, kui mitme ühiku võrra suureneb väljundtunnuse väärtus, kui sisendtunnuse väärtus suureneb ühe ühiku võrra.\n\n\nVabaliikmele järgneb sisendtunnuste kordaja ehk sirge tõus sisendtunnuse suurenemisel ühe ühiku võrra. See näitab, kui mitme mln USD võrra on suurem maja hind, kui pind on suurem ühe ruutmeetri võrra. Näeme, et iga ruutmeeter lisab maja hinnale 0.00546 mln USD ehk 5460 USD. See tõus on kujutatud joonisel Joonis 18.1.\nKui meid huvitab väljundtunnuse muutus sisendtunnuse mitme ühikulise kasvu korral, siis võime kordaja vastava konstandiga korrutada. Nt 1000 ruutmeetrit pinda lisab eelneva mudeli alusel maja hinnale \\(0.005 \\times 1000 = 5\\) mln USD.\n\n\n18.2.2 Nimitunnus\nKui mudelis on nimitunnused, siis on regressioonikordajate tõlgendused veidi erinevad. Üks tunnuse väärtustest on aluseks teis(t)ele, mis muudab regressioonikordajate tõlgendamise veidi keerulisemaks.\n\nmTee\n\n\nCall:\nlm(formula = price ~ mainroad, data = majad)\n\nCoefficients:\n(Intercept)  mainroadyes  \n     3.7923       0.7071  \n\n\nVabaliige näitab sellisel juhul maja hinda juhul, kui maja ei asu tee lähenduses (mainroad == 'no'), sest tunnuse kordaja on mainroadyes ehk mainroad == yes. Ehk tunnuse mainroad väärtus no on võrdlusväärtus. Tunnuse kordaja (mainroadyes) näitab, kui mitme USD võrra on sellest kallim maja, mis asub tee lähenduses. Järgneval joonisel Joonis 18.2 on vabaliige ja tunnuse kordaja esitatud vastavalt pideva ja katkendliku joonega.\n\n\n\n\n\nJoonis 18.2: Nimitunnus regressioonimudelis\n\n\n\n\nNäeme, et suurest teest eemal asuva maja (mainroad == 'no') hind on keskmiselt 3.79 mln USD. Suurel teel asuva maja väärtus on aga sellest 0.71 mln USD võrra kõrgem ehk 4.5 mln USD.\n\n\n\n\n\n\nMärkus\n\n\n\nVähimruutude meetodil leitud regresioonimudeli vabaliige näitab väljundtunnuse väärtust sisendtunnuse võrdlusväärtuse korral. Nimitunnuse muude väärtuste kordajad näitavad, kui mitme ühiku võrra on väljundtunnuse väärtus suurem võrreldes nimitunnuse võrdlusväärtusega.\n\n\n\n\n\n\n\n\nPea meeles!\n\n\n\nTunnuste liik R keele objektis määrab, mil viisil hinnatakse seos tunnuste vahel. Nt kui nimitunnus on sisestatud arvudena, siis väljastab vastav R keele funktsioon regressioonikordaja, hoolimata sellest, et sellel sisulist tähendust ei ole.\n\n\n\n\n18.2.3 Arv- ja nimitunnused\nKui mudelis on mitu tunnust, siis jääb kordajate tõlgendus samaks.\n\nmPindTee\n\n\nCall:\nlm(formula = price ~ area + mainroad, data = majad)\n\nCoefficients:\n(Intercept)         area  mainroadyes  \n   2.023472     0.005383     0.126777  \n\n\nKüll aga näeme, et kordajad on erinevad võrreldes eelnevate ühe sisendtunnusega mudelitega. Põhjus on selles, et sisendtunnused on omavahel seotud ja mõjutavad seetõttu teineteise seost väljundtunnusega (vt Peatükk 14).\n\n\n\n\n\nJooniselt näeme, et iga ruutmeetriga kaasneb 0.005 mln USD võrra kõrgem hind. Suure tee lähendus (katkendlik sirge) lisab hinnale 0.127 mln USD.\nSamuti märkame, et suure tee läheduse kordaja oluliselt on viimases mudelis tunduvalt madalam kui eelnevas ilma pinnata mudelis. See tähendab, et suur osa suure tee lähendusega seletatavast hinna hajuvusest tuleneb hoopis majade pinnast.\n\n\n\n\n\n\nPea meeles!\n\n\n\nSisendtunnuste regressioonikordajad on enamasti teineteisest sõltuvad. Mida suurem on korrelatsioon nende vahel, seda enam muutub ühe sisendtunnuse kordaja, kui lisame mudelisse või eemaldame mudelist teise."
  },
  {
    "objectID": "linreg.html#regressioonikordajate-usaldusvahemik",
    "href": "linreg.html#regressioonikordajate-usaldusvahemik",
    "title": "18  Lineaarne regressioon",
    "section": "18.3 Regressioonikordajate usaldusvahemik",
    "text": "18.3 Regressioonikordajate usaldusvahemik\nEnamasti leiame regressioonikordajad valimi alusel, mistõttu on tegemist (punkt)hinnangutega. Nii saa me olla kindlad, kas kordajad ja vastavad seosed ka üldiselt kehtivad. Regressioonikordajate kehtivust saame hinnata usaldusvahemike alusel (Peatükk 17).\nR keeles saame regressioonimudeli kordajate usaldusvahemikke kuvada funktsiooniga confint(). See funktsioon kuvab teoreetiliselt arvutatud, mitte taasvaliku alusel leitud usaldusvahemikud.\n\nmudel <- lm(price ~ ., majad)\nconfint(mudel, level = .95)\n\n                                      2.5 %       97.5 %\n(Intercept)                     1.093198328  1.734167689\narea                            0.003916509  0.004839538\nbedrooms                       -0.055222319  0.113389133\nbathrooms                       0.189191185  0.451668689\nstories                         0.126458955  0.295782704\nmainroadyes                    -0.027848762  0.319337765\nguestroomyes                    0.064618599  0.388534574\nbasementyes                    -0.009793511  0.231749245\nhotwaterheatingyes             -0.207242650  0.335064880\nairconditioningyes              0.096073548  0.340068066\nparking                        -0.029901271  0.106855222\nprefareayes                     0.150685880  0.407071175\nfurnishingstatussemi-furnished -0.169204560  0.091201562\nfurnishingstatusunfurnished    -0.311617770 -0.013714692\n\n\nKordajate korral tuleb uurida, kas usaldusvahemik katab nulli või mitte.\n\nKui katab, siis me ei saa olla kindlad, et kordaja ei ole 0 ehk seos võib ka puududa.\nKui ei kata, siis võime järeldada, et seos kehtib.\n\nEelnevalt esitatud usaldusvahemikke aitab ehk paremini mõista nende uurimine joonisel.\n\n\n\n\n\nNäeme, et posiivne seos hinnaga on tunnustel stories, prefarea, guestroom, bathroom ja airconditioning. Maja hind on aga madalam, kui tunnus furnishingstatus == unfurnished.\nEnamasti kasutatakse regressioonikordajate üldistatavuse hindamiseks aga statistilist hüpoteeside testimist. Vastavate p-väärtuste kuvamiseks saab kasutada funktsiooni summary().\n\nmudel <- lm(price ~ ., majad)\nsummary(mudel)\n\n\nCall:\nlm(formula = price ~ ., data = majad)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.18707 -0.30604 -0.02051  0.31253  0.99828 \n\nCoefficients:\n                                 Estimate Std. Error t value Pr(>|t|)    \n(Intercept)                     1.4136830  0.1627631   8.686 4.07e-16 ***\narea                            0.0043780  0.0002344  18.679  < 2e-16 ***\nbedrooms                        0.0290834  0.0428160   0.679 0.497567    \nbathrooms                       0.3204299  0.0666516   4.808 2.57e-06 ***\nstories                         0.2111208  0.0429969   4.910 1.60e-06 ***\nmainroadyes                     0.1457445  0.0881620   1.653 0.099495 .  \nguestroomyes                    0.2265766  0.0822529   2.755 0.006286 ** \nbasementyes                     0.1109779  0.0613356   1.809 0.071538 .  \nhotwaterheatingyes              0.0639111  0.1377097   0.464 0.642960    \nairconditioningyes              0.2180708  0.0619582   3.520 0.000509 ***\nparking                         0.0384770  0.0347270   1.108 0.268880    \nprefareayes                     0.2788785  0.0651046   4.284 2.58e-05 ***\nfurnishingstatussemi-furnished -0.0390015  0.0661257  -0.590 0.555825    \nfurnishingstatusunfurnished    -0.1626662  0.0756474  -2.150 0.032441 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.4387 on 263 degrees of freedom\nMultiple R-squared:  0.7831,    Adjusted R-squared:  0.7724 \nF-statistic: 73.04 on 13 and 263 DF,  p-value: < 2.2e-16"
  },
  {
    "objectID": "linreg.html#mudeli-jäägid",
    "href": "linreg.html#mudeli-jäägid",
    "title": "18  Lineaarne regressioon",
    "section": "18.4 Mudeli jäägid",
    "text": "18.4 Mudeli jäägid\nNagu nägime ka eelnevatest näidetest, siis regressioonimudelit iseloomustav sirge ei kata peaaegu kunagi kõiki vaatlusi.\n\n\n\n\n\nJoonis 18.3: Regressiooni jäägid\n\n\n\n\nNagu näeme, siis vähemalt enamike majade korral ei ole hind täpselt selline nagu mudeli alusel oletada võiks. Ehk alati esinevad regressiooni jäägid (residuals), mis joonisel Joonis 18.3 on esitatud punasega. Need jäägid saame aga arvutada ja seejärel kasutada regressioonimudeli headuse hindamiseks. Väikeste vigadega regressioonimudel on mõistagi parem kui mudel, mis teeb suuri vigasid.\nRegressioonimudeli headuse hindamiseks jääkide alusel on välja mõeldud palju erinevaid mõõdikuid, sh R-ruut, keskmine ruutviga, keskmine absoluutviga.\nJääkide alusel saame hinnata ka seda, kas regressioonimudel vastab mitmesugustele eeldustele. Üks eeldus regressioonimudeli kehtimiseks on jääkide allumine normaaljaotusele ehk nulli lähedal olevaid jääke peaks olema rohkem kui nullist palju erinevaid jääke."
  },
  {
    "objectID": "linreg.html#prognoosimine",
    "href": "linreg.html#prognoosimine",
    "title": "18  Lineaarne regressioon",
    "section": "18.5 Prognoosimine",
    "text": "18.5 Prognoosimine\nEelnevalt kasutasime regressioonimudelit, et kirjeldada mil viisil sõltuvad väljundtunnuse väärtused sisendtunnus(t)e väärtustest. Kuna teame seda sõltuvust, siis saame ka arvutada konkreetsete tunnustega maja hinna. Kui meid huvitab nt 700 ruutmeetrise maja hind, siis peaksime valima regressioonisirgel sellise hinna, mille korral pind on 700 ruutmeetrit.\n\n\n\n\n\nR keeles saame mudeli alusel prognoosimiseks kasutada funktsiooni predict() alljärgnevalt.\n\nmudel <- lm(price ~ area, majad)\npredict(mudel, list(area = 700))\n\n       1 \n5.924087 \n\n\nNäeme, et 456 ruutmeetrise maja turuväärtus on keskmiselt 4.59 mln USD.\nMitme sisendtunnusega mudeli korral peame prognoosimiseks määrama mitu sisendtunnuse väärtust.\n\nmudel <- lm(price ~ area + bedrooms, majad)\npredict(mudel, list(area = 678, bedrooms = 3))\n\n       1 \n5.780631 \n\n\nKolme magamistoaga 678 ruutmeetrise maja turule vastav hind on aga 5.78 mln USD."
  },
  {
    "objectID": "logreg.html",
    "href": "logreg.html",
    "title": "19  Logistiline regressioon",
    "section": "",
    "text": "Vähimruutude meetodi alusel arvutatud lineaarse mudeli kehtivuse eeldus on, et regressioonijäägid on normaaljaotusega. See eeldus kehtib sageli siis, kui väljundtunnuseks on pideval skaalal mõõdetud arvtunnus. Muudel juhtudel ei saa aga regressioonijäägid peaaegu kunagi olla normaajaotusega. Üheks selliseks juhuks on olukord, kus soovime regressioonanalüüsi abil seletada binaartunnuste väärtusi ehk mõnda nähtust, millel saab olla ainult kaks tulemust. Statistikas sõnastatakse arvutused binaartunnuse kohta tihti sündmuse toimumise või mitte toimumisena. Praktikas tähendab see enamasti seda, kas vaatlusel on mingi omadus või ei ole. Selliste väljundtunnuste seletamiseks sisendtunnuste alusel peaksime leidma regressioonimudeli mitte vähimruutude põhimõttel, vaid kasutama logistilist regressiooni.\nLogistist regressiooni abil saab vastata küsimustele selle kohta, kas ja miks mingi sündmus toimub:\nJärgnevalt üritame regressioonanalüüsi alusel selgitada, millest sõltub krediidisaajate võimekus laenu teenindada. Kasutame selleks andmeid krediitkaardi krediidi (laenude) kohta, mis on kogutud 2005. aastal Taiwanis.\nMeile huvipakkuvaks tunnuseks on kliendi maksevõimetus (default). Uurime, kuidas seda on mõõdetud.\nHistogrammilt nähtub, et tunnuse väärtusteks võib olla 0 ja 1. Need tähendavad vastavalt laenukohustuste täitmise jätkamist ja täitmise katkestamist ehk maksevõimetust. Maksevõimetuid kliente oli peaaegu neljandik, mis iseloomustab hästi 2006. aastal alanud laenukriisi Taiwanis, millega kaasnesid kodutuse ja enesetappude sagenemine ning muud sotsiaalsed probleemid.\nLeiame meile juba tuttava regressioonimudeli, mis seletaks maksevõimetust krediidi limiidi (credit) alusel.\nNäeme, et 1000 iga dollarit krediidi limiiti vähendab maksevõimetust -0.000482 võrra, millel iseenesest ei ole tähendust. Piirefekti (marginal effect) lähenemist kasutades võib aga öelda, et vastavalt väheneb tõenäosus, et klient on maksevõimetu.\nVähimruutude meetodi sobimatus binaartunnuse seletamisel saab aga ilmsiks, kui uurime regressioonijääke.\nRegressioonijäägid ei ole normaaljaotusega, vaid jaotus on hoopis kahetipuline (bimodal), mis tähendab, et vähimruutude meetodil leitud regressioonimudel antud juhul ei kehti. Sellele viitab ka regressioonimudelit iseloomustav sirge.\nJooniselt näeme, et vähimruutude meetodil arvutatud regressioonimudel ei ole sobilik ka seetõttu, et selle alusel prognoositavad väärtused võivad olla ka väiksemad kui 0."
  },
  {
    "objectID": "logreg.html#logistiline-mudel",
    "href": "logreg.html#logistiline-mudel",
    "title": "19  Logistiline regressioon",
    "section": "19.1 Logistiline mudel",
    "text": "19.1 Logistiline mudel\nBinaartunnuse korral eeldame, et selle väärtused järgivad binoomjaotust. Seetõttu peame regressioonmudeli arvutamiseks leidma lineaarse mudeli üldistatud kujul (generalized linear model ehk GLM). Üldistatud lineaarse mudeli kordajaid ei saa me aga arvutada vähimruutude meetodil, vaid peame kasutama suurima tõepära hindamist (maximum likelihood estimation ehk MLE), mille käigus leiame mudeli parameetrid, mille korral meie andmed kõige tõenäolisemad on. Nende tegevuste käigus leitakse logistiline mudel.\n\n\n\n\n\n\nMõiste\n\n\n\nLogistiline mudel (logistic model) on regressioonimudel, mis seletab binaarskaalal mõõdetud väljundtunnuse väärtuseid sisendtunnus(t)e alusel.\n\n\nLogistilise mudeli arvutamiseks R keeles saame kasutada funktsiooni glm() üldistatud lineaarse mudeli leidmiseks, määrates argumendi family = binomial(link = 'logit').\n\nmudel <- glm(default ~ credit, laenud, family = binomial(link = 'logit'))\nmudel\n\n\nCall:  glm(formula = default ~ credit, family = binomial(link = \"logit\"), \n    data = laenud)\n\nCoefficients:\n (Intercept)        credit  \n-0.703935391  -0.000003078  \n\nDegrees of Freedom: 999 Total (i.e. Null);  998 Residual\nNull Deviance:      1090 \nResidual Deviance: 1066     AIC: 1070\n\n\nKuigi regressioonikordaja on sarnane vähimruutude meetodil leitule, siis logistiline mudel määrab seose tunnuste vahel erinevalt.\n\n\n\n\n\nLogistiline mudel\n\n\n\n\nNäeme, et logistine mudel ei ole graafiliselt mitte sirge, vaid kõver, mis on piiratud väljundtunnuse väärtuste 0 ja 1 vahele. See logistilise mudeli omadus ilmneb selgemalt, kui vaatame all esiatud mudelit, kus sisendtunnus eraldab väljundtunnuse väärtused selgemini.\n\n\n\n\n\nJoonis 19.1: Logistiline mudel\n\n\n\n\nJooniselt selgub ka, et me ei saa tõlgendada logistilise mudeli kordajaid nii nagu vähimruutude meetodi alusel leitud mudeli korral. Väljundtunnuse muutus sisendtunnuse muutuse korral oleneb sellest, millise konkreetse väärtuse juures me sisendtunnust vaatame."
  },
  {
    "objectID": "logreg.html#regressioonikordajad",
    "href": "logreg.html#regressioonikordajad",
    "title": "19  Logistiline regressioon",
    "section": "19.2 Regressioonikordajad",
    "text": "19.2 Regressioonikordajad\nLogistilise mudeli kordaja näitab, kui palju suureneb sisendtunnuse ühe ühikulise suurenemise korral väljundtunnuseks oleva sündmuse toimumise logaritmiline šanss. Selle saab šanssiks teisendada võttes kordaja eksponendi. Šanss (log odds) on sündmuse toimumise ja mitte toimumise jagatis ning näitab seega sündmuse toimumise ja mitte toimumise suhet.\n\n\n\n\n\n\nMärkus\n\n\n\nLogistilise mudeli kordaja märk näitab, kas sisendtunnuse väärtuse kasvades väljundtunnuseks oleva sündmuse toimumise šanss suureneb või väheneb.\nKordaja eksponent näitab, kui mitu korda on väljundtunnuseks oleva sündmuse toimumise šanss suurem selle mitte toimumisest, kui vastav sisendtunnus on ühe ühiku võrra suurem.\n\n\nUurime, millised šansid ilmnevad, kui lisame mudelisse ka krediidisaaja tausta iseloomustavad tunnused: vanus (age), sugu (gender), haridustase (education) ja perekondlik seis (maritalstatus).\n\nmudel <- glm(default ~ credit + age + gender + education + maritalstatus, laenud, family = binomial(link = 'logit'))\nmudel$coefficients # Kordajad\n\n         (Intercept)               credit                  age \n     -0.796736765011      -0.000002939894      -0.000311098193 \n          genderMale educationHigh school      educationOthers \n      0.321119125002       0.224516997261     -13.086064657195 \n educationUniversity  maritalstatusOthers  maritalstatusSingle \n      0.186010296421      -0.144848303107      -0.280845535283 \n\n\nLihtsuse huvides jätame praegu kõrvale kordjate usaldusvahemikud. Näeme, et üks dollar krediidi limiiti ja üks aasta vanust vähendavad maksevõimetust, sest vastavad kordajad on negatiivsed.\n\nexp(mudel$coefficients) # Kordajate eksponedndid\n\n         (Intercept)               credit                  age \n      0.450797625104       0.999997060111       0.999688950193 \n          genderMale educationHigh school      educationOthers \n      1.378669805156       1.251717986945       0.000002073931 \n educationUniversity  maritalstatusOthers  maritalstatusSingle \n      1.204434661681       0.865153524259       0.755144969726 \n\n\nNende kordajate eksponendid ehk šanssid näitavad aga mõlema tunnuse korral, et nende ühe ühikulise suurenemise korral suureneb tõenäosus olla maksevõimetu vastavalt 0.9999971 ja 0.999689 korda. Kuna suurenemine \\(<1\\) tähendab vähenemist, siis iga dollar krediidi limiiti ja iga aasta vanust vähendavad väga vähesel määral šanssi olla maksevõimetu.\nNimitunnuste tõlgendamiseks peame arvesse võtma nende võrdlusväärtusi.\n\nlaenud[, c('gender', 'education', 'maritalstatus')] %>% sapply(unique)\n\n$gender\n[1] \"Female\" \"Male\"  \n\n$education\n[1] \"University\"      \"Graduate school\" \"High school\"     NA               \n[5] \"Others\"         \n\n$maritalstatus\n[1] \"Married\" \"Single\"  \"Others\"  NA       \n\n\nNagu näeme eelnevast, siis eksponent kordajast genderMale on \\(e^{0.3211191} = 1.3786698\\). See tähendab, et meestel on võrreldes naistega 1.38 korda suurem šanss olla maksevõimetu kui mitte.\nSarnaselt saame järeldada, et šanss olla maksevõimetu on suurem madalama haridustaseme korral ja abielus olles. Järelduste tegemisel tasub jällegi meelde tuletada valikunihet (Peatükk 10), sest võib-olla pakuti nt abielus olijatele kergemini krediiti."
  },
  {
    "objectID": "logreg.html#prognoosimine",
    "href": "logreg.html#prognoosimine",
    "title": "19  Logistiline regressioon",
    "section": "19.3 Prognoosimine",
    "text": "19.3 Prognoosimine\nLogistilise mudeli alusel on võimalik prognoosida väljundtunnuse väärtusi sisendtunnuse väärtuste alusel. Prognoos on sellisel juhul väärtus vahemikus 0 kuni 1 (vt Joonis 19.1) ja saadud prognoosi võib tõlgendada sündmuse toimumise tõenäosusena vastvate sisendtunnuste väärtuste korral. Tõenäosuste prognoosimiseks üldistatud lineaarse mudeli korral peame funktsiooni predict() lisama argumendi type = 'response'.\n\nmudel <- glm(default ~ age + gender + education, laenud, family = binomial(link = 'logit'))\ntõenäosus <- predict(mudel, list(age = 23, gender = 'Female', education = 'University'), type = 'response')\ntõenäosus\n\n        1 \n0.2403401 \n\n\nNäeme, et 23 aastasel ülikooliharidusega naise tõenäosus olla maksevõimetu on 0.24 ehk 24%.\nSageli on vajalik prognoos aga algsel binaarskaalal ehk määrata mitte sündmuse toimumise tõenäosus, vaid konkreetsemalt, kas sündmus mingite sisendtunnuste väärtuste korral toimub või mitte. Sellisel juhul tuleb valida tõenäosuse lävend (threshold), millest alates määratakse sündmus toimunuks. Selliste prognooside täpsuse hindamiseks saame tekitada tabeli, mis näitab prognooside õigsust empiirilise sündmuse toimumise suhtes.\nMudeli prognoose olemasolevate vaatluste kohta näitab funktsioon fitted(). Kuvame need prognoosid histogrammil.\n\n\nWarning: Removed 2 rows containing missing values (geom_bar).\n\n\n\n\n\nPrognooside sagedused\n\n\n\n\nKõikide andmetes olevate tunnustega mudel prognoosib kõikidele isikutele tõenäosuse olla maksevõimetu alla 0.5. Seega võiksime tõenäosuse lävendiks võtta nt 0.4 ja uurida, kui suur osa maksevõimetutest isikutest prognoositakse õigesti. Selleks saame kasutada veatabelit.\n\ntable(fitted(mudel) > 0.4, mudel$model$default == 1, dnn = c('Prognoos', 'Tegelik'))\n\n        Tegelik\nPrognoos FALSE TRUE\n   FALSE   732  226\n   TRUE     13    9\n\n\nTabelist selgub, et tõenäosuse lävendi 0.4 korral tuvastab mudel õigesti ainult 9 maksevõimetut, samas kui 226 tegelikult maksevõimetut isikut mudel selliseks ei pea. See näitab, et mudel ei ole maksevõimetuse prognoosimisel eriti täpne. Kasutatud andmed laenusaajate kohta ei ole piisavad selleks, et eristada maksevõimetuid teistest.\nLisaks kasutatud veatabelile on klassifitseerimise täpsuse hindamiseks loodud veel palju mitmesuguseid mõõdikuid."
  },
  {
    "objectID": "viited.html",
    "href": "viited.html",
    "title": "Viited",
    "section": "",
    "text": "Cairo, A. (2016). The truthful art: data, charts, and maps for\ncommunication. New Riders.\n\n\nÇetinkaya-Rundel, M., & Ellison, V. (2021). A Fresh Look at\nIntroductory Data Science. Journal of Statistics and Data Science\nEducation, 29(sup1), S16–S26. https://doi.org/10.1080/10691898.2020.1804497\n\n\nCrameri, F., Shephard, G. E., & Heron, P. J. (2020). The misuse of\ncolour in science communication. Nature Communications,\n11(1), 5444. https://doi.org/10.1038/s41467-020-19160-7\n\n\nKelleher, J. D., & Tierney, B. (2018). Data science. The\nMIT Press.\n\n\nKitchin, R., & McArdle, G. (2016). What makes Big Data, Big Data?\nExploring the ontological characteristics of 26 datasets. Big Data\n& Society, 3(1), 205395171663113. https://doi.org/10.1177/2053951716631130\n\n\nPeng, R., & Matsui, E. (2016). The Art of Data Science.\nLeanpub.\n\n\nPinheiro, C., Patetta, M., & Safari, an O. M. C. (2021).\nIntroduction to Statistical and Machine Learning Methods for Data\nScience. SAS Institute Inc.\n\n\nSaltz, J. S., & Stanton, J. M. (2017). An introduction to data\nscience. SAGE Publications, Inc.\n\n\nSauga, A. (2017). Statistika õpik majanduseriala üliõpilastele.\nTTÜ kirjastus.\n\n\nSpiegelhalter, D. J. (2019). The art of statistics: learning from\ndata. Pelican Books.\n\n\nStevens, S. S. (1946). On the Theory of Scales of Measurement.\nScience, 103(2684), 677–680. https://doi.org/10.1126/science.103.2684.677\n\n\nTaddy, M. (2019). Business data science: combining machine learning\nand economics to optimize, automate, and accelerate business\ndecisions (First edition). McGraw-Hill Education.\n\n\nWickham, H. (2014). Tidy Data. Journal of Statistical Software,\n059(i10). https://ideas.repec.org/a/jss/jstsof/v059i10.html\n\n\nWild, C. (2006). The concept of distribution. Statistics Education\nResearch Journal, 5(2), 10–26.\n\n\nWu, J. (1997). Statistics = data science? http://www2.\nisye. gatech. edu/~ jeffwu/presentations/datascience.pdf"
  }
]