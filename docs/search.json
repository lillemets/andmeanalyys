[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Oijee! Andmeteadus",
    "section": "",
    "text": "Sellel lehel on esitatud õpik, mida võib käsitleda sissejuhatusena kaasaegsesse kvantitatiivsesse andmeanalüüsi. Nii ei ole siin esitatud kuigi palju traditsioonilist statistikat ega muude kui arvandmete analüüsimist. Andmeteadusele kohaselt on enamuse käsitletavate meetodite eesmärk prognoosimine, mitte selgitamine. Rõhuasetus on meetodite praktilisel rakendamisel, mitte nende teoreetilise tausta selgitamisel.\nÕpik on abivahend kursuse Sissejuhatus andmeteadusesse ja -analüüsi jaoks Eesti Maaülikoolis.\nLogol on kujutatud andmeanalüüs DALL-E masinõppe mudeli nägemuses."
  },
  {
    "objectID": "andmeteadus.html",
    "href": "andmeteadus.html",
    "title": "1  Andmed ja andmeteadus",
    "section": "",
    "text": "Andmed on teave mingi nähtuse kohta enamasti lihtsustatud kujul. Andmed on tegelikkuse lihtsustus (abstraktsioon), mille aluseks on andmete koguja poolt tehtud otsused ja valikud. Seetõttu ei ole andmed kunagi objektiivsed, vaid alati kallutatud ja erapoolikud (Kelleher & Tierney, 2018). See erapoolikus sõltub sellest, mille alusel ja kuidas mingit nähtust on mõõdetud (operatsionaliseeritud). Andmete kallutatust saab esitada täpsuse ja usaldusväärsuse alusel.\nTäpsus (validity) kirjeldab andmete õigsust või kehtivust. Täpselt mõõdetud andmed näitavad täpselt seda, mida soovime, ega ole kallutatud1. Nii sõltub andmete täpsus eelkõige sellest, mis üldist nähtust mõõdetakse.1 Nt korruptsiooni mõõdetakse selle alusel, mil määral inimesed seda tajuvad. See ei ole täpne, sest ei näita tegelikku korruptsiooni.\nUsaldusväärsus (reliability) kirjeldab andmete hajuvust. Usaldusväärselt mõõdetud andmed annavad igal kordusmõõtmisel sama tulemuse. Kui füüsikaliste mõõtmiste korral sõltub usaldusväärsus ka mõõtmisvahendist, siis sotsiaalteadustes on see seotud eelkõige mõõdetavate nähtuste ja mõõtmise ajaga2. Usaldusväärsus oleneb mõõtmise viisist ja sellest, keda või mida konkreetselt mõõdetakse.2 Nt mõõtes suhtumist toidu ohutusse, siis ei saa me teha usaldusväärseid üldistusi, kui uurime uudistega rohkem kursis olevaid isikuid ja küsitleme ajal, kui meedias kajastatakse palju mõnda toidumürgituse juhtumit.\n\n\n\n\n\n\nPea meeles!\n\n\n\nAndmete täpsust ja usaldusväärsust on oluline silmas pidada andmeanalüüsi tulemuste tõlgendamisel.\n\n\nMingi konkreetse andmekogumi iseloomustamiseks on kaks peamist viisi. Andmeteaduses eristatakse andmeid enamasti praktilises mõttes andmete vormi alusel. Nii võib andmik olla kas\n\nkorrastatud (structured) korrektselt vormistatud andmetabel,\nkorrastamata (unstructured) piltide, dokumentide, videote vms kujul või\npoolkorrastatud (semistructured), kui andmeväljad ei ole esitatud tabelina, aga neid saab üksteisega seostada.\n\nSelleks et andmeid analüüsida on enamasti siiski vajalik need korrastatud andmetabeliks vormistada.\nTeoreetilisemas mõttes eristatakse andmike nende päritolu alusel:\n\nprimaarandmed on kogutud konkreetse analüüsi jaoks,\nsekundaarandmed aga mingil muul eesmärgil.\n\nKui andmed on kogutud konkreetse analüüsi jaoks, siis on need suurema tõenäosusega täpsed ja usaldusväärsed.\nAndmetega seotud toimingud saab kokku võtta nelja A abil (Saltz & Stanton, 2017):\n\narhitektuur (architecture),\nammutamine (acquisition),\nanalüüs (analysis),\narhiveerimine (archiving)."
  },
  {
    "objectID": "andmeteadus.html#andmeteadus-ei-ole-teadus",
    "href": "andmeteadus.html#andmeteadus-ei-ole-teadus",
    "title": "1  Andmed ja andmeteadus",
    "section": "1.2 Andmeteadus ei ole teadus",
    "text": "1.2 Andmeteadus ei ole teadus\nMõistet “andmeteadus” hakati kasutama 1990. aastatel (Kelleher & Tierney, 2018). Väga suurte korrastamata andmike ilmumine ja arvutitehnika areng tähendas, et andmete analüüsimiseks arvutitel tuli kuidagi tuua sisse statistilistele meetoditele omane rangus. Suurte andmike uurimisel arvutitel ei piisanud enam ainult programmeerimise oskusest, vaid vaja oli ka teadmisi andmete ja statistika kohta.\nSeega võibki andmeteaduseks pidada statistiliste ja arvutitel põhinevate tehnikate rakendamist selleks, et saada parem arusaam mingist konkreetsest andmikust. Sealjuures ei pruugi need andmikud olla tavapärased andmetabelid, vaid on sageli korrastamata andmed. Kuna igasuguses vormis andmeid on võimalik teisendada numbriteks, saavad andmeteadustes kasutatavad protseduurid hakkama ka mahukate korrastamata andmikega 3. Otsitav arusaam nende andmete kohta võib seisneda nt mustrite, klastrite või erindite tuvastamises. Kuna andmeteaduses ühendatakse matemaatilised tehnikad ja klassikalised statistilised meetodid nende rakendamisega arvutitel, siis võib andmeteadustes kasutatavaid protseduure nimetada algoritmideks.3 Korrastamata suurandmed on nt veebilehtede külastatavus, sotsiaalmeedia postitused, erinevate sensorite poolt kogutud teave.\nNeed algoritmid käsitlevad osa andmetest sisenditena ja teist osa väljunditena. Nende kahe vaheliste seoste alusel tuvastavad algoritmid (varjatud) mustreid, mida sageli klassikaliste statistiliste meetoditega ei ole võimalik leida. Praktilistes andmeteaduse rakendustes on nende algoritmide lõppeesmärk siiski prognoosida sisendite alusel kõige sobivam väljund selliste andmeväljade kohta, mille puhul see väljund teada ei ole 4.4 Algoritmide abil saame prognoosida nt laenusaajate tõenäosuse laen tagasi maksta (väljund) teades nende sotsiaal-majanduslikke näitajaid (sisendid).\n\n\n\n\n\n\nMõiste\n\n\n\nAndmeteadus on statistiliste ja arvutitel põhinevate tehnikate rakendamine andmikest mustrite tuvastamiseks ja nende alusel prognooside tegemiseks.\n\n\nEnamus katseid andmeteadust mõtestada teevad seda mitme nähtuse kaudu (Kelleher & Tierney, 2018; Pinheiro et al., 2021; Spiegelhalter, 2019; Taddy, 2019): klassikaline statistika, algoritmid, suurandmed, masinõpe, andmekaeve, andmehaldus ja andmebaasid, erialateadmised, andmete kasutamise eetika. Väga laias mõttes võibki andmeteaduseks pidada kõike, mis on mingilgi viisil andmetega seotud. Nii on kirjeldatud andmeteadust ka tegevuste kaudu, hõlmates andmekogumist, andmete haldamist ja korrastamist, analüüsimist ja tõlgendamist (Çetinkaya-Rundel & Ellison, 2021; Kelleher & Tierney, 2018). Selline väga lai lähenemine võib olla ka põhjuseks, miks arvatakse, et andmeteadus on ületähtsustatud (Taddy, 2019): mõistet on kasutatud viitamaks ka tegevustele, mis tegelikult ei hõlma andmeteadust. On tavapärane, et ennast andmeteadlaseks nimetavatel inimestel puudub vastav hariduslik ettevalmistus ja teadustöö kogemus.\nNii võib väita, et suur osa sellest, mida nimetatatakse andmeteaduseks on pigem andmeanalüüs ja sellega tegelevad inimesed mitte teadlased, vaid analüütikud. Ka mõiste “andmeteadus” kasutusele võtmisel ei olnud rõhuasetus teadustööl5. Seega kui peame teaduseks uue teadmise loomist tavapärase teadustöö mõistes, siis ei ole andmeteaduse rakendamine iseenesest teadus ega teaduslik, vaid pigem praktiline andmeanalüüs arvutitel.5 Mõiste esimesi kasutusi põhjendati nii: “Data Science is likely the remaining good name reserved for us” (Wu, 1997)."
  },
  {
    "objectID": "andmeteadus.html#andmeteadus-või-statistika",
    "href": "andmeteadus.html#andmeteadus-või-statistika",
    "title": "1  Andmed ja andmeteadus",
    "section": "1.3 Andmeteadus või statistika?",
    "text": "1.3 Andmeteadus või statistika?\nAndmete analüüsimisel võivad olla väga erinevad eesmärgid, sageli isegi mitu korraga. Selleks võib olla mõne nähtuse kirjeldamine, üldistamine, prognoosimine või juhtimine (description, inference, prediction, prescription). Traditsiooniliselt on klassikalise statistika arenguloos olnud peamine tähelepanu sellel, kuidas kõige täpsemini teha mingi valimi alusel üldistusi kogumi kohta. Arengud andmeteaduses ja eelkõige masinõppes on olnud samas aga suunatud sellele, kuidas kõige täpsemini mingit tulemust prognoosida, jättes kõrvale üldistamise ja kõik muud kaalutlused.\nNii on andmeteaduses sageli rakendava masinõppe korral mudel enamasti nö must kast, mille alusel ei ole võimalik tuvastada, kuidas mingi konkreetse prognoosini jõuti. Enamuse statistika meetodite puhul on selle mudeli tõlgendamine aga just peamine eesmärk. Seega, kui andmeteadustes on rõhuasetus suurima võimaliku prognoosi täpsuse saavutamisel, siis statistikas on oluline koostada täpne ja püsiv mudel, mis rahuldaks kõik teoreetilised eeldused ja pakuks seeläbi kõige mõistlikuma selgituse tunnuste vahelistele seostele. Nii põhineb suur enamus teadustööst statistika meetoditel, samas kui praktilisemates rakendustes (nt tehnoloogias ja ärinduses) vajatakse pigem andmeteaduse poolt pakutavaid prognoose.\n\n\n\n\n\n\nMõiste\n\n\n\nStatistilisi meetodeid kasutatakse enamasti tunnuste vaheliste seoste selgitamiseks ja selle käigus ka valimi alusel kogumi kohta üldistuste tegemiseks. Andmeteadustes rakendatava masinõppe eesmärk on aga eelkõige võimalikult täpsete prognooside tegemine.\n\n\nKui statistilisi meetodeid kasutades on enamasti oluline teha valimi alusel järeldusi kogumi kohta, siis andmeteadustes ei pöörata kogumile tähelepanu ja sageli eeldatakse vaikimisi, et olemas olev valim on kogumi suhtes esinduslik. Seetõttu keskendub statistika andmete kirjeldamisele teoreetilistele jaotuste kaudu, samas kui andmeteadustes kasutatakse üldistuste tegemiseks taasvalikut (resampling). See on siiski pigem üldistus ja tegelikkuses kasutatakse mõlemas lähenemises parameetrilisi ja mitteparameetrilisi meetodeid.\nKuna aga statistikas oletatakse, et andmed järgivad mingisugust teoreetilist jaotust, siis igasuguste punkthinnangute leidmise käigus arvutatakse ka selle oodatav hajuvus, vähemalt üldistamise korral. Kuigi andmeteadustes kasutatava masinõppe rakendamisel on prognoosi täpsus oluline, siis selle prognoosi hajuvus nt usaldusvahemike kontekstis enamasti mitte6. Erinevale lähenemisele ebakindlusele tulemuse suhtes viitab ka see, kuidas arvutuste tulemust nimetatakse: statistikas räägitakse võimalikest hinnangutest (estimate), andmeteadustes aga lihtsalt mõõtmise tulemusest (metric). Ehk statistikas keskendutakse palju tulemuse ebakindluse hindamisele, samas kui andmeteadustes ainult tulemusele endale.6 Nt kogumisse kuuluvate ettevõtete keskmise käibe hindamisel valimi alusel on statistikas oluline esitada, millisesse vahemikku see jääb, samas kui masinõppes oleks oluline ainult keskmine ise\nPraktilisemas mõttes rakendatakse nende kahe lähenemise puhul ka erinevaid meetodeid erinevatel andmetel. Isegi suur osa kaasajal kasutatavast statistikast kujunes ajal, kui andmikud olid väikesed ja arvutusi tehti enamasti käsitsi paberil. Seega statistilised arvutused pidid olema käsitsi lahendamiseks piisavalt lihtsad, mistõttu vastavad meetodid põhinesid suurel määral matemaatikateoorial ja paljudel eeldustel andmete jaotuse kohta. Andmeteadus seevastu on arenenud aga koos suurandmete leviku ja arvutite võimsuse kasvuga. Nii hõlmavad paljud andmeteaduste rakendused suurandmeid (sh reaalajas tekkivaid andmeid), mis vajavad suurt arvutusvõimsust ja vähem teoreetilisi eeldusi. Kui lihtsustada, siis võib öelda, et statistika põhineb matemaatikal, andmeteadus aga arvutamisel.\n\nLihtsustatud statistika ja andmeteaduse (masinõppe) võrdlus. Tegelikkuses esineb kahes veerus palju kattuvusi.\n\n\n\n\n\n\n\n\nStatistika\nAndmeteadus (masinõpe)\n\n\n\n\nEesmärk\nÜldistamine\nPrognoosimine\n\n\nEbakindluse hindamine\nTeoreetilised jaotused\nTaasvalik\n\n\nEbakindlus\nHinnangu osa\nEbaoluline\n\n\nAndmed\nKorrastatud väikese või keskmise suurusega\nKorrastamata suurandmed\n\n\nMeetodid\nMatemaatikal põhinevad ja traditsioonilised\nArvutamisel põhinevad ja hiljutised\n\n\n\n\n\n\n\n\nÇetinkaya-Rundel, M., & Ellison, V. (2021). A Fresh Look at Introductory Data Science. Journal of Statistics and Data Science Education, 29(sup1), S16–S26. https://doi.org/10.1080/10691898.2020.1804497\n\n\nKelleher, J. D., & Tierney, B. (2018). Data science. The MIT Press.\n\n\nPinheiro, C., Patetta, M., & Safari, an O. M. C. (2021). Introduction to Statistical and Machine Learning Methods for Data Science. SAS Institute Inc.\n\n\nSaltz, J. S., & Stanton, J. M. (2017). An introduction to data science. SAGE Publications, Inc.\n\n\nSpiegelhalter, D. J. (2019). The art of statistics: learning from data. Pelican Books.\n\n\nTaddy, M. (2019). Business data science: combining machine learning and economics to optimize, automate, and accelerate business decisions (First edition). McGraw-Hill Education.\n\n\nWu, J. (1997). Statistics = data science? http://www2. isye. gatech. edu/~ jeffwu/presentations/datascience.pdf"
  },
  {
    "objectID": "mlaibd.html",
    "href": "mlaibd.html",
    "title": "2  Masinõpe ja suurandmed",
    "section": "",
    "text": "Andmeteaduse levikuga on kaasas käinud veel mitmed sellega lähedalt seotud mõisted, sh masinõpe, tehisintellekt ja suurandmed."
  },
  {
    "objectID": "mlaibd.html#masinõpe-ei-ole-veel-päris-tehisintellekt",
    "href": "mlaibd.html#masinõpe-ei-ole-veel-päris-tehisintellekt",
    "title": "2  Masinõpe ja suurandmed",
    "section": "2.1 Masinõpe ei ole veel päris tehisintellekt",
    "text": "2.1 Masinõpe ei ole veel päris tehisintellekt\nMasinõpe on andmeteadustes kasutatav üldine tehnika, mida rakendatakse konkreetsetel algoritmidel või mudelitel selleks, et saavutada nende võimalikult suur täpsus prognoosimisel. Selleks üritatakse masinõppe käigus leida sobivaimad parameetrid. Nii põhineb masinõpe algoritmi või mudeli arendamisel: masinõppe käigus võetakse aluseks olemasolevad sisendite ja väljundite paarid, et arendada algoritmide võimekust leida sobiv väljund sellistele juhtudele, kus teada on ainult sisendi väärtus1. Mudelite ja algoritmide arendamisel võrreldakse nende erinevaid võimalikke parameetreid erinevate andmike kontekstis, seega seisneb masinõppe tööpõhimõte erinevate parameetrite ja andmete kombinatsioonide võrdlemises.1 Nt kui mudeli sisendiks on pildid võimalike vähkkasvajatega ja väljundiks vähkkasvaja tegelik tuvastamine, siis masinõppe käigus saab arendada mudeli, mis määrab pildi järgi võimalikult täpselt vähkkasvaja olemasolu ka juhul, kui see veel teada ei ole\n\n\n\n\n\n\nMõiste\n\n\n\nMasinõpe põhineb mudeli või algoritmi rakendamisel erinevate parameetritega ja andmiku erinevatel osadel selleks, et leida selline mudel või algoritm, mis võimalikult täpselt prognoosiks.\n\n\nSageli arvatakse, et masinõpe on üks tehisintellekti (artificial intelligence) rakendusi, sest see on võimeline lahendama ülesandeid ilma inimese sekkumiseta (Pinheiro et al., 2021). Selline arusaam on mõneti mõistetav, kui mõtestame tehisintellekti nii, et see hõlmab arvutusi selliste ülesannete lahendamiseks, millega tavapäraselt saavad hakkama ainult inimesed (Spiegelhalter, 2019). Õppimine masinõppes viitab justkui selle oskusele leida andmetest iseseisvalt mustreid ja nende alusel otsuseid (prognoose) teha. Samas on masinõpe piiratud mustrite leidmisega ainult olemasolevatest andmetest ega suuda arvesse võtta väljaspool neid olevaid tegureid ega “mängureegleid” (Taddy, 2019). Selleks on vajalik abstraktne teoreetiline mõtlemine ja arusaam sellest, kuidas maailm üldiselt toimib. Nii ei ole tehisintellekt otsuste tegemisel võimeline arvesse võtma ka eetikat ega ühiskondlikke norme. Ehk masinõppe abil saab lahendada ainult üksikuid väga konkreetseid ülesandeid, aga see ei asenda veel inimesi."
  },
  {
    "objectID": "mlaibd.html#andmeteadus-võimaldab-rakendada-suurandmeid",
    "href": "mlaibd.html#andmeteadus-võimaldab-rakendada-suurandmeid",
    "title": "2  Masinõpe ja suurandmed",
    "section": "2.2 Andmeteadus võimaldab rakendada suurandmeid",
    "text": "2.2 Andmeteadus võimaldab rakendada suurandmeid\nSuurandmed on sellised andmed, mis on suured. Tegelikult on suurandmetel veel palju eripärasid, mis tulenevalt eelkõige nende automatiseeritud loomisest. Tavapäraselt selgitatakse suurandmete olemust nn kolme V alusel:\n\nandmete suur maht (volume),\nandmete loomise suur kiirus (velocity) ja\nandmete suur mitmekesisus (variety).\n\n\n\n\n\n\n\nMõiste\n\n\n\nSuurandmeid iseloomustab nende suur maht, loomise kiirus ja mitmekesisus.\n\n\nLisaks nendele kolmele on kirjanduses suurandmetele veel mitmeid omadusi omistatud (Kitchin & McArdle, 2016):\n\nkõikehõlmavus ja esinduslikkus,\npeenekoelisus ja eripärasus,\nühendatavus teiste andmikega,\nvõimalus kiiresti andmevälju lisada,\nkorrastamatus ja müra,\nsuur (rahaline) väärtus,\nmitmetähenduslikkus.\n\nSiiski on leitud, et isegi kolme V-d esindavad omadused ei iseloomusta sugugi kõiki suurandmeid ja üldiselt saab suurandmeid kirjeldada pigem erinevate kombinatsioonide kaudu eelpool nimetatud omadustest (Kitchin & McArdle, 2016). Need omadused võimaldavad aga eristada suurandmeid nö tavapärastest korrastatud tabelitena esitatud andmetest.\nKlassikalised statistilised meetodid ei ole enamasti sobilikud suurandmete analüüsimiseks. Kuna suur osa statistikast seisneb valimi alusel üldistuste tegemises, siis vastavad meetodid ei ole lihtsalt asjakohased, kui andmed esindavad tervet kogumit ja eesmärk on prognoosimine. Sealjuures ilmnevad ka tehnilised puudujäägid. Statistikas laialt levinud statistiline hüpoteeside testimine on tundlik suurte valimite suhtes ja viitab sellistel juhtudel alati statistiliselt olulisele erinevusele. Samuti hõlmavad paljud meetodid vabadusastmete arvu, mida ei saa kasutada, kui tunnuseid on rohkem kui vaatlusi. Andmeteaduses levinud meetoditel selliseid piiranguid enamasti ei ole.\nSuurandmed ilmusid seoses teabe digitaliseerimisega, mis võimaldas andmeid lihtsamini koguda ja odavamalt hoiustada, ning suurandmete analüüsimise võimaluste tekkimisega, mille aluseks oli arvutite riistvaralise võimekuse ja vastavate tarkvaraliste võimaluste areng. Need arengud võimaldasid samal ajal ka andmeteaduste kui eriala ilmumist, mida toetas lisaks ka ühisosa leidmine teadustöös arvutiteaduse, statistika ning sotsiaalteaduste vahel (Taddy, 2019). Ühest küljest tekitas suurandmete olemasolu vajaduse andmeteaduse meetodite järgi, teisalt pakkusid suurandmed võimaluse rakendada meetodeid, mis klassikalise statistika alla ei kuulunud.\n\n\n\n\n\nKitchin, R., & McArdle, G. (2016). What makes Big Data, Big Data? Exploring the ontological characteristics of 26 datasets. Big Data & Society, 3(1), 205395171663113. https://doi.org/10.1177/2053951716631130\n\n\nPinheiro, C., Patetta, M., & Safari, an O. M. C. (2021). Introduction to Statistical and Machine Learning Methods for Data Science. SAS Institute Inc.\n\n\nSpiegelhalter, D. J. (2019). The art of statistics: learning from data. Pelican Books.\n\n\nTaddy, M. (2019). Business data science: combining machine learning and economics to optimize, automate, and accelerate business decisions (First edition). McGraw-Hill Education."
  },
  {
    "objectID": "analüüs.html",
    "href": "analüüs.html",
    "title": "3  Andmete analüüs",
    "section": "",
    "text": "Andmeanalüüsi teel soovitud teadmiseni jõudmiseks on vajalik sooritada teatud tegevused teatud järjekorras. Kuigi erinevate autorite poolt esitatud andmeanalüüsi sammud mõnevõrra erinevad (Peng & Matsui, 2016; Pinheiro et al., 2021; Spiegelhalter, 2019), siis saab need kokku võtta järgnevalt:\n\npüstita uurimisküsimus,\nkavanda selle küsimuse lahendamine,\nkogu vajalikud andmed,\nloo arusaam andmetes sisalduvast,\ntee arvutused vastavalt uurimisküsimusele,\ntõlgenda arvutuste tulemusi,\nesita tulemused teksti ja/või joonistena.\n\nÄrinduse valdkonnas kasutatakse mõnikord standardiseeritud CRISP-DM lähenemist, mis määrab tegevused ettevõtte siseste andmete praktiliseks rakendamiseks. Võrreldes eelnevalt kirjeldatud sammudega hõlmab nimetatud lähenemine ka andmete kättesaadavuse hindamist ja pöörab enam tähelepanu mudeli rakendamisele."
  },
  {
    "objectID": "analüüs.html#andmeanalüüsi-põhimõtted",
    "href": "analüüs.html#andmeanalüüsi-põhimõtted",
    "title": "3  Andmete analüüs",
    "section": "3.2 Andmeanalüüsi põhimõtted",
    "text": "3.2 Andmeanalüüsi põhimõtted\nKogemus näitab, et teatud vead kipuvad andmetega tegelemisel korduma ja nii saab esitada teatud põhimõtted, mida selle käigus silmas pidada Alljärgnevate soovituse hulgas on muuhulgas eeskuju võetud Spiegelhalter (2019) poolt esitatud põhimõtetest.\n\nPea iga tegevuse puhul alati meeles, mis on analüüsi lõppeesmärk. Vastasel juhul on oht jääda pusima mingi tegevuse juures, mis tegelikult ei olegi eriti vajalik.\nAndmeanalüüsis ei saa kõike ette näha, aga siiski tuleb kasuks kõik tegevused ette kavandada. Nt juba andmete kogumistel peaks olema selge, millise meetodi abil neid hiljem uuritakse.\nAndmete analüüsimine ei kulge enamasti sirgjooneliselt algusest lõpuni, vaid enamasti on vaja tegevusi korrata või eelmise tegevuse juurde tagasi minna. Nt kui kogutud andmed ei võimalda vajaliku meetodi rakendamist, siis võib olla vajalik andmeid täiendada.\nVeendu, et andmed on täpsed ja usaldusväärsed või kui ei ole, siis peab see olema arvesse võetav. Sobimatute andmete analüüsimine on maha visatud aeg ja vaev.\nKasuta ainult meetodeid, millest aru saad. Tarkvara kuvab peaaegu alati arvutuse tulemuse, isegi siis kui see on täiesti seosetu.\nEelista alati lihtsust keerukatele arvutustele. Kuigi mõne keerulise meetodi rakendamine võib tunduda peen ja usutav, siis on lihtsate meetodite rakendamisest sageli palju rohkem kasu, sest tulemused on läbipaistvamad ja arusaadavamad.\nÜldistuste tegemisel esita alati punkthinnangute usaldusvahemikud või kasuta üldse ainult vahemikhinnanguid. Kahe rühma mingi tunnuse punkthinnangud võivad olla erinevad, aga kui vastavad vahemikhinnangud kattuvad, siis me ei saa seda erinevust üldistada1.\nNähtuste üldistamisel otsi tasakaalu nihke ja hajuvuse vähendamise vahel. Statistiline mudel peaks olema piisavalt täpne olemasoleva valimi suhtes, aga ka piisavalt ebatäpne, et see kirjeldaks täpselt ka mõnda muud valimit.\nVõimalusel võrdle enda analüüsi tulemusi mingite varasemate tulemustega ja uuri, kas ka teistsugused meetodid annavad sama tulemuse ehk valideeri tulemusi.\nTeosta andmete analüüs nii, et see oleks korratav. Korratavuse võimaldamiseks tuleb analüüs vormistada nii, et kõik tegevused andmetega oleksid tuvastatavad käsulehelt (script).\nOtsi andmetest mustreid. Selleks uuri seoseid erinevate tunnuste vahel, mitte ära keskendu üksikutele tunnustele.\n\n1 Nt kui mingis valimis olevate ettevõtete käive keskmiselt kasvas, aga selle keskmise kasvu usaldusvahemik kattis ka 0, siis on tõenäoline, et üldiselt selliste ettevõtete käive ei muutunudkiEraldi võib välja tuua mõned soovitused, mida pidada meeles andmetest mustrite leidmisel.\n\nUuri, mil viisil muutuvad ühe tunnuse väärtused teise tunnuse väärtuste muutudes.\nAgregeerimise ja summeerimise käigus läheb alati vähemalt osa andmetes olevast infost kaduma.\nAndmete jaotus on enamasti kaldu kas suurte või harvem väikeste väärtuste suhtes ja seega on kallutatud ka mõõdikud, mis on tundlikud erindite suhtes2.\nMustreid on enamasti lihtsam tuvastada joonistelt kui arvutuste tulemustest.\nMõned mustrid ilmnevad ainult juhul, kui uurida tunnuseid teisendatud kujul (transformed). Teisendusi on oluline meeles pidada tulemuste tõlgendamisel.\n\n\n\n\n\n2 Nt töötasu jaotus ühiskonnas on kaldu suuremate töötasude poole, mitõttu ka töötasude aritmeetiline keskmine on kaldu suurema väärtuse suunas.\n\nPeng, R., & Matsui, E. (2016). The Art of Data Science. Leanpub.\n\n\nPinheiro, C., Patetta, M., & Safari, an O. M. C. (2021). Introduction to Statistical and Machine Learning Methods for Data Science. SAS Institute Inc.\n\n\nSpiegelhalter, D. J. (2019). The art of statistics: learning from data. Pelican Books."
  },
  {
    "objectID": "tarkvara.html",
    "href": "tarkvara.html",
    "title": "4  Tarkvara andmetöötluseks",
    "section": "",
    "text": "Andmetega tegelemiseks kasutatav tarkvara oleneb paljuski valdkonnast. Kui lihtsateks teheteks korrastatud andmetel piisab ka nn kontoritarkvarast, siis andmeteadustes kasutatakse tunduvalt võimekamaid rakendusi. Kuigi enamus arvutikasutajatest on ilmselt tuttav tabelarvutusega (nt Excel), siis on andmete töötlemiseks olemas ka suurel hulgal teisi graafilise kasutajaliidesega rakendusi, aga ka käsureal töötavaid programmeerimiskeeli. Üldiselt võibki need rakendused jagada kolmeks:"
  },
  {
    "objectID": "tarkvara.html#tabelarvutus",
    "href": "tarkvara.html#tabelarvutus",
    "title": "4  Tarkvara andmetöötluseks",
    "section": "4.1 Tabelarvutus",
    "text": "4.1 Tabelarvutus\nTabelarvutuse rakendused võimaldavad andmete töötlemist ainult kahemõõtmelise tabelina või selliste tabelite kogumikuna. Selliseid tabeleid on mugav hallata ainult siis, kui need on eriti veergude arvu mõttes väiksed. Kuigi paljudel tabelarvutuse rakendustel on olemas ka funktsioonid ja lisad mitmete statistiliste protseduuride teostamiseks, siis on tabelarvutus mugav pigem matemaatiliste tehete rakendamiseks otse lahtritel. Seetõttu on nende rakenduste kasutamine väga lihtsasti õpitav, aga neil puuduvad võimalused paljudeks tegevusteks, mis on vajalikud andmete põhjalikumal analüüsimisel. Siiski on tabelarvutuse rakendused kasulikud andmete sisestamiseks ja lihtsate kokkuvõtete tegemiseks."
  },
  {
    "objectID": "tarkvara.html#statistikarakendused",
    "href": "tarkvara.html#statistikarakendused",
    "title": "4  Tarkvara andmetöötluseks",
    "section": "4.2 Statistikarakendused",
    "text": "4.2 Statistikarakendused\nSarnaselt tabelarvutusele on vähemalt enamusel statistikarakendustel olemas andmetabeli vaade, aga suurem osa andmetöötlusest tehakse tervete ridade või veergude kaupa, mitte iga lahtrit üksikult muutes. Selleks eeldavad statistkarakendused nn korrastatud andmetabelit, milles read esindavad vaatlusi ja veerud tunnuseid. See loogika lihtsustab märkimisväärselt statistiliste protseduuride kasutamist. Erinevalt tabelarvutuse rakendustest kuvatakse arvutuste tulemused mitte otse andmetabelis vaid eraldi vaates. Kuigi statistikarakendused sisaldavad protseduure enamuse klassikalise statistika meetodite rakendamiseks, siis paljudel juhtudel ei võimalda need keerukamaid arvutusi ega korrastamata andmete kasutamist."
  },
  {
    "objectID": "tarkvara.html#programmeerimiskeeled",
    "href": "tarkvara.html#programmeerimiskeeled",
    "title": "4  Tarkvara andmetöötluseks",
    "section": "4.3 Programmeerimiskeeled",
    "text": "4.3 Programmeerimiskeeled\nProgrammeerimiskeelte kasutamine on põhimõtteliselt väga lihtne: objektidel (andmed) rakendatakse funktsioone (tehted). Kogu keerukus seisneb objektide ja funktsioonide tundmises ning nende omavahelises kombineerimises.\nKõige selgemalt eristab programmeerimiskeeli teistest rakendustest graafilise kasutajaliidese puudumine. Seega ei toimu andmete töötlemine mitte menüüdest valikute tegemise teel, vaid kõik tegevused toimuvad käsitsi sisse trükitavate käskude alusel, mida saab sisestada otse käsurealt või käsulehelt. Andmeid saab hoiustada väga mitmesugusel kujul alates üksiktutest väärtustest ja lõpetades mitmemõõtmeliste tabelitega.\nSamuti ei ole käsurea vahendusel andmetega tegeledes andmed pidevalt nähtaval ja seega peab kasutaja väga täpselt meeles pidama, millisel kujul andmed parajasti hoiustatud on. Nt tabelina vormistatud andmete puhul on oluline teada, mida esindavad read ja mida veerud, mis on veergude nimetused ja mis tüüpi tunnusena on andmed veergudes."
  },
  {
    "objectID": "tarkvara.html#r-keel",
    "href": "tarkvara.html#r-keel",
    "title": "4  Tarkvara andmetöötluseks",
    "section": "4.4 R keel",
    "text": "4.4 R keel\nVäga üksikud programmeerimiskeeled on loodud ainult andmete töötlemiseks. Nendest kõige laialdasemalt kasutatav on R keel. Seda võib laiemas mõtes pidada arvutuskeskkonnaks, mis on ette nähtud andmete töötlemiseks, arvutuste tegemiseks ja jooniste kuvamiseks1.1 Põhjalikum R keele kirjeldus on esitatud selle ametlikul leheküljel.\nR keele kasutamiseks tuleb arvutisse laadida ja paigaldada vastav rakendus. Keele kasutamiseks on soovitatav paigaldada arvutisse ka rakendus RStudio Desktop."
  },
  {
    "objectID": "kasutus.html",
    "href": "kasutus.html",
    "title": "5  Põhikasutus",
    "section": "",
    "text": "Käesolevas peatükis tutvume lühidalt R keele kasutamisega.\nKäsureal esitatud käsu alusel teeb rakendus vastavalt R keele loogikale arvutused ja esitab vastuse. Nii saab käsurida kasutada ka lihtsalt kalkulaatorina ja sealjuures saab korraga teha ka mitu tehet.\nR keele võimekus avaldub aga siis, kui kasutame käske salvestamaks väärtused objektidesse ja rakendamaks neil erinevaid funktsioone."
  },
  {
    "objectID": "kasutus.html#objektid-ja-funktsioonid",
    "href": "kasutus.html#objektid-ja-funktsioonid",
    "title": "5  Põhikasutus",
    "section": "5.1 Objektid ja funktsioonid",
    "text": "5.1 Objektid ja funktsioonid\n\nTo understand computations in R, two slogans are helpful:\nEverything that exists is an object.\nEverything that happens is a function call.\n- John Chambers\n\nAndmete töötlemiseks on vaja need kuidagi salvestada. Väärtusi saab R keeles salvestada objektidena. Sealjuures väärtused, mis ei ole arvud, tuleb ümbritseda jutumärkidega.\n\n# Objekti võib salvestada arve...\nkama <- 2\nkama\n\n[1] 2\n\n# ...aga ka sõnu või lauseid.\npesa <- 'muna'\npesa\n\n[1] \"muna\"\n\n# Trükitav nö nool ei tohi sisaldada tühikuid, \n# sest vastasel juhul käsitletakse käsku võrdlusena.\nkama < - 2\n\n[1] FALSE\n\n\nObjekte võib nimetada kuidas iganes1, aga nimetused peavad algama tähega ega tohi sisaldada teatud kirjavahemärke ega tühikuid.1 Objektidele nime valimine võtab sageli rohkem aega kui peaks: “There are only two hard things in Computer Science: cache invalidation and naming things.”\nVäärtuste klasse on R keeles väga palju, aga olulisimaks võib pidada nendest kolme:\n\nüksik väärtus on element,\n\nmitu väärtust on vektor,\ntabelina vormistatud väärtused on andmetabel (data frame).\n\nVäärtuse klass sõltub sellest, mis kujul me andmed sisestame.\n\n# Element\nkaks <- 3\nkaks\n\n[1] 3\n\n# Vektor\nnimed <- c('Alar', 'Kaja', 'Jüri')\nnimed\n\n[1] \"Alar\" \"Kaja\" \"Jüri\"\n\n# Andmetabel\nõpilased <- data.frame(nimi = nimed, \n                       hinne = c(5,4,2))\nõpilased\n\n  nimi hinne\n1 Alar     5\n2 Kaja     4\n3 Jüri     2\n\n\nNagu näha, siis rohkem kui ühe elemendi esitamiseks peame kasutama vastavat funktsiooni.\nSamuti ilmneb, et funktsiooni nimetuse järele sulgudesse tuleb sisestada funktsiooni argumendid. Esimene argument on enamasti objekt ja järgnevad argumendid täpsustused.\n\nFibonacci <- c(1,NA,2,3,NA)\n# Kuna vektor sisaldab teadmata väärtusi, \n# siis ei väljasta funktsioon vektori summat.\nsum(Fibonacci)\n\n[1] NA\n\n# Saame täpsustada, et soovime summa arvutada ilma puuduvate väärtusteta.\nsum(Fibonacci, na.rm = TRUE)\n\n[1] 6\n\n\nIga funktsiooni kõikide argumentide teada saamiseks saab kuvada vastava funktsiooni abilehe. Selleks tuleb sisestada käsk, milles funktsiooni nimetusele eelneb küsimärk.\n\n?sum\n\n\n\n\n\n\n\nMärkus\n\n\n\nR keele kasutamine on väga lihtne: see on lihtsalt funktsioonide rakendamine objektidel. Kogu keerukus seisneb objektide ja funktsioonide tundmises ning nende omavahel kombineerimises."
  },
  {
    "objectID": "kasutus.html#pakid",
    "href": "kasutus.html#pakid",
    "title": "5  Põhikasutus",
    "section": "5.2 Pakid",
    "text": "5.2 Pakid\nR keele paigaldamisel tuleb kaasa palju funktsioone, mis võimaldavad rakendada põhilisi andmetöötluse ja statistilise analüüsi protseduure. Võimaluste lisamiseks on aga paljud R keele kasutajad kirjutanud ise funktsioone ja koondanud need pakkidesse (packages), mis on saadaval ka teistele kasutajatele2. Selleks, et neid pakke kasutada tuleb need esmalt arvutisse paigaldada ja seejärel töölauale laadida.2 Ametlikult tunnustatud R keele pakid on CRAN hoidlas.\n\n# Laadime paki alla ja paigaldame arvutisse.\ninstall.packages('tidyverse')\n# Paki kasutamiseks tuleb see esmalt R töölauale laadida.\nlibrary('tidyverse')\n\nEelnevate käskudega paigaldatud ja laaditud pakk tidyverse sisaldab tegelikult palju teisi pakke, mille funktsioonid lihtsustavad käskude kirjutamist R keeles. Edaspidi kasutame paljusid antud pakis sisalduvaid funktsioone."
  },
  {
    "objectID": "kasutus.html#sisestamine",
    "href": "kasutus.html#sisestamine",
    "title": "5  Põhikasutus",
    "section": "5.3 Sisestamine",
    "text": "5.3 Sisestamine\nMõistagi ei pea andmed R töölauale sisestama üksikute väärtuste kaupa nii nagu eelnevas näites. Lisatavates pakkides olevate funktsioonide abil on R võimeline lugema andmeid peaaegu misiganes vormingus. Siiski on soovitatav kasutada R keelega kaasas olevaid funktsioone, mis tunnevad eelkõige lihttekstina salvestatud andmeid. Üheks selliseks andmevorminguks on CSV (comma separated value). Kui andmed on mingi muu faililaiendiga (nt .xlsx), siis tuleks need esmalt CSVna salvestada. Nagu nimi ütleb, on CSV fail lihtsalt tekstifail, milles väärtused on eraldatud komadega.\nCSV vormingus andmete R töölauale laadimiseks saab kasutada funktsiooni read.csv(), mille argumendiks on andmefaili koht failisüsteemis. Kui andmete esimene rida sisaldab veergude nimetusi, siis tuleb seda argumendiga täpsustada argumendiga header = TRUE.\n\n# Salvestame objekti \"thi\" töölaua kaustas oleva faili \"IA02.csv\"\n# Need on tarbijahinnaindeksi (THI) andmed Statistikaameti tabeli IA02 alusel\nthi <- read.csv('C:/Users/kasutajanimi/Desktop/IA02.csv', header = TRUE)\n\n\n\n\n\n\n\nVaata ette!\n\n\n\nKui salvestada tabel CSV vormingus Microsoft Exceli abil, siis on väärtuse eraldajateks hoopis semikoolonid. Sellisel juhul loeb funktsioon read.csv() andmeid valesti. Lahenduseks on kasutada funktsiooni read.csv2() , mis arvestab väärtuste eraldajatena semikoolonit ja komakohtade eraldajatena komasid.\nCSV aluseks on USA standard, milles arvude komakohad eraldatakse punktiga. Kuna Euroopas eraldatakse arvudes komakohad komaga, siis ei saa komasid kasutada väärtuse eraldamiseks ja Excel eraldab väärtused hoopis semikoolonitega.\n\n\nFaililaiendiga .xlsx nö tabelarvutuse vihikutes ei pruugi andmed olla vormistatud korrektse andmetabelina ja võivad sisaldada tabelist väljaspool olevaid väärtusi. Nt tühjade ridade või veergudega tabelid ilmuvad statistikarakendustesse või R töölauale laadides sageli vigaselt. Selliste vigade kõrvaldamine on enamasti keerulisem võrreldes CSV vormingu kasutamisega. Sellepärast on ka soovitatav kasutada CSV vormingut. Kui on siiski vajadus laadida töölauale .xlsx vormingus olevad andmed, siis selleks saab kasutada funktsiooni read_excel().\n\nthi <- read_excel('C:/Users/kasutajanimi/Desktop/IA02.xlsx')\n\nKui soovime kõik loetavad ja salvestatavad failid koondada ühte kausta, siis võime määrata selle vaikimisi kaustaks. Sel juhul ei pea me faili täielikku asukohta sisestama, vaid piisab faili nimest ja -laiendist.\n\nsetwd('C:/Users/kasutajanimi/Desktop/')\nthi <- read.csv('IA02.csv', header = TRUE)\n\n\n\n\n\n\n\nPea meeles!\n\n\n\nR keel tunnistab failide asukoha kirjes kaustade eraldajatena paremale kaldu olevaid kaldkriipse (/). See vastab MacOS ja Linuxi failisüsteemile. Microsoft Windows kasutab aga vasakule kaldu olevaid kaldkriipse (\\). Seega tuleb Windowsi süsteemis faili asukoha kopeerimisel R keelde kaldkriipsud vastavalt ära muuta."
  },
  {
    "objectID": "kasutus.html#ülevaade-objektist",
    "href": "kasutus.html#ülevaade-objektist",
    "title": "5  Põhikasutus",
    "section": "5.4 Ülevaade objektist",
    "text": "5.4 Ülevaade objektist\nAndmete sisestamisel on hea mõte veenduda, et andmed laaditi töölauale õigesti. Selleks saame kasutada funktsiooni head(), mis kuvab esimesed viis rida.\n\nhead(thi)\n\n  Aasta Kaubagrupp      Kuu Tarbijahinnaindeks\n1  1998      Kokku  Jaanuar             105.58\n2  1998      Kokku Veebruar             106.59\n3  1998      Kokku    Märts             107.43\n4  1998      Kokku   Aprill             107.90\n5  1998      Kokku      Mai             108.28\n6  1998      Kokku    Juuni             108.48\n\n\nKõikidest andmetabeli tunnustest saame ülevaate funktsiooni str() abil. Samuti kuvab funktsioon vaatluste ja tunnuste arvu.\n\nstr(thi)\n\n'data.frame':   3848 obs. of  4 variables:\n $ Aasta             : int  1998 1998 1998 1998 1998 1998 1998 1998 1998 1998 ...\n $ Kaubagrupp        : chr  \"Kokku\" \"Kokku\" \"Kokku\" \"Kokku\" ...\n $ Kuu               : chr  \"Jaanuar\" \"Veebruar\" \"Märts\" \"Aprill\" ...\n $ Tarbijahinnaindeks: num  106 107 107 108 108 ..."
  },
  {
    "objectID": "kasutus.html#valimine",
    "href": "kasutus.html#valimine",
    "title": "5  Põhikasutus",
    "section": "5.5 Valimine",
    "text": "5.5 Valimine\nTabelarvutuses saab vajalike lahtrite valimiseks kasutada kursorit, aga käsureal ei saa valikud vormistada muul viisil kui käsuna. Selleks kõige lihtsam viis on sisestada soovitud väärtuste asukoht objekti järel nurksulgudesse.\n\n# Vektori kolmas väärtus\nFibonacci\n\n[1]  1 NA  2  3 NA\n\nFibonacci[3]\n\n[1] 2\n\n# Andmetabel esimese rea ja neljanda veeru väärtus\nthi[1, 4]\n\n[1] 105.58\n\n# Andmetabeli veeru Tarbijahinnaindeks esimene rida\nthi$Tarbijahinnaindeks[1]\n\n[1] 105.58\n\n# Andmetabel esimese rea ja kõikide veergude väärtused\nthi[1, ]\n\n  Aasta Kaubagrupp     Kuu Tarbijahinnaindeks\n1  1998      Kokku Jaanuar             105.58\n\n\nEnamasti ei soovi me aga vajalikke väärtusi valida mitte nende asukoha alusel, vaid mingi teise tunnuse väärtuse alusel. Sellisel juhul saame esitada valiku tõeväärtusena.\n\n# Kolmas ja neljas väärtus asukoha alusel\nFibonacci[c(3,4)]\n\n[1] 2 3\n\n# Kolmas ja neljas väärtus tõeväärtusena\nFibonacci[c(FALSE,FALSE,TRUE,TRUE,FALSE)]\n\n[1] 2 3\n\n\nTõeväärtused võivad sisaldada ka mitut tingimust.\n\n# Read, mille korral THI oli vähem kui 100 ja kaubagrupp ei olnud side\nthi[thi$Tarbijahinnaindeks < 100 & thi$Kaubagrupp != 'Side', ]\n\n    Aasta                      Kaubagrupp       Kuu Tarbijahinnaindeks\n176  1999 Toit ja mittealkohoolsed joogid    August              99.40\n177  1999 Toit ja mittealkohoolsed joogid September              99.12\n178  1999 Toit ja mittealkohoolsed joogid  Oktoober              99.89\n\n# Aasta ja THI väärtused jaanuarikuus kõikide kaupade arvestuses\nthi[thi$Kuu == 'Jaanuar' & thi$Kaubagrupp == 'Kokku', \n    c('Aasta', 'Tarbijahinnaindeks')]\n\n     Aasta Tarbijahinnaindeks\n1     1998             105.58\n157   1999             110.44\n313   2000             114.01\n469   2001             120.63\n625   2002             125.70\n781   2003             128.94\n937   2004             129.55\n1093  2005             135.03\n1249  2006             141.31\n1405  2007             148.54\n1561  2008             164.88\n1717  2009             171.58\n1873  2010             170.39\n2029  2011             179.34\n2185  2012             187.38\n2341  2013             193.84\n2497  2014             195.95\n2653  2015             193.40\n2809  2016             192.31\n2965  2017             197.58\n3121  2018             204.44\n3277  2019             209.98\n3433  2020             213.40\n3589  2021             213.88\n3745  2022             238.13\n\n\n\n\n\n\n\n\nMärkus\n\n\n\nTõeväärtuse abil saame objektist valida väärtused mingi teise objekti väärtuse alusel. Selle teise objekti väärtused tuleb määrata võrdlusoperaatori abil. Mitme võrdluse korral peame võrdlused eraldama loogikaoperaatoritega.\n\n\nVõrdlusoperaatorite (relational operators) abil saame tekitada tõeväärtuse, mille alusel saame valida soovitud väärtuse mingi muu objekti väärtuse järgi. Võrdlusoperaatoreid on kuus:\n\nvõrdub == (kaks võrdusmärki),\nei võrdu !=,\nsuurem kui >,\nväiksem kui <,\nsuurem või võrdne kui >=,\nväiksem või võrdne kui <=.\n\nLoogikaoperaatorite (logical operators) abil saame ühendada mitu võrdlust. Lihtsamaid loogikaoperaatoreid on kolm (!, &, |) ja neid saab kasutada võrdluste liitmisel tõeväärtuste moodustamiseks nt järgnevalt:\n\nmitte x (!x)\nx ja y (x & y),\nx või y (x | y),\nx ja mitte y (x & !y).\n\n\n5.5.1 Valimine andmetabelist\nEelneva kirjelduse alusel võib väärtuste valimine tunduda keeruline ja tülikas. Seda saab teatud mõttes lihtsustada, kui kasutame varem paigaldatud pakis sisalduvaid funktsioone. Ridade valimiseks on funktsioon filter() ja veergude valimiseks select().\n\n# THI aastal 2020\nfilter(thi, Aasta == 2020 & Kaubagrupp == 'Kokku')\n\n   Aasta Kaubagrupp       Kuu Tarbijahinnaindeks\n1   2020      Kokku   Jaanuar             213.40\n2   2020      Kokku  Veebruar             214.45\n3   2020      Kokku     Märts             212.94\n4   2020      Kokku    Aprill             212.09\n5   2020      Kokku       Mai             210.67\n6   2020      Kokku     Juuni             212.57\n7   2020      Kokku     Juuli             212.57\n8   2020      Kokku    August             213.94\n9   2020      Kokku September             213.32\n10  2020      Kokku  Oktoober             212.24\n11  2020      Kokku  November             212.49\n12  2020      Kokku Detsember             212.50\n\n# THI veerg andmetabeli esimesel viiel real\nselect(head(thi), Tarbijahinnaindeks)\n\n  Tarbijahinnaindeks\n1             105.58\n2             106.59\n3             107.43\n4             107.90\n5             108.28\n6             108.48\n\n\nTehtud valiku salvestamiseks tuleb saadud tulemus lihtsalt sisestusoperaatori abil objekti salvestada.\n\n# Jätame alles vaid read alates aastast 2020\nthi <- filter(thi, Aasta >= 2020)"
  },
  {
    "objectID": "kasutus.html#kokkuvõtted",
    "href": "kasutus.html#kokkuvõtted",
    "title": "5  Põhikasutus",
    "section": "5.6 Kokkuvõtted",
    "text": "5.6 Kokkuvõtted\nVäärtuste kokku võtvaks kirjeldamiseks on väga palju viise ja neile vastavaid funktsioone, aga alustuseks vaatame liitmist, keskmist ja äärmuslikke väärtusi.\n\nFibonacci <- c(0,1,1,2,3,5,8,13,21,34,55,89)\nsum(Fibonacci) # Summa\n\n[1] 232\n\nmean(Fibonacci) # Aritmeetiline keskmine\n\n[1] 19.33333\n\nmedian(Fibonacci) # Mediaan\n\n[1] 6.5\n\nmin(Fibonacci) # Väikseim väärtus\n\n[1] 0\n\nmax(Fibonacci) # Suurim väärtus\n\n[1] 89"
  },
  {
    "objectID": "kasutus.html#torutamine",
    "href": "kasutus.html#torutamine",
    "title": "5  Põhikasutus",
    "section": "5.7 Torutamine",
    "text": "5.7 Torutamine\nKoodi kirjutamise ja eriti hiljem lugemise lihtsustamiseks saab kasutada paljudes programmeerimiskeeltes kasutusel olevat toru (pipe). Torude abil saame ühe funktsiooni tulemuse suunata järgmisesse funktsiooni, mis muudab koodi selgemaks. Kokku on kolm viisi, kuidas funktsioone omavahel ühendada.\n\n# Oletame, et soovime uurida eluaseme THI muutust 2022. aastal\n## Iga iga funktsiooni tulemuse saab järjest objekti salvestada\neluase <- filter(thi, Kaubagrupp == 'Eluase')\neluase <- filter(eluase, Aasta == 2022)\nselect(eluase, Kuu, Tarbijahinnaindeks)\n\n       Kuu Tarbijahinnaindeks\n1  Jaanuar             452.08\n2 Veebruar             439.13\n3    Märts             456.10\n4   Aprill             538.55\n5      Mai             557.34\n6    Juuni             587.38\n7    Juuli             623.25\n8   August             683.04\n\n## Nö pesastamist kasutades tõstame funktsiooni tulemuse järgmise funktsiooni sisse\nselect(filter(filter(thi, Kaubagrupp == 'Eluase'), Aasta == 2022), Kuu, Tarbijahinnaindeks)\n\n       Kuu Tarbijahinnaindeks\n1  Jaanuar             452.08\n2 Veebruar             439.13\n3    Märts             456.10\n4   Aprill             538.55\n5      Mai             557.34\n6    Juuni             587.38\n7    Juuli             623.25\n8   August             683.04\n\n## Torutamise käigus saadame funktsiooni tulemuse järgmisesse funktsiooni\nthi %>% \n  filter(Kaubagrupp == 'Eluase') %>% \n  filter(Aasta == 2022) %>% \n  select(Kuu, Tarbijahinnaindeks)\n\n       Kuu Tarbijahinnaindeks\n1  Jaanuar             452.08\n2 Veebruar             439.13\n3    Märts             456.10\n4   Aprill             538.55\n5      Mai             557.34\n6    Juuni             587.38\n7    Juuli             623.25\n8   August             683.04\n\n\nNagu näha, siis arvestab torule järgnev funktsioon kõige esimese argumendina eelneva funktsiooni tulemust.\nÜhendades nüüd oskused andmetabelist andmeid valida ja kokku võtta saame juba hakata vastama mitmesugustele küsimustele.\n\n# Millal ja mis kaubagrupis oli THI pärast 2020. aastat kõige kõrgem?\nfilter(thi, Aasta >= 2021) %>% \n  filter(Tarbijahinnaindeks == max(Tarbijahinnaindeks))\n\n  Aasta Kaubagrupp    Kuu Tarbijahinnaindeks\n1  2022     Eluase August             683.04\n\n# Mis juhtudel on THI suurenenud 1997. aastaga võrreldes vähemalt 4 korda?\nthi %>% filter(Tarbijahinnaindeks > 400) \n\n   Aasta                       Kaubagrupp       Kuu Tarbijahinnaindeks\n1   2021                           Eluase September             400.24\n2   2021                           Eluase  November             405.27\n3   2021                           Eluase Detsember             484.44\n4   2022                           Eluase   Jaanuar             452.08\n5   2022                           Eluase  Veebruar             439.13\n6   2022                           Eluase     Märts             456.10\n7   2022                           Eluase    Aprill             538.55\n8   2022                           Eluase       Mai             557.34\n9   2022                           Eluase     Juuni             587.38\n10  2022                           Eluase     Juuli             623.25\n11  2022                           Eluase    August             683.04\n12  2022 Söömine väljaspool kodu, majutus     Juuli             426.74\n13  2022 Söömine väljaspool kodu, majutus    August             416.38"
  },
  {
    "objectID": "kasutus.html#salvestamine",
    "href": "kasutus.html#salvestamine",
    "title": "5  Põhikasutus",
    "section": "5.8 Salvestamine",
    "text": "5.8 Salvestamine\nNii nagu andmete R keskkonda lugemise korral on ka nende salvestamiseks soovitatav kasutada CSV vormingut. Selleks on funktsioon write.csv(), aga kui soovime hiljem selle faili avada Excelis, siis tuleb kasutada funktsiooni write.csv2().\n\nwrite.csv(thi, 'andmed/thi.csv')"
  },
  {
    "objectID": "kasutus.html#korratav-analüüs",
    "href": "kasutus.html#korratav-analüüs",
    "title": "5  Põhikasutus",
    "section": "5.9 Korratav analüüs",
    "text": "5.9 Korratav analüüs\nKuna R keele kasutamisel teeme kõik tehted käskude alusel, siis saame kõik käsud salvestada käsulehele (script). Käsulehe kasutamine annab palju võimalusi:\n\nkui soovime sisestatud käsu tühistada, siis saame jooksutada uuesti eelnevad käsud;\nkui avastame hiljem, et tegime vea või soovime midagi tehtud analüüsis muuta, siis piisab käsulehel muudatuse tegemisest ja käsulehe uuesti jooksutamisest;\nsaame hiljem üle vaadata, kuidas täpselt andmetöötluses mingi tulemuseni jõudsime;\nteised saavad veenduda meie tulemuste õigsuses, rakendades meie koosatud käsulehte mingitel andmetel.\n\n\n\n\n\n\n\nMärkus\n\n\n\nR keelt kasutades ei ole võimalik käske tühistada või tagasi võtta (undo). Kõik muudatused andmetes on lõplikud. Eelneva analüüsi sammu juurde tagasi minemiseks peame andmed uuesti R töölauale sisestama.\n\n\nKäsulehel on andmetöötluse tegevused enamasti teatud järjekorras:\n\ntöökausta määramine,\npakkide laadimine,\nandmete sisestamine,\nandmetöötlus,\ntulemuse salvestamine andmefailide, tabelite, jooniste või muul kujul."
  },
  {
    "objectID": "kasutus.html#aruannete-koostamine",
    "href": "kasutus.html#aruannete-koostamine",
    "title": "5  Põhikasutus",
    "section": "5.10 Aruannete koostamine",
    "text": "5.10 Aruannete koostamine\nLisaks käsulehele saab analüüsi vormistada ka terve aruandena. Rakenduses RStudio saab selleks kõik käsud ja sinna juurde kuuluvad selgitused vormistada lihttekstina vastavalt Quarto eeskirjadele. Vastavaid .qmd faililaiendiga lihtteksti faile saab salvestada paljudes erinevates vormingutes, sh PDFi, HTMLi ja Microsoft Wordi dokumentidena. Teksti vormistamiseks tuleb sealjuures kasutada Markdown märgistuskeelt."
  },
  {
    "objectID": "korrastus.html",
    "href": "korrastus.html",
    "title": "6  Korrastus",
    "section": "",
    "text": "Andmete edasiseks analüüsimiseks ette valmistamine kipub olema kogu andmeanalüüsi kõige aeganõudvam osa. Andmeanalüütikud ise on hinnanud, et kogu andmeanalüüsi käigus veedavad nad umbes 80% ajast andmeid korrastades (Kelleher & Tierney, 2018; Wickham, 2014). Sekundaarandmed ei ole peaaegu kunagi täpselt selliselt vormistatnud nagu meie poolt valitud protseduur seda eeldab, mistõttu ilma oskuseta andmeid korrastada ei ole nendega enamasti suurt midagi teha.\nAlljärgnevalt uurime keskmist brutopalka ja palgalõhet Eestis ning nendega seotud näitajaid."
  },
  {
    "objectID": "korrastus.html#veeru-nimetused",
    "href": "korrastus.html#veeru-nimetused",
    "title": "6  Korrastus",
    "section": "6.1 Veeru nimetused",
    "text": "6.1 Veeru nimetused\nKui oleme andmed töölauale laadinud, siis esmalt on mõistlik saada nendest ülevaade. Selleks kasutame juba tuttavaid funktsioone objekti esimeste ridade (head()) ja ülesehituse (str()) kuvamiseks.\n\nhead(palk)\n\n                       Näitaja               Tegevusala   Vaatlusperiood\n1 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad   2002 I kvartal\n2 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad  2002 II kvartal\n3 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad 2002 III kvartal\n4 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad  2002 IV kvartal\n5 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad   2003 I kvartal\n6 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad  2003 II kvartal\n  PA001..KESKMINE.BRUTOPALK..TÖÖJÕUKULU..TÖÖTATUD.TUNNID.JA.TÖÖTAJATE.ARV\n1                                                                     366\n2                                                                     406\n3                                                                     374\n4                                                                     416\n5                                                                     405\n6                                                                     442\n\nstr(palk)\n\n'data.frame':   7680 obs. of  4 variables:\n $ Näitaja                                                                : chr  \"Keskmine brutokuupalk, eurot\" \"Keskmine brutokuupalk, eurot\" \"Keskmine brutokuupalk, eurot\" \"Keskmine brutokuupalk, eurot\" ...\n $ Tegevusala                                                             : chr  \"Kokku – kõik tegevusalad\" \"Kokku – kõik tegevusalad\" \"Kokku – kõik tegevusalad\" \"Kokku – kõik tegevusalad\" ...\n $ Vaatlusperiood                                                         : chr  \"2002 I kvartal\" \"2002 II kvartal\" \"2002 III kvartal\" \"2002 IV kvartal\" ...\n $ PA001..KESKMINE.BRUTOPALK..TÖÖJÕUKULU..TÖÖTATUD.TUNNID.JA.TÖÖTAJATE.ARV: num  366 406 374 416 405 442 411 455 431 474 ...\n\n\nNäeme, et neljandal veerul on pikk ja lohisev nimetus. Andmetabel veeru nimetusi saame kuvada funktsiooniga names() ja selle funktsiooni nimetust kasutades saame ka neljandale veerule uue nime anda.\n\nnames(palk)\n\n[1] \"Näitaja\"                                                                \n[2] \"Tegevusala\"                                                             \n[3] \"Vaatlusperiood\"                                                         \n[4] \"PA001..KESKMINE.BRUTOPALK..TÖÖJÕUKULU..TÖÖTATUD.TUNNID.JA.TÖÖTAJATE.ARV\"\n\nnames(palk)[4] <- 'väärtus'\nnames(palk)\n\n[1] \"Näitaja\"        \"Tegevusala\"     \"Vaatlusperiood\" \"väärtus\""
  },
  {
    "objectID": "korrastus.html#tunnuse-tüüp",
    "href": "korrastus.html#tunnuse-tüüp",
    "title": "6  Korrastus",
    "section": "6.2 Tunnuse tüüp",
    "text": "6.2 Tunnuse tüüp\nAndmetabeli ülesehituse küsimisel kuvatakse ka iga tunnuse tüüp, millest sagedasemad on arvtunnus (num) ja nimitunnus (chr). Täpsemalt loe mõõtmise tasemete ja tunnuse tüüpide kohta peatükist Peatükk 7 või peatükist 7.\n\nstr(palk)\n\n'data.frame':   7680 obs. of  4 variables:\n $ Näitaja       : chr  \"Keskmine brutokuupalk, eurot\" \"Keskmine brutokuupalk, eurot\" \"Keskmine brutokuupalk, eurot\" \"Keskmine brutokuupalk, eurot\" ...\n $ Tegevusala    : chr  \"Kokku – kõik tegevusalad\" \"Kokku – kõik tegevusalad\" \"Kokku – kõik tegevusalad\" \"Kokku – kõik tegevusalad\" ...\n $ Vaatlusperiood: chr  \"2002 I kvartal\" \"2002 II kvartal\" \"2002 III kvartal\" \"2002 IV kvartal\" ...\n $ väärtus       : num  366 406 374 416 405 442 411 455 431 474 ...\n\n\n\n\n\n\n\n\nPea meeles!\n\n\n\nTunnuse tüüp peab olema objektis määratud vastavalt tunnuse mõõtmise tasemele. Arvud peavad olema objektides salvestatud arvtunnusena ning sõnad ja laused nimitunnusena. Vastupidisel juhul käsitlevad fuktsioonid tunnuseid valesti ega võimalda rakendada vajalikke tehteid.\n\n\nTunnuse tüüp on oluline selleks et funktsioonid oskaksid neid õigesti kasutada. Nt kui arve sisaldav veerg on laaditud mingil põhjusel1 objekti nimitunnusena, siis ei ole võimalik sellise tunnusega matemaatilisi tehteid teha. Tunnuste tüübi teisendamiseks saab kasutada funktsioone as.character() ja as.numeric().1 Kui arve sisaldavasse veergu on sattunud mõni sõna, täht, kirjavahemärk vms, siis R loeb selles veerus olevad väärtused enamasti nimitunnusteks.\n\n# Kui arvud on salvestatud nimitunnusena, siis ei saa arvutata keskmist.\npalk$väärtus <- as.character(palk$väärtus)\nhead(palk$väärtus) %>% mean\n\nWarning in mean.default(.): argument is not numeric or logical: returning NA\n\n\n[1] NA\n\n# Kui arvtunnus on õigesti sisestatud, siis saab selle alusel ka arvutada.\npalk$väärtus <- as.numeric(palk$väärtus)\nhead(palk$väärtus) %>% mean\n\n[1] 401.5"
  },
  {
    "objectID": "korrastus.html#kordumatud-väärtused",
    "href": "korrastus.html#kordumatud-väärtused",
    "title": "6  Korrastus",
    "section": "6.3 Kordumatud väärtused",
    "text": "6.3 Kordumatud väärtused\nEelnevalt kuvatud andmetabeli puhul huvitab meid ilmselt, mis võimalikud väärtused on veergudes “Näitaja”, “Tegevusala” ja “Vaatlusperiood”. Kuna tabelis on 7680 rida, siis ei ole otstarbekas kuvada kõiki väärtusi, vaid ainult neid, mis ei kordu. Selleks on käsklus unique().\n\nunique(palk$Näitaja)\n\n[1] \"Keskmine brutokuupalk, eurot\"                          \n[2] \"Keskmine kuutööjõukulu töötaja kohta, eurot\"           \n[3] \"Osalise tööajaga töötajate töötatud tundide osakaal, %\"\n[4] \"Keskmine töötajate arv, taandatud täistööajale\"        \n\nunique(palk$Tegevusala)\n\n [1] \"Kokku – kõik tegevusalad\"                                          \n [2] \"Põllumajandus, metsamajandus ja kalapüük\"                          \n [3] \"Mäetööstus\"                                                        \n [4] \"Töötlev tööstus\"                                                   \n [5] \"Elektrienergia, gaasi, auru ja konditsioneeritud õhuga varustamine\"\n [6] \"Veevarustus; kanalisatsioon; jäätme- ja saastekäitlus\"             \n [7] \"Ehitus\"                                                            \n [8] \"Hulgi- ja jaekaubandus; mootorsõidukite ja mootorrataste remont\"   \n [9] \"Veondus ja laondus\"                                                \n[10] \"Majutus ja toitlustus\"                                             \n[11] \"Info ja side\"                                                      \n[12] \"Finants- ja kindlustustegevus\"                                     \n[13] \"Kinnisvaraalane tegevus\"                                           \n[14] \"Kutse-, teadus- ja tehnikaalane tegevus\"                           \n[15] \"Haldus- ja abitegevused\"                                           \n[16] \"Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus\"      \n[17] \"Haridus\"                                                           \n[18] \"Tervishoid ja sotsiaalhoolekanne\"                                  \n[19] \"Kunst, meelelahutus ja vaba aeg\"                                   \n[20] \"Muud teenindavad tegevused\"                                        \n\nunique(palk$Vaatlusperiood)\n\n [1] \"2002 I kvartal\"   \"2002 II kvartal\"  \"2002 III kvartal\" \"2002 IV kvartal\" \n [5] \"2003 I kvartal\"   \"2003 II kvartal\"  \"2003 III kvartal\" \"2003 IV kvartal\" \n [9] \"2004 I kvartal\"   \"2004 II kvartal\"  \"2004 III kvartal\" \"2004 IV kvartal\" \n[13] \"2005 I kvartal\"   \"2005 II kvartal\"  \"2005 III kvartal\" \"2005 IV kvartal\" \n[17] \"2006 I kvartal\"   \"2006 II kvartal\"  \"2006 III kvartal\" \"2006 IV kvartal\" \n[21] \"2007 I kvartal\"   \"2007 II kvartal\"  \"2007 III kvartal\" \"2007 IV kvartal\" \n[25] \"2008\"             \"2008 I kvartal\"   \"2008 II kvartal\"  \"2008 III kvartal\"\n[29] \"2008 IV kvartal\"  \"2009\"             \"2009 I kvartal\"   \"2009 II kvartal\" \n[33] \"2009 III kvartal\" \"2009 IV kvartal\"  \"2010\"             \"2010 I kvartal\"  \n[37] \"2010 II kvartal\"  \"2010 III kvartal\" \"2010 IV kvartal\"  \"2011\"            \n[41] \"2011 I kvartal\"   \"2011 II kvartal\"  \"2011 III kvartal\" \"2011 IV kvartal\" \n[45] \"2012\"             \"2012 I kvartal\"   \"2012 II kvartal\"  \"2012 III kvartal\"\n[49] \"2012 IV kvartal\"  \"2013\"             \"2013 I kvartal\"   \"2013 II kvartal\" \n[53] \"2013 III kvartal\" \"2013 IV kvartal\"  \"2014\"             \"2014 I kvartal\"  \n[57] \"2014 II kvartal\"  \"2014 III kvartal\" \"2014 IV kvartal\"  \"2015\"            \n[61] \"2015 I kvartal\"   \"2015 II kvartal\"  \"2015 III kvartal\" \"2015 IV kvartal\" \n[65] \"2016\"             \"2016 I kvartal\"   \"2016 II kvartal\"  \"2016 III kvartal\"\n[69] \"2016 IV kvartal\"  \"2017\"             \"2017 I kvartal\"   \"2017 II kvartal\" \n[73] \"2017 III kvartal\" \"2017 IV kvartal\"  \"2018\"             \"2018 I kvartal\"  \n[77] \"2018 II kvartal\"  \"2018 III kvartal\" \"2018 IV kvartal\"  \"2019\"            \n[81] \"2019 I kvartal\"   \"2019 II kvartal\"  \"2019 III kvartal\" \"2019 IV kvartal\" \n[85] \"2020\"             \"2020 I kvartal\"   \"2020 II kvartal\"  \"2020 III kvartal\"\n[89] \"2020 IV kvartal\"  \"2021\"             \"2021 I kvartal\"   \"2021 II kvartal\" \n[93] \"2021 III kvartal\" \"2021 IV kvartal\"  \"2022 I kvartal\"   \"2022 II kvartal\" \n\n\nNäeme, et vaatlusperioodi veerus on läbisegi aastad ja kvartalid. Kui teisendame vastava tunnuse arvtunnuseks, siis tähti sisaldavad väärtused muutuvad puuduvateks väärtusteks.\n\npalk$Vaatlusperiood <- as.numeric(palk$Vaatlusperiood)\n\nWarning: NAs introduced by coercion\n\nunique(palk$Vaatlusperiood)\n\n [1]   NA 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021"
  },
  {
    "objectID": "korrastus.html#puuduvad-väärtused",
    "href": "korrastus.html#puuduvad-väärtused",
    "title": "6  Korrastus",
    "section": "6.4 Puuduvad väärtused",
    "text": "6.4 Puuduvad väärtused\nKui andmetes esineb puuduvaid väärtusi, siis on kolm peamist viisi, kuidas nendega tekkivaid probleeme lahendada.\n\nEnamasti eemaldatakse andmetabelist vaatlused (read), milles esinevad puuduvad väärtused.\nKui on teada, et puuduvad väärtused esinevad juhuslikult, siis on lihtne viis on asendada need veeru keskmise väärtusega.\nÕigem on tuletada puuduvad väärtused aga teiste veergude väärtuste alusel. Tõeste väärtuse prognoosimiseks on palju erievaid võimalusi, sh masinõpe.\nKui puuduvaid väärtusi soovitakse analüüsi kaasata või eraldi uurida, siis saab need eraldi väärtusega määratleda. Puuduvate nimitunnuse väärtustele võib anda mingi nimetuse, arvtunnuse korral võib puuduvad väärtused määratleda eraldi veerus loogilise muutujana.\n\nVaatlusperioodi teisendamise tulemusel on nüüd vastavas veerus puuduvad väärtused nendel juhtudel, kus lisaks aastaarvule oli kirjas ka kvartal. Seega saame tabelisse alles jätta vaid aastaid esindavad väärtused kui eemaldame need read, kus vaatlusperiood puudub. Puuduvate väärtuse määratlemiseks saame kasutada funktsiooni is.na() ja olemasolevate väärtuse valimiseks peame seega lisaman funktsiooni ette loogikaoperaatori !.\n\n# Algne ridade arv\nnrow(palk)\n\n[1] 7680\n\n# Sõelume välja väärtused, kus vaatlusperiood ei ole puudu.\npalk <- filter(palk, !is.na(Vaatlusperiood))\n# Ridade arv pärast puuduvate väärtustega ridade eemaldamist\nnrow(palk)\n\n[1] 1120\n\n\nTeine võimalus on kasutada funktsiooni complete.cases(), mis väljastab andmetabelis puuduvate väärtusteta read määrava tõeväärtuse, võttes puuduvate väärtuse määramisel arvesse kõiki veerge.\n\n# Valime read, kus on ainult täielikud vaatlused\npalk <- palk[complete.cases(palk), ]"
  },
  {
    "objectID": "korrastus.html#väärtuste-asendamine",
    "href": "korrastus.html#väärtuste-asendamine",
    "title": "6  Korrastus",
    "section": "6.5 Väärtuste asendamine",
    "text": "6.5 Väärtuste asendamine\nMõnikord esineb andmetes väärtusi, mis ei ole teoreetiliselt võimalikud. Sellisel juhul on kolm viisi, kuidas sobimatud väärtused kõrvaldada.\n\nArvtunnuse korral saab ebasobiva väärtuse asendada vastavalt vähima või suurima teoreetiliselt võimaliku väärtusega.\nVõimalusel saab eemaldada kogu ebasobivaid väärtuseid sisaldava tunnuse.\nEbasobivaid väärtusi saab kohelda nii nagu puuduvaid väärtuseid.\n\nKui oletame, et meie andmetabelis oleval ajavahemikul oli alampalk kõige vähem 278 eurot kuus, siis ei tohiks olla väärtuseid, kus keskmine brutokuupalk on sellest madalam.\n\nbruto <- filter(palk, Näitaja == 'Keskmine brutokuupalk, eurot' &\n                  Tegevusala == 'Kokku – kõik tegevusalad')\n# Määrame väärtuseks 278 juhtudel, kus väärtus on vähem kui 278\nbruto$väärtus[bruto$väärtus < 278] <- 278"
  },
  {
    "objectID": "korrastus.html#väärtuste-teisendamine",
    "href": "korrastus.html#väärtuste-teisendamine",
    "title": "6  Korrastus",
    "section": "6.6 Väärtuste teisendamine",
    "text": "6.6 Väärtuste teisendamine\nVäärtuste teisendamise käigus antakse tunnusele uued väärtused lähtudes algsetest väärtustes. Selleks on mitu põhjust ja viisi.\n\nKui tunnusel on palju äärmuslikul suuri või väikseid väärtusi, siis selline tunnus ei sobi paljude parameetriliste meetodite rakendamiseks. Sellisel juhul saab kasutada erinevaid matemaatilisi teisendusi, mis muudab väärtuste jaotuse sümmeetrilisemaks2.\nTeatud meetodid eeldavad, et andmed on mõõdetud samal skaalal ehk omavad sarnaseid väärtusi. Sellisel juhul saame väärtused standardiseerida.\nKui tunnusel on rohkem kordumatuid väärtusi kui soovime, siis saame väärtused intervallida.\n\n2 Kui tunnusel on palju äärmuslikult suuri jaotusi, siis naturaallogaritm väärtustest annab tulemuseks sümmeetrilise jaotuse.Kui soovime keskmise brutokuupalga esitada 500 euro laiuste intervallidena, siis saame intervallimiseks kasutada funktsiooni cut().\n\nbruto$intervallid <- cut(bruto$väärtus, \n                         breaks = c(500,1000,1500,Inf), \n                         labels = c(\">500...1000\",\">1000...1500\",\">1500\"))\nbruto %>% select(Vaatlusperiood, väärtus, intervallid)\n\n   Vaatlusperiood väärtus  intervallid\n1            2008     825  >500...1000\n2            2009     784  >500...1000\n3            2010     792  >500...1000\n4            2011     839  >500...1000\n5            2012     887  >500...1000\n6            2013     949  >500...1000\n7            2014    1005 >1000...1500\n8            2015    1065 >1000...1500\n9            2016    1146 >1000...1500\n10           2017    1221 >1000...1500\n11           2018    1310 >1000...1500\n12           2019    1407 >1000...1500\n13           2020    1448 >1000...1500\n14           2021    1548        >1500"
  },
  {
    "objectID": "korrastus.html#korrasandmed",
    "href": "korrastus.html#korrasandmed",
    "title": "6  Korrastus",
    "section": "6.7 Korrasandmed",
    "text": "6.7 Korrasandmed\nKorrasandmed (tidy data (Wickham, 2014)) on andmetabeli vormistamise viis, mille korral\n\niga tunnus on eraldi veerus,\niga vaatlus on eraldi real,\niga vaatluste aluseks olev üksus on omaette tabelis3.\n\n\n3 Nt tellimuste tabelis ei peaks olema kõiki tellija tunnuseid, vaid tellimused ja tellijad tuleks hoida eraldi tabeltes ning ainult vajaduse korral need tellija koodi alusel kokku viia.\n6.7.1 Andmetabeli laiendamine\nMeie andmed brutotöötasu kohta vastavad tingimusele, et iga vaatlus (mõõtmine) on eraldi real. Kui lähtume aga sellest, et iga näitaja on omaette tunnus, siis peaks iga näitaja väärtused olema eraldi veerus, et meie andmed korrasandmete tingimusele vastaksid.\n\nhead(palk)\n\n                       Näitaja               Tegevusala Vaatlusperiood väärtus\n1 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2008     825\n2 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2009     784\n3 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2010     792\n4 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2011     839\n5 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2012     887\n6 Keskmine brutokuupalk, eurot Kokku – kõik tegevusalad           2013     949\n\n\nSellist andmetabelit, milles iga rida sisaldab ainult ühte väärtust, võiks nimetada täielikult kitsaks. Selline kitsas andmetabel ei pruugi olla kõige sobivam viis selles olevate andmete analüüsimiseks. Nt on praegu keeruline võrrelda kahe näitaja väärtusi, sest need väärtused on kõik ühes veerus. Kui soovime tõsta iga näitaja eraldi veergu ehk antud juhul andmetabelit laiendada, siis saame selleks kasutada funktsiooni pivot_wider().\n\npalk <- pivot_wider(palk, names_from = 'Näitaja', values_from = 'väärtus')\nhead(palk)\n\n# A tibble: 6 × 6\n  Tegevusala               Vaatlusperiood Keskmine bru…¹ Keskm…² Osali…³ Keskm…⁴\n  <chr>                             <dbl>          <dbl>   <dbl>   <dbl>   <dbl>\n1 Kokku – kõik tegevusalad           2008            825    1113     6.4  543432\n2 Kokku – kõik tegevusalad           2009            784    1067     8.2  488166\n3 Kokku – kõik tegevusalad           2010            792    1074     8.1  458523\n4 Kokku – kõik tegevusalad           2011            839    1137     7.3  469123\n5 Kokku – kõik tegevusalad           2012            887    1203     7.2  489054\n6 Kokku – kõik tegevusalad           2013            949    1284     7    487591\n# … with abbreviated variable names ¹​`Keskmine brutokuupalk, eurot`,\n#   ²​`Keskmine kuutööjõukulu töötaja kohta, eurot`,\n#   ³​`Osalise tööajaga töötajate töötatud tundide osakaal, %`,\n#   ⁴​`Keskmine töötajate arv, taandatud täistööajale`\n\n# Kuna veeru nimed sisaldavad nüüd tühikuid, siis nimetame need ümber.\nnames(palk) <- c('tegevusala', 'aasta', \n                 'kesk.palk', 'kesk.kulu', 'osatööaeg', 'töötajad')\nhead(palk)\n\n# A tibble: 6 × 6\n  tegevusala               aasta kesk.palk kesk.kulu osatööaeg töötajad\n  <chr>                    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>\n1 Kokku – kõik tegevusalad  2008       825      1113       6.4   543432\n2 Kokku – kõik tegevusalad  2009       784      1067       8.2   488166\n3 Kokku – kõik tegevusalad  2010       792      1074       8.1   458523\n4 Kokku – kõik tegevusalad  2011       839      1137       7.3   469123\n5 Kokku – kõik tegevusalad  2012       887      1203       7.2   489054\n6 Kokku – kõik tegevusalad  2013       949      1284       7     487591\n\n\nSellisel kujul tabeliga on meil võimalik erinevatel küsimustele vastamiseks arvutusi teha.\n\n# Mitu eurot kulus keskmiselt tööjõumaksudeks?\npalk$kesk.maksud <- palk$kesk.kulu - palk$kesk.palk\nhead(palk)\n\n# A tibble: 6 × 7\n  tegevusala               aasta kesk.palk kesk.kulu osatööaeg töötajad kesk.m…¹\n  <chr>                    <dbl>     <dbl>     <dbl>     <dbl>    <dbl>    <dbl>\n1 Kokku – kõik tegevusalad  2008       825      1113       6.4   543432      288\n2 Kokku – kõik tegevusalad  2009       784      1067       8.2   488166      283\n3 Kokku – kõik tegevusalad  2010       792      1074       8.1   458523      282\n4 Kokku – kõik tegevusalad  2011       839      1137       7.3   469123      298\n5 Kokku – kõik tegevusalad  2012       887      1203       7.2   489054      316\n6 Kokku – kõik tegevusalad  2013       949      1284       7     487591      335\n# … with abbreviated variable name ¹​kesk.maksud\n\n\nkuidas lisada andmetabelisse tunnuseid või neid muuta funktsiooni mutate() abil.\n\n# Mitu eurot maksti töötajatele töötasu kokku?\npalk <- mutate(palk, kogu.palk = kesk.palk * töötajad)\nhead(palk)\n\n# A tibble: 6 × 8\n  tegevusala               aasta kesk.…¹ kesk.…² osatö…³ tööta…⁴ kesk.…⁵ kogu.…⁶\n  <chr>                    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 Kokku – kõik tegevusalad  2008     825    1113     6.4  543432     288  4.48e8\n2 Kokku – kõik tegevusalad  2009     784    1067     8.2  488166     283  3.83e8\n3 Kokku – kõik tegevusalad  2010     792    1074     8.1  458523     282  3.63e8\n4 Kokku – kõik tegevusalad  2011     839    1137     7.3  469123     298  3.94e8\n5 Kokku – kõik tegevusalad  2012     887    1203     7.2  489054     316  4.34e8\n6 Kokku – kõik tegevusalad  2013     949    1284     7    487591     335  4.63e8\n# … with abbreviated variable names ¹​kesk.palk, ²​kesk.kulu, ³​osatööaeg,\n#   ⁴​töötajad, ⁵​kesk.maksud, ⁶​kogu.palk\n\n\n\n\n\n\n\n\nPea meeles!\n\n\n\nEnamus funktsioone eeldavad, et funktsiooni argumentidena esitab kasutaja tunnuse väärtusi sisaldava veeru. Seetõttu tuleks andmetabel vormistada selliselt, et iga tunnuse väärtused on eraldi veerus.\n\n\n\n\n6.7.2 Andmetabeli kitsendamine\nSageli on meil aga vastupidine olukord, kus ühe tunnuse väärtused on jagatud mitmesse veergu. See oli kunagi sagedane nt Statistikaameti tabelite korral, milles vaikimisi esitati iga aasta väärtused eraldi veerus. Sellisel kujul andmed sobivad küll aegridade joonistamiseks tabelarvutuse rakendustes, aga mitte R keele funktsioonide kasutamiseks.\nAll on esitatud Statistikaameti tabel PA5335 palgalõhe kohta, milles iga aasta väärtused on eraldi veerus.\n\nhead(lõhe)\n\n# A tibble: 6 × 13\n  Tegev…¹ Näitaja `2011` `2012` `2013` `2014` `2015` `2016` `2017` `2018` `2019`\n  <chr>   <chr>    <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n1 Tegevu… Meestö…    5.7    5.7    6.1    6.4    7      7.6    7.9    7.9    8.6\n2 Tegevu… Naistö…    4.4    4.3    4.6    4.9    5.4    6      6.3    6.5    7.1\n3 Tegevu… Palgal…   22.9   24.6   24.8   23.5   22.2   20.9   20.9   18     17.1\n4 Põllum… Meestö…    4.2    4.2    4.9    5.2    6.3    6.8    6.7    6.5    6.8\n5 Põllum… Naistö…    3.6    3.9    4.3    4.5    5      5.5    5.8    5.3    5.7\n6 Põllum… Palgal…   14.7    7     12.7   14.5   20.1   19.2   13.2   18.5   15.8\n# … with 2 more variables: `2020` <dbl>, `2021` <dbl>, and abbreviated variable\n#   name ¹​Tegevusala..EMTAK.2008.\n# ℹ Use `colnames()` to see all variable names\n\n\nKoondamaks kõikide aastate väärtused ühte veergu, tuleks seda andmetabelit kitsendada ehk pikendada. Seda saab teha nt funktsiooniga pivot_longer().\n\n# Viime kõik aastad ühte veergu\nlõhe <- pivot_longer(lõhe, cols = as.character(2011:2021), \n                     names_to = 'aasta', values_to = 'väärtus')\nhead(lõhe)\n\n# A tibble: 6 × 4\n  Tegevusala..EMTAK.2008. Näitaja                                  aasta väärtus\n  <chr>                   <chr>                                    <chr>   <dbl>\n1 Tegevusalad kokku       Meestöötajate keskmine brutotunnipalk, … 2011      5.7\n2 Tegevusalad kokku       Meestöötajate keskmine brutotunnipalk, … 2012      5.7\n3 Tegevusalad kokku       Meestöötajate keskmine brutotunnipalk, … 2013      6.1\n4 Tegevusalad kokku       Meestöötajate keskmine brutotunnipalk, … 2014      6.4\n5 Tegevusalad kokku       Meestöötajate keskmine brutotunnipalk, … 2015      7  \n6 Tegevusalad kokku       Meestöötajate keskmine brutotunnipalk, … 2016      7.6\n\n# Viime iga näitaja eraldi veergu\nlõhe <- pivot_wider(lõhe, names_from = 'Näitaja', values_from = 'väärtus')\nhead(lõhe)\n\n# A tibble: 6 × 5\n  Tegevusala..EMTAK.2008. aasta Meestöötajate keskmine brutotu…¹ Naist…² Palga…³\n  <chr>                   <chr>                            <dbl>   <dbl>   <dbl>\n1 Tegevusalad kokku       2011                               5.7     4.4    22.9\n2 Tegevusalad kokku       2012                               5.7     4.3    24.6\n3 Tegevusalad kokku       2013                               6.1     4.6    24.8\n4 Tegevusalad kokku       2014                               6.4     4.9    23.5\n5 Tegevusalad kokku       2015                               7       5.4    22.2\n6 Tegevusalad kokku       2016                               7.6     6      20.9\n# … with abbreviated variable names\n#   ¹​`Meestöötajate keskmine brutotunnipalk, eurot`,\n#   ²​`Naistöötajate keskmine brutotunnipalk, eurot`, ³​`Palgalõhe, %`\n\n# Parendame veergude nimetusi\nnames(lõhe) <- c('tegevusala', 'aasta', 'mehed.palk', 'naised.palk', 'lõhe.osa')\nhead(lõhe)\n\n# A tibble: 6 × 5\n  tegevusala        aasta mehed.palk naised.palk lõhe.osa\n  <chr>             <chr>      <dbl>       <dbl>    <dbl>\n1 Tegevusalad kokku 2011         5.7         4.4     22.9\n2 Tegevusalad kokku 2012         5.7         4.3     24.6\n3 Tegevusalad kokku 2013         6.1         4.6     24.8\n4 Tegevusalad kokku 2014         6.4         4.9     23.5\n5 Tegevusalad kokku 2015         7           5.4     22.2\n6 Tegevusalad kokku 2016         7.6         6       20.9\n\n\n\n\n\n\n\n\nPea meeles!\n\n\n\nKorduvate mõõtmiste korral tuleks mõõtmise aeg kajastada eraldi veerus ja mitte jaotada sama tunnuse mõõtmisi erinevate veergude vahel."
  },
  {
    "objectID": "korrastus.html#agregeerimine",
    "href": "korrastus.html#agregeerimine",
    "title": "6  Korrastus",
    "section": "6.8 Agregeerimine",
    "text": "6.8 Agregeerimine\nSageli on vaja andmetabelis olevad väärtused edasiseks analüüsiks kuidagi koondada. Väärtuste kokku võtmine mingite rühmade kaupa ja mingi tehte alusel on agregeerimine. Nii on agregeerimisel vaja määrata\n\nväärtusi sisaldav kokku võetav tunnus,\nväärtusi rühmitav tunnus,\nkokkuvõtte aluseks olev tehe (funktsioon).\n\nAndmetabeli agregeerimiseks on R keeles funktsioon aggregate(), mille argumentideks tuleb sisestada need kolm tegurit.\n\nhead(palk)\n\n# A tibble: 6 × 8\n  tegevusala               aasta kesk.…¹ kesk.…² osatö…³ tööta…⁴ kesk.…⁵ kogu.…⁶\n  <chr>                    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 Kokku – kõik tegevusalad  2008     825    1113     6.4  543432     288  4.48e8\n2 Kokku – kõik tegevusalad  2009     784    1067     8.2  488166     283  3.83e8\n3 Kokku – kõik tegevusalad  2010     792    1074     8.1  458523     282  3.63e8\n4 Kokku – kõik tegevusalad  2011     839    1137     7.3  469123     298  3.94e8\n5 Kokku – kõik tegevusalad  2012     887    1203     7.2  489054     316  4.34e8\n6 Kokku – kõik tegevusalad  2013     949    1284     7    487591     335  4.63e8\n# … with abbreviated variable names ¹​kesk.palk, ²​kesk.kulu, ³​osatööaeg,\n#   ⁴​töötajad, ⁵​kesk.maksud, ⁶​kogu.palk\n\n# Mis oli igal tegevusalal perioodi keskmise brutotöötasu keskmine?\naggregate(kesk.palk ~ tegevusala, palk, mean)\n\n                                                           tegevusala kesk.palk\n1        Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus 1332.3571\n2                                                              Ehitus 1076.3571\n3  Elektrienergia, gaasi, auru ja konditsioneeritud õhuga varustamine 1535.0714\n4                                       Finants- ja kindlustustegevus 1822.4286\n5                                             Haldus- ja abitegevused  959.2143\n6                                                             Haridus  974.4286\n7     Hulgi- ja jaekaubandus; mootorsõidukite ja mootorrataste remont  988.1429\n8                                                        Info ja side 1820.7143\n9                                             Kinnisvaraalane tegevus  826.7857\n10                                           Kokku – kõik tegevusalad 1087.5714\n11                                    Kunst, meelelahutus ja vaba aeg  864.0000\n12                            Kutse-, teadus- ja tehnikaalane tegevus 1286.5714\n13                                                         Mäetööstus 1330.0000\n14                                              Majutus ja toitlustus  688.2857\n15                                         Muud teenindavad tegevused  710.8571\n16                           Põllumajandus, metsamajandus ja kalapüük  932.2857\n17                                   Tervishoid ja sotsiaalhoolekanne 1132.3571\n18                                                    Töötlev tööstus 1035.2143\n19              Veevarustus; kanalisatsioon; jäätme- ja saastekäitlus 1092.7857\n20                                                 Veondus ja laondus 1065.8571\n\n\nTeine võimalus agregeerimiseks on kasutada pakis tidyverse sisalduvaid funktsioone group_by() esmalt rühmitamiseks ja summarise() seejärel kokku võtmiseks.\n\nhead(lõhe)\n\n# A tibble: 6 × 5\n  tegevusala        aasta mehed.palk naised.palk lõhe.osa\n  <chr>             <chr>      <dbl>       <dbl>    <dbl>\n1 Tegevusalad kokku 2011         5.7         4.4     22.9\n2 Tegevusalad kokku 2012         5.7         4.3     24.6\n3 Tegevusalad kokku 2013         6.1         4.6     24.8\n4 Tegevusalad kokku 2014         6.4         4.9     23.5\n5 Tegevusalad kokku 2015         7           5.4     22.2\n6 Tegevusalad kokku 2016         7.6         6       20.9\n\n# Mis oli igal tegevusalal kõige suurem palgalõhe?\nlõhe %>% \n  group_by(tegevusala) %>% # Rühmitame andmetabeli tegevusala alusel\n  summarise(max(lõhe.osa)) # Leiame suurima palgalõhe\n\n# A tibble: 20 × 2\n   tegevusala                                                         max(lõhe…¹\n   <chr>                                                                   <dbl>\n 1 Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus             12.1\n 2 Ehitus                                                                   22  \n 3 Elektrienergia, gaasi, auru ja konditsioneeritud õhuga varustamine       18.4\n 4 Finants- ja kindlustustegevus                                            43.3\n 5 Haldus- ja abitegevused                                                  20.4\n 6 Haridus                                                                  26.4\n 7 Hulgi- ja jaekaubandus; mootorsõidukite ja mootorrataste remont          33.8\n 8 Info ja side                                                             30.1\n 9 Kinnisvaraalane tegevus                                                  27.3\n10 Kunst, meelelahutus ja vaba aeg                                          28.1\n11 Kutse-, teadus- ja tehnikaalane tegevus                                  24.7\n12 Mäetööstus                                                               36.4\n13 Majutus ja toitlustus                                                    20.9\n14 Muud teenindavad tegevused                                               27.4\n15 Põllumajandus, metsamajandus ja kalapüük                                 20.1\n16 Tegevusalad kokku                                                        24.8\n17 Tervishoid ja sotsiaalhoolekanne                                         29.7\n18 Töötlev tööstus                                                          31.5\n19 Veevarustus; kanalisatsioon, jäätme- ja saastekäitlus                    13.6\n20 Veondus ja laondus                                                       10.3\n# … with abbreviated variable name ¹​`max(lõhe.osa)`\n\n\nVäga sageli on kasu ka funktsioonist table(), mille abil saab väärtuseid loendada.\n\nhead(lõhe)\n\n# A tibble: 6 × 5\n  tegevusala        aasta mehed.palk naised.palk lõhe.osa\n  <chr>             <chr>      <dbl>       <dbl>    <dbl>\n1 Tegevusalad kokku 2011         5.7         4.4     22.9\n2 Tegevusalad kokku 2012         5.7         4.3     24.6\n3 Tegevusalad kokku 2013         6.1         4.6     24.8\n4 Tegevusalad kokku 2014         6.4         4.9     23.5\n5 Tegevusalad kokku 2015         7           5.4     22.2\n6 Tegevusalad kokku 2016         7.6         6       20.9\n\n# Mitu korda iga tegevusala tabelis esineb?\ntable(lõhe$tegevusala)\n\n\n      Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus \n                                                                11 \n                                                            Ehitus \n                                                                11 \nElektrienergia, gaasi, auru ja konditsioneeritud õhuga varustamine \n                                                                11 \n                                     Finants- ja kindlustustegevus \n                                                                11 \n                                           Haldus- ja abitegevused \n                                                                11 \n                                                           Haridus \n                                                                11 \n   Hulgi- ja jaekaubandus; mootorsõidukite ja mootorrataste remont \n                                                                11 \n                                                      Info ja side \n                                                                11 \n                                           Kinnisvaraalane tegevus \n                                                                11 \n                                   Kunst, meelelahutus ja vaba aeg \n                                                                11 \n                           Kutse-, teadus- ja tehnikaalane tegevus \n                                                                11 \n                                                        Mäetööstus \n                                                                11 \n                                             Majutus ja toitlustus \n                                                                11 \n                                        Muud teenindavad tegevused \n                                                                11 \n                          Põllumajandus, metsamajandus ja kalapüük \n                                                                11 \n                                                 Tegevusalad kokku \n                                                                11 \n                                  Tervishoid ja sotsiaalhoolekanne \n                                                                11 \n                                                   Töötlev tööstus \n                                                                11 \n             Veevarustus; kanalisatsioon, jäätme- ja saastekäitlus \n                                                                11 \n                                                Veondus ja laondus \n                                                                11 \n\n# Mitmel aastal oli igal tegevusalal palgalõhe rohkem kui 10%?\ntable(lõhe$tegevusala, lõhe$lõhe.osa > 10)\n\n                                                                    \n                                                                     FALSE TRUE\n  Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus           8    3\n  Ehitus                                                                 1   10\n  Elektrienergia, gaasi, auru ja konditsioneeritud õhuga varustamine     1   10\n  Finants- ja kindlustustegevus                                          0   11\n  Haldus- ja abitegevused                                                2    9\n  Haridus                                                                0   11\n  Hulgi- ja jaekaubandus; mootorsõidukite ja mootorrataste remont        0   11\n  Info ja side                                                           0   11\n  Kinnisvaraalane tegevus                                                0   11\n  Kunst, meelelahutus ja vaba aeg                                        1   10\n  Kutse-, teadus- ja tehnikaalane tegevus                                2    9\n  Mäetööstus                                                             0   11\n  Majutus ja toitlustus                                                  1   10\n  Muud teenindavad tegevused                                             2    9\n  Põllumajandus, metsamajandus ja kalapüük                               3    8\n  Tegevusalad kokku                                                      0   11\n  Tervishoid ja sotsiaalhoolekanne                                       0   11\n  Töötlev tööstus                                                        0   11\n  Veevarustus; kanalisatsioon, jäätme- ja saastekäitlus                  8    3\n  Veondus ja laondus                                                    10    1\n\n\nÜleval olevast tabelist näeme muuhulgas, et\n\nveonduses ja laonduses oli palgalõhe ainult ühel aastal üle 10%, samas kui\nhariduses oli kõikidel aastatel palgalõhe üle 10%."
  },
  {
    "objectID": "korrastus.html#tabelite-ühendamine",
    "href": "korrastus.html#tabelite-ühendamine",
    "title": "6  Korrastus",
    "section": "6.9 Tabelite ühendamine",
    "text": "6.9 Tabelite ühendamine\nMõnikord on sama vaatluse andmed erinevates tabelites. Sellisel juhul saame kaks tabelit omavahel ühendada ühe või mitme tunnuse väärtuste alusel.\nKäesolevates näidetes võiksime ühendada brutopalga ja palgalõhe andmetabelid palk ja lõhe. Mõlemas tabelis esindab iga rida ühte tegevusala ühel aastal, mistõttu saab nende kahe tunnuse alusel read kokku viia.\nSelleks peavad sama tähendusega väärtused olema samamoodi nimetatud. Saame seda kontrollida funktsiooniga setdiff(), mis näitab, millised esimeses argumendis olevad kordumatud väärtused on puudu teisest argumendist.\n\n# Milliseid palgalõhe tabelis olevaid tegevusalasid ei ole brutopalga tabelis?\nsetdiff(lõhe$tegevusala, palk$tegevusala)\n\n[1] \"Tegevusalad kokku\"                                    \n[2] \"Veevarustus; kanalisatsioon, jäätme- ja saastekäitlus\"\n\n# Milliseid brutopalga tabelis olevaid tegevusalasid ei ole palgalõhe tabelis?\nsetdiff(palk$tegevusala, lõhe$tegevusala)\n\n[1] \"Kokku – kõik tegevusalad\"                             \n[2] \"Veevarustus; kanalisatsioon; jäätme- ja saastekäitlus\"\n\n\nNäeme, et kahes tabelis on samad nähtused kas erinevate nimetustega või siis on semikooloni asemel kastatud koma. Muudame väärtuste nimetused nii, et sama nähtus oleks täpselt samamoodi sõnastatud.\n\n# Määrame palgalõhe tabelis tegevusalale semikooloni koma asemele\nlõhe$tegevusala[lõhe$tegevusala == 'Veevarustus; kanalisatsioon, jäätme- ja saastekäitlus'] <- 'Veevarustus; kanalisatsioon; jäätme- ja saastekäitlus'\n# Määrame brutopalga tabelis veerus tegevusala \"Tegevusalad kokku\" seal, \n# kus on pregu on \"Kokku - kõik tegevusalad\"\npalk$tegevusala[palk$tegevusala == 'Kokku – kõik tegevusalad'] <- 'Tegevusalad kokku'\n\nKaks tabelit saame ühendada funktsiooniga merge().\n\npalkLõhe <- merge(\n  palk, lõhe, \n  by.x = c('tegevusala', 'aasta'), # Brutopalga tabeli ühendatavad tunnused\n  by.y = c('tegevusala', 'aasta'), # Palgalõhe tabeli ühendatavad tunnused\n  all.x = TRUE, # Jätame alles kõik brutopalga tabeli read\n  all.y = TRUE) # Jätame alles kõik palgalõhe tabeli read\n# Meie andmetabelites on ühendatavad tunnused sama nimega, \n# seega võime mõned argumendid ära jätta või neid lihtsustada\npalkLõhe <- merge(palk, lõhe, all = TRUE)\nhead(palkLõhe)\n\n                                                    tegevusala aasta kesk.palk\n1 Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus  2008      1061\n2 Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus  2009       981\n3 Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus  2010       955\n4 Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus  2011       988\n5 Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus  2012      1037\n6 Avalik haldus ja riigikaitse; kohustuslik sotsiaalkindlustus  2013      1130\n  kesk.kulu osatööaeg töötajad kesk.maksud kogu.palk mehed.palk naised.palk\n1      1434       2.6    34776         373  36897336         NA          NA\n2      1337       3.6    34693         356  34033833         NA          NA\n3      1297       3.4    34935         342  33362925         NA          NA\n4      1341       3.2    35034         353  34613592        6.2         5.5\n5      1408       2.9    35138         371  36438106        5.8         5.3\n6      1526       2.6    34552         396  39043760        6.4         5.7\n  lõhe.osa\n1       NA\n2       NA\n3       NA\n4     10.2\n5      9.8\n6     12.1\n\n\nÜhendatud tabeli alusel saame varem kahes eraldi tabelis olnud tunnuseid nüüd omavahel võrrelda. Näiteks saame uurida, kuidas on palgalõhe seotud osatööaja, keskmise palga ja tegevusalaga ning kuidas see seos aastate jooksul muutunud on.\n\nggplot(palkLõhe) + \n  aes(x = lõhe.osa, y = osatööaeg, size = kesk.palk, color = aasta) + \n  geom_point(alpha = .5) +\n  facet_wrap(~tegevusala, ncol = 3) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nKelleher, J. D., & Tierney, B. (2018). Data science. The MIT Press.\n\n\nWickham, H. (2014). Tidy Data. Journal of Statistical Software, 059(i10). https://ideas.repec.org/a/jss/jstsof/v059i10.html"
  },
  {
    "objectID": "tunnused.html",
    "href": "tunnused.html",
    "title": "7  Tunnuste liigid",
    "section": "",
    "text": "Kahte nähtust saab võrrelda mitmel viisl: kas üks on teisest suurem, kumb on teisest suurem, kui palju on üks teistest suurem. Vastavalt sellele saab nähtusi ka mitmel viisil mõõta. Kõige üldisemalt saame eristada nelja mõõtmistaset1, millele vastavad mõõtmisskaalad alates kõige üldistavamast:1 Eesti keeles on mõõtmistasemete olemust ilmekalt selgitanud Sauga (2017).\n\nbinaarskaala (kuni kaks järjestamata väärtust),\nnimiskaala (järjestamata väärtused),\njärjestusskala (järjestatud väärtused),\narvskaala (väärtused, mille erinevusi saame arvutada).\n\nSealjuures tuleb nähtuste mõõtmisel võtta arvesse, et mida üldistatum on mõõtmistase, seda vähem teavet see sisaldab. Seega saame väärtusi teisendada alati üldisemale mõõtmistasemele, aga mitte vähem üldisele.\nMõõtmistasemete eristamiseks on veel mitu viisi.\n\nKvantitatiivse ja kvalitatiivse mõõtmistaseme eristamine seisneb selles, kas mõõtmise tulemuseks on arvud. Kvantitatiivse mõõtmise korral on väärtused esitatavad tähenduslikult arvudena, kvalitatiivne mõõtmistase hõlmab enamasti aga arve mitte sisaldavaid väärtusi ehk sõnu või lauseid.\nDiskreetne ja pidev mõõtmine kehtivad ainult arvskaalal ja nende erisus seisneb intervallide vahedes. Diskreetsel mõõtmisel on tulemuseks ainult täisarvud, mis saadakse enamasti millegi loendamisel. Pideval mõõtmisel võib tulemuseks olla mistahes arv.\nIntervall- ja suhteskaala on mõlemad arvskaala alaliigid, mille erinevus tuleneb väärtuse 0 tähendusest. Intervallskaalal ei ole väärtusel 0 sisulist tähendust. Suhteskaalal tähendab väärtus 0 aga mõõdetava nähtuse puudumist. Seetõttu võib intervallskaalal mõõdetud väärtusi ainult liita ja lahutada, suhteskaalal aga ka korrutada ja jagada (Stevens, 1946)2.\n\n2 Nt 20 eurot on kaks korda rohkem kui 10 eurot, aga 20 kraadi ei ole kaks korda soojem kui 10 kraadi.Eelnevalt selgitatud mõõtmise tasemed saab kokku võtta alloleva joonisega\n\n\n\n\ngraph\n    subgraph Kvalitatiivne\n        Binaarskaala-->Nimiskaala\n        Nimiskaala-->Järjestusskaala\n    end\n    subgraph Kvantitatiivne\n        Järjestusskaala-->Arvskaala\n    end\n        subgraph \"Väärtuse 0 tähendus\"\n            Arvskaala-->|0 ei ole puudumine|Intervallskaala\n            Arvskaala-->|0 on puudumne|Suhteskaala\n        end\n        subgraph \"Intervallide vahed\"\n            Arvskaala-->|Täisarvud|Diskreetne\n            Arvskaala-->|Mistahes arvud|Pidev\n        end"
  },
  {
    "objectID": "tunnused.html#tunnuste-liigid",
    "href": "tunnused.html#tunnuste-liigid",
    "title": "7  Tunnuste liigid",
    "section": "7.2 Tunnuste liigid",
    "text": "7.2 Tunnuste liigid\nStatistikarakendused ja R keel määravad andmete sisestamisel igale andmetabeli veerule tunnuse liigi. See tunnuse liik on otseselt seotud mõõtmistasemega. Kasutades andmetöötluseks tarkvara, mis ei ole tabelarvutus, on oluline eristada käesoleva peatüki alguses esitatud nelja üldist mõõtmistaset. Diskreetsete ja pideva skaala eristamine ei ole üldjuhul tähtis ja intervall- ja suhteskaalat tarkvara ei erista.\nKui salvestada R töölaua objekti kas või üksik väärtus, siis määratakse selle liigiks kas numeric või character, vastavalt sellele, kas tegemist on arvuga või mitte. Kui väärtus pärineb tõeväärtusest (Peatükk 5), siis määratakse selle liigiks logical.\n\n\n\nMõõtmistase\nTunnuse liik R keeles\nSelgitus\n\n\n\n\nBinaarskaala\nLogical\nAinult väärtused FALSE või TRUE\n\n\nNimiskaala\nCharacter\nMisiganes väärtused\n\n\nJärjestusskaala\nFactor\nMisiganes väärtused järjestatakse\n\n\nArvskaala\nNumeric\nAinult arvud\n\n\n\nTunnuste liike on tarkvaral tähtis eristada seetõttu, et sel juhul\n\nilmnevad lihtsamini puudulikud väärtused veergudes3;\ntarkvara määrab ise tunnuse jaoks vaikimisi sobiva funktsiooni rakendamise või andmete kuvamise viisi;\ntarkvara saab optimeerida arvutuskäiku nii, et see toimuks võimalikult kiiresti.\n\n\n\n\n3 Nt kui arvude veergu on sattunud mõni täht, siis saab vea tuvastada varakult tunnuse tüübi alusel ja ei ole vaja hiljem ilmneva vea põhjust mõnikod mitu tundi otsida.\n\nSauga, A. (2017). Statistika õpik majanduseriala üliõpilastele. TTÜ kirjastus.\n\n\nStevens, S. S. (1946). On the Theory of Scales of Measurement. Science, 103(2684), 677–680. https://doi.org/10.1126/science.103.2684.677"
  },
  {
    "objectID": "viited.html",
    "href": "viited.html",
    "title": "Viited",
    "section": "",
    "text": "Çetinkaya-Rundel, M., & Ellison, V. (2021). A Fresh Look at\nIntroductory Data Science. Journal of Statistics and Data Science\nEducation, 29(sup1), S16–S26. https://doi.org/10.1080/10691898.2020.1804497\n\n\nKelleher, J. D., & Tierney, B. (2018). Data science. The\nMIT Press.\n\n\nKitchin, R., & McArdle, G. (2016). What makes Big Data, Big Data?\nExploring the ontological characteristics of 26 datasets. Big Data\n& Society, 3(1), 205395171663113. https://doi.org/10.1177/2053951716631130\n\n\nPeng, R., & Matsui, E. (2016). The Art of Data Science.\nLeanpub.\n\n\nPinheiro, C., Patetta, M., & Safari, an O. M. C. (2021).\nIntroduction to Statistical and Machine Learning Methods for Data\nScience. SAS Institute Inc.\n\n\nSaltz, J. S., & Stanton, J. M. (2017). An introduction to data\nscience. SAGE Publications, Inc.\n\n\nSauga, A. (2017). Statistika õpik majanduseriala üliõpilastele.\nTTÜ kirjastus.\n\n\nSpiegelhalter, D. J. (2019). The art of statistics: learning from\ndata. Pelican Books.\n\n\nStevens, S. S. (1946). On the Theory of Scales of Measurement.\nScience, 103(2684), 677–680. https://doi.org/10.1126/science.103.2684.677\n\n\nTaddy, M. (2019). Business data science: combining machine learning\nand economics to optimize, automate, and accelerate business\ndecisions (First edition). McGraw-Hill Education.\n\n\nWickham, H. (2014). Tidy Data. Journal of Statistical Software,\n059(i10). https://ideas.repec.org/a/jss/jstsof/v059i10.html\n\n\nWu, J. (1997). Statistics = data science? http://www2.\nisye. gatech. edu/~ jeffwu/presentations/datascience.pdf"
  }
]